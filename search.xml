<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JVM-1.JVM内存管理]]></title>
    <url>%2F2019%2F08%2F10%2FJVM-1-JVM%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[1. JVM&#x5185;&#x5B58;&#x7ED3;&#x6784;Java &#x865A;&#x62DF;&#x673A;&#x5728;&#x8FD0;&#x884C; Java &#x7A0B;&#x5E8F; &#x65F6;&#xFF0C;&#x628A;&#x5B83;&#x6240;&#x7BA1;&#x7406;&#x7684;&#x5185;&#x5B58;&#x5212;&#x5206;&#x4E3A;&#x82E5;&#x5E72;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x533A;&#x57DF;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x4E94;&#x4E2A;&#x90E8;&#x5206;&#xFF1A;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x3001;Java &#x5806;&#x3001;Java &#x865A;&#x62DF;&#x673A;&#x6808;&#x3001;&#x65B9;&#x6CD5;&#x533A;&#x548C;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x3002; 1. &#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x662F;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6240;&#x6267;&#x884C;&#x7684;&#x5B57;&#x8282;&#x7801;&#x7684;&#x884C;&#x53F7;&#x6307;&#x793A;&#x5668;&#xFF0C;&#x5B83;&#x4F1A;&#x6307;&#x51FA;&#x4E0B;&#x4E00;&#x6761;&#x5C06;&#x8981;&#x6267;&#x884C;&#x7684;&#x6307;&#x4EE4;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5B57;&#x8282;&#x7801;&#x89E3;&#x91CA;&#x5668;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x6539;&#x53D8;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#x6765;&#x9009;&#x53D6;&#x7A0B;&#x5E8F;&#x63A5;&#x4E0B;&#x6765;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x3002; &#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x662F;&#x7EBF;&#x7A0B;&#x79C1;&#x6709;&#x7684;&#x4E00;&#x5C0F;&#x5757;&#x5185;&#x5B58;&#xFF0C;&#x6BCF;&#x6761;&#x7EBF;&#x7A0B;&#x90FD;&#x8981;&#x6709;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x4EE5;&#x4F7F;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x540E;&#x6062;&#x590D;&#x5230;&#x6B63;&#x786E;&#x7684;&#x6267;&#x884C;&#x4F4D;&#x7F6E;&#x3002; &#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x6B63;&#x5728;&#x6267;&#x884C; Java&#x65B9;&#x6CD5;&#xFF0C;&#x5219;&#x8BA1;&#x6570;&#x5668;&#x8BB0;&#x5F55;&#x7684;&#x662F;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x865A;&#x62DF;&#x673A;&#x5B57;&#x8282;&#x7801;&#x6307;&#x4EE4;&#x7684;&#x5730;&#x5740; &#x5982;&#x679C;&#x6267;&#x884C; native&#x65B9;&#x6CD5;&#xFF0C;&#x5219;&#x8BA1;&#x6570;&#x5668;&#x4E3A;&#x7A7A; &#x5B83;&#x4E5F;&#x662F;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0; OutOfMemoryError&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x3002; 2. Java&#x865A;&#x62DF;&#x673A;&#x6808;&#x4E0E;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x4E00;&#x6837;&#xFF0C;Java&#x865A;&#x62DF;&#x673A;&#x6808;&#x4E5F;&#x662F;&#x7EBF;&#x7A0B;&#x79C1;&#x6709;&#x7684;&#xFF0C;&#x5728;&#x7EBF;&#x7A0B;&#x521B;&#x5EFA;&#x65F6; Java&#x6808;&#x4F1A;&#x88AB;&#x521B;&#x5EFA;&#xFF0C;&#x6BCF;&#x4E2A;&#x65B9;&#x6CD5;&#x5728;&#x5728;&#x6267;&#x884C;&#x7684;&#x540C;&#x65F6;&#x90FD;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6808;&#x5E27;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x8868;&#xFF0C;&#x64CD;&#x4F5C;&#x6570;&#x6808;&#xFF0C;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#xFF0C;&#x65B9;&#x6CD5;&#x51FA;&#x53E3;&#x7B49;&#x4FE1;&#x606F;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x4ECE;&#x8C03;&#x7528;&#x76F4;&#x81F3;&#x6267;&#x884C;&#x5B8C;&#x6210;&#xFF0C;&#x90FD;&#x5BF9;&#x5E94;&#x7740;&#x4E00;&#x4E2A;&#x6808;&#x5E27;&#x5728;&#x865A;&#x62DF;&#x673A;&#x6808;&#x4E2D;&#x5165;&#x6808;&#x5230;&#x51FA;&#x6808;&#x7684;&#x8FC7;&#x7A0B;&#x3002; &#x4E00;&#x822C;&#x6240;&#x8C13;&#x7684;&#x201C;&#x6808;&#x201D;&#xFF0C;&#x6307;&#x7684;&#x662F;&#x865A;&#x62DF;&#x673A;&#x6808;&#x4E2D;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x8868;&#x90E8;&#x5206;&#xFF0C;&#x5176;&#x4E2D;&#x5B58;&#x653E;&#x4E86;&#x5404;&#x79CD;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;( 8&#x79CD;)&#xFF0C;&#x5BF9;&#x8C61;&#x5F15;&#x7528;(reference&#x7C7B;&#x578B;) &#x548C; returnAddress&#x7C7B;&#x578B;&#x3002;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x8868;&#x6240;&#x9700;&#x7684;&#x7A7A;&#x95F4;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5C31;&#x5DF2;&#x7ECF;&#x786E;&#x5B9A;&#x5E76;&#x5B8C;&#x6210;&#x5206;&#x914D;&#xFF0C;&#x5728;&#x65B9;&#x6CD5;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x4E0D;&#x4F1A;&#x88AB;&#x6539;&#x53D8;&#x3002; Java&#x865A;&#x62DF;&#x6808;&#x4E2D;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x4E24;&#x79CD;&#x5F02;&#x5E38;&#xFF1A; StackOverflowError&#xFF1A;&#x7EBF;&#x7A0B;&#x8BF7;&#x6C42;&#x7684;&#x6808;&#x6DF1;&#x5EA6;&#x5927;&#x4E8E;&#x865A;&#x62DF;&#x673A;&#x6240;&#x5141;&#x8BB8;&#x7684;&#x6DF1;&#x5EA6; OutOfMemoryError&#xFF1A;&#x865A;&#x62DF;&#x673A;&#x6808;&#x6269;&#x5C55;&#x65F6;&#x65E0;&#x6CD5;&#x7533;&#x8BF7;&#x5230;&#x8DB3;&#x591F;&#x7684;&#x5185;&#x5B58; 3. &#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x4E0E; Java&#x865A;&#x62DF;&#x673A;&#x6808;&#x7684;&#x4F5C;&#x7528;&#x7C7B;&#x4F3C;&#xFF0C;&#x533A;&#x522B;&#x662F; Java&#x865A;&#x62DF;&#x673A;&#x6808;&#x4E3A;&#x865A;&#x62DF;&#x673A;&#x6267;&#x884C; Java&#x65B9;&#x6CD5;&#x670D;&#x52A1;&#xFF0C;&#x800C;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x4E3A;&#x865A;&#x62DF;&#x673A;&#x6267;&#x884C; Native&#x65B9;&#x6CD5;&#x670D;&#x52A1;&#x3002;&#x6709;&#x7684;&#x865A;&#x62DF;&#x673A;&#xFF08;&#x4F8B;&#x5982; HotSpot&#x865A;&#x62DF;&#x673A;&#xFF09;&#x76F4;&#x63A5;&#x628A;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x548C; Java&#x865A;&#x62DF;&#x673A;&#x6808;&#x5408;&#x5E76;&#x5728;&#x4E00;&#x8D77;&#x3002; &#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x4E5F;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA; StackOverflowError&#x548C; OutOfMemoryError&#x5F02;&#x5E38;&#x3002; Native&#x65B9;&#x6CD5;&#x662F;Java&#x4E2D;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x5B9E;&#x73B0;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;C 4. Java &#x5806;Java&#x5806;&#x662F;&#x662F;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x3002;&#x5B83;&#x4E3A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#xFF0C;&#x5728;&#x865A;&#x62DF;&#x673A;&#x542F;&#x52A8;&#x65F6;&#x521B;&#x5EFA;&#xFF0C;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x90FD;&#x5B58;&#x50A8;&#x5728; Java&#x5806;&#x4E2D;&#x3002; Java&#x5806;&#x4E5F;&#x88AB;&#x79F0;&#x4F5C; &quot;GC&quot;&#x5806;&#x3002;&#x4ECE;&#x5185;&#x5B58;&#x56DE;&#x6536;&#x89D2;&#x5EA6;&#x770B;&#xFF0C;&#x53EF;&#x5206;&#x4E3A;&#x65B0;&#x751F;&#x4EE3;&#x548C;&#x8001;&#x5E74;&#x4EE3;&#x3002;&#x800C;&#x65B0;&#x751F;&#x4EE3;&#x53C8;&#x53EF;&#x5206;&#x4E3A; Eden&#x533A;&#x3001;From Survivor&#x533A;&#x3001;To Survivor&#x533A;&#x7B49;&#x3002; Java&#x5806;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x65E2;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E3A;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6269;&#x5C55;&#x7684;&#x3002;&#x5F53;&#x524D;&#x865A;&#x62DF;&#x673A;&#x90FD;&#x6309;&#x7167;&#x53EF;&#x6269;&#x5C55;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x901A;&#x8FC7; -Xmx&#x548C; -Xms&#x63A7;&#x5236;&#x5806;&#x5927;&#x5C0F;&#x3002; &#x5982;&#x679C;&#x5806;&#x4E2D;&#x6CA1;&#x6709;&#x5185;&#x5B58;&#x5E76;&#x4E14;&#x4E5F;&#x65E0;&#x6CD5;&#x518D;&#x6269;&#x5C55;&#x65F6;&#xFF0C;&#x4F1A;&#x629B;&#x51FA; OutOfMemeoryError&#x5F02;&#x5E38;&#x3002; &#x5728;Java&#x4E2D;&#x4F7F;&#x7528;new&#x5173;&#x952E;&#x5B57;&#x521B;&#x5EFA;&#x7684;&#x5BF9;&#x8C61;&#x4E00;&#x822C;&#x653E;&#x5728;&#x5806;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5F15;&#x7528;&#x662F;&#x5728;Java&#x865A;&#x62DF;&#x673A;&#x6808;&#x4E2D;&#x3002; 5. &#x65B9;&#x6CD5;&#x533A;&#x65B9;&#x6CD5;&#x533A;&#x4E0E; Java &#x5806;&#x4E00;&#x6837;&#xFF0C;&#x4E3A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#x3002;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x5DF2;&#x88AB;&#x865A;&#x62DF;&#x673A;&#x52A0;&#x8F7D;&#x7684;&#x7C7B;&#x4FE1;&#x606F;&#xFF0C;&#x5E38;&#x91CF;&#xFF0C;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF0C;&#x5373;&#x65F6;&#x7F16;&#x8BD1;&#x5668;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x7B49;&#x6570;&#x636E;&#x3002;&#x4E5F;&#x53EB;&#x4F5C; Non-Heap&#xFF08;&#x975E;&#x5806;&#xFF09;&#x3002; &#x5982;&#x679C;&#x65B9;&#x6CD5;&#x533A;&#x65E0;&#x6CD5;&#x6EE1;&#x8DB3;&#x5185;&#x5B58;&#x5206;&#x914D;&#x9700;&#x6C42;&#xFF0C;&#x4F1A;&#x629B;&#x51FA; OutOfMemoryError &#x5F02;&#x5E38;&#x3002; JVM&#x52A0;&#x8F7D;Class&#x6587;&#x4EF6;&#x4E4B;&#x540E;&#x5BF9;&#x6BCF;&#x4E2A;&#x7C7B;&#x751F;&#x6210;&#x7684;class&#x5BF9;&#x8C61;&#x5B58;&#x653E;&#x5728;&#x8FD9;&#x4E2A;&#x533A;&#x57DF;&#x3002; 6. &#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x662F;&#x65B9;&#x6CD5;&#x533A;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;Class&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5E38;&#x91CF;&#x6C60;&#x7528;&#x4E8E;&#x7F16;&#x8BD1;&#x671F;&#x751F;&#x6210;&#x7684;&#x5404;&#x79CD;&#x5B57;&#x9762;&#x91CF;&#x548C;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x5728;&#x7C7B;&#x52A0;&#x8F7D;&#x540E;&#x88AB;&#x5B58;&#x5165;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x3002; &#x52A8;&#x6001;&#x6027;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x76F8;&#x5BF9;&#x4E8E; Class&#x6587;&#x4EF6;&#x5E38;&#x91CF;&#x6C60;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7279;&#x5F81;&#xFF0C;&#x5373;&#x4E0D;&#x8981;&#x6C42;&#x5E38;&#x91CF;&#x4E00;&#x5B9A;&#x53EA;&#x6709;&#x7F16;&#x8BD1;&#x671F;&#x624D;&#x80FD;&#x4EA7;&#x751F;&#xFF0C;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x4E5F;&#x53EF;&#x80FD;&#x5C06;&#x65B0;&#x7684;&#x5E38;&#x91CF;&#x653E;&#x5165;&#x6C60;&#x4E2D;&#x3002; &#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x53D7;&#x5230;&#x65B9;&#x6CD5;&#x533A;&#x5185;&#x5B58;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x5982;&#x679C;&#x5E38;&#x91CF;&#x6C60;&#x65E0;&#x6CD5;&#x518D;&#x7533;&#x8BF7;&#x5185;&#x5B58;&#xFF0C;&#x5C31;&#x4F1A;&#x629B;&#x51FA; OutOfMemoryError&#x5F02;&#x5E38;&#x3002; 7. &#x76F4;&#x63A5;&#x5185;&#x5B58;&#x76F4;&#x63A5;&#x5185;&#x5B58;&#x5E76;&#x4E0D;&#x7531; JVM&#x7BA1;&#x7406;&#xFF0C;&#x5B83;&#x662F;&#x5229;&#x7528; Native&#x51FD;&#x6570;&#x5E93;&#x5728; Java&#x5806;&#x5916;&#x7533;&#x8BF7;&#x5206;&#x914D;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#xFF0C;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5728; Java&#x5806;&#x548C; Native&#x5806;&#x4E2D;&#x590D;&#x5236;&#x6570;&#x636E;&#x4EE5;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x3002; &#x4F8B;&#x5982; NIO&#x4E2D;&#x7684; DirectByteBuffer&#x5C31;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x7684;&#x5F15;&#x7528;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x76F4;&#x63A5;&#x5185;&#x5B58;&#x3002; 2. &#x865A;&#x62DF;&#x673A;&#x5BF9;&#x8C61;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x7684;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x9047;&#x5230;&#x4E00;&#x4E2A;new&#x6307;&#x4EE4;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x68C0;&#x67E5;&#x8FD9;&#x4E2A;&#x6307;&#x4EE4;&#x7684;&#x53C2;&#x6570;&#x662F;&#x5426;&#x80FD;&#x5728;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#x5B9A;&#x4F4D;&#x5230;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#xFF0C;&#x68C0;&#x67E5;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#x4EE3;&#x8868;&#x7684;&#x7C7B;&#x662F;&#x5426;&#x88AB;&#x52A0;&#x8F7D;&#x3001;&#x89E3;&#x6790;&#x548C;&#x521D;&#x59CB;&#x5316;&#x3002;&#x6CA1;&#x6709;&#x7684;&#x8BDD;&#x5148;&#x6267;&#x884C;&#x7C7B;&#x52A0;&#x8F7D;&#x8FC7;&#x7A0B;&#x3002; &#x7136;&#x540E;&#x865A;&#x62DF;&#x673A;&#x8FDB;&#x884C;&#x5185;&#x5B58;&#x5206;&#x914D;&#xFF0C;&#x5206;&#x914D;&#x5185;&#x5B58;&#x90FD;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x96F6;(&#x4E0D;&#x5305;&#x62EC;&#x5BF9;&#x8C61;&#x5934;)&#x3002; &#x7136;&#x540E;&#x865A;&#x62DF;&#x673A;&#x5BF9;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x5FC5;&#x8981;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x5982;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x662F;&#x54EA;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3001;&#x5982;&#x4F55;&#x627E;&#x5230;&#x7C7B;&#x7684;&#x5143;&#x6570;&#x636E;&#x4FE1;&#x606F;&#x3001;&#x5BF9;&#x8C61;&#x7684;&#x54C8;&#x5E0C;&#x7801;&#x3001;&#x5BF9;&#x8C61;&#x7684;GC&#x5206;&#x4EE3;&#x5E74;&#x9F84;&#x7B49;&#x4FE1;&#x606F;&#x3002;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x5B58;&#x653E;&#x5728;&#x5BF9;&#x8C61;&#x7684;&#x5BF9;&#x8C61;&#x5934;&#x4E2D;&#x3002; &#x4E0A;&#x9762;&#x5DE5;&#x4F5C;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x4ECE;&#x865A;&#x62DF;&#x673A;&#x89D2;&#x5EA6;&#x770B;&#xFF0C;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#x5DF2;&#x7ECF;&#x4EA7;&#x751F;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x4ECE;Java&#x7A0B;&#x5E8F;&#x7684;&#x89C6;&#x89D2;&#x770B;&#xFF0C;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x624D;&#x521A;&#x521A;&#x5F00;&#x59CB;&#x3002;&#x4E4B;&#x540E;&#x9700;&#x8981;&#x5236;&#x5B9A;init&#x65B9;&#x6CD5;&#xFF0C;&#x5BF9;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#x3002; 2.1 &#x5BF9;&#x8C61;&#x7684;&#x5185;&#x5B58;&#x5E03;&#x5C40;&#x5BF9;&#x8C61;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x5E03;&#x5C40;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x533A;&#x57DF;&#xFF1A; &#x5BF9;&#x8C61;&#x5934;(Header) &#x5B9E;&#x4F8B;&#x6570;&#x636E;(Instance Data) &#x5BF9;&#x5176;&#x586B;&#x5145;(Padding) &#x5BF9;&#x8C61;&#x5934;&#x5305;&#x62EC;&#x4E24;&#x90E8;&#x5206;&#x4FE1;&#x606F;&#xFF1A; &#x5B58;&#x50A8;&#x5BF9;&#x8C61;&#x5431;&#x58F0;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x6570;&#x636E;&#xFF0C;&#x5B98;&#x65B9;&#x79F0;&#x4E3A;&#x201C;Mark Word&#x201D; &#x54C8;&#x5E0C;&#x7801; GC&#x5206;&#x4EE3;&#x5E74;&#x9F84; &#x9501;&#x72B6;&#x6001;&#x8868;&#x793A; &#x7EBF;&#x7A0B;&#x6301;&#x6709;&#x7684;&#x9501; &#x7C7B;&#x578B;&#x6307;&#x9488;&#xFF0C;&#x5BF9;&#x8C61;&#x6307;&#x5411;&#x5B83;&#x7684;&#x5143;&#x6570;&#x636E;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x865A;&#x62DF;&#x673A;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x6307;&#x6B63;&#x6765;&#x786E;&#x5B9A;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x662F;&#x54EA;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x5982;&#x679C;&#x5BF9;&#x8C61;&#x662F;&#x4E00;&#x4E2A;Java&#x6570;&#x7EC4;&#xFF0C;&#x5BF9;&#x8C61;&#x5934;&#x4E2D;&#x8FD8;&#x6709;&#x4E00;&#x5757;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x865A;&#x62DF;&#x673A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x666E;&#x901A;Java&#x5BF9;&#x8C61;&#x7684;&#x5143;&#x6570;&#x636E;&#x4FE1;&#x606F;&#x786E;&#x5B9A;Java&#x5BF9;&#x8C61;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x4F46;&#x662F;&#x4ECE;&#x6570;&#x7EC4;&#x7684;&#x5143;&#x6570;&#x636E;&#x4E2D;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x6570;&#x7EC4;&#x7684;&#x5927;&#x5C0F;&#x3002; &#x5BF9;&#x5176;&#x586B;&#x5145;&#x8FD9;&#x90E8;&#x5206;&#x4E0D;&#x662F;&#x5FC5;&#x7136;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x53EA;&#x662F;&#x5360;&#x4F4D;&#x7B26;&#x7684;&#x4F5C;&#x7528;&#x3002; 2.2 &#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE;&#x5B9A;&#x4F4D;Java&#x7A0B;&#x5E8F;&#x901A;&#x8FC7;&#x6808;&#x4E0A;&#x7684;reference&#x6570;&#x636E;&#x6765;&#x64CD;&#x4F5C;&#x5806;&#x4E0A;&#x7684;&#x5177;&#x4F53;&#x5BF9;&#x8C61;&#x3002;reference&#x7C7B;&#x578B;&#x5728;Java&#x865A;&#x62DF;&#x673A;&#x89C4;&#x8303;&#x4E2D;&#x53EA;&#x89C4;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;&#x8FD9;&#x4E2A;&#x5F15;&#x7528;&#x5E94;&#x8BE5;&#x901A;&#x8FC7;&#x4F55;&#x79CD;&#x65B9;&#x5F0F;&#x53BB;&#x5B9A;&#x4F4D;&#xFF0C;&#x6240;&#x4EE5;&#x8BBF;&#x95EE;&#x65B9;&#x5F0F;&#x53D6;&#x51B3;&#x4E8E;&#x865A;&#x62DF;&#x673A;&#x5B9E;&#x73B0;&#x800C;&#x5B9A;&#x3002;&#x76EE;&#x524D;&#x4E3B;&#x6D41;&#x7684;&#x8BBF;&#x95EE;&#x65B9;&#x5F0F;&#x6709;&#x53E5;&#x67C4;&#x548C;&#x76F4;&#x63A5;&#x6307;&#x9488;&#x4E24;&#x79CD;&#x3002; &#x53E5;&#x67C4;&#x8BBF;&#x95EE;&#x7684;&#x8BDD;&#xFF0C;Java&#x5806;&#x4E2D;&#x5212;&#x5206;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x4F5C;&#x4E3A;&#x53E5;&#x67C4;&#x6C60;&#xFF0C;reference&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x662F;&#x5BF9;&#x8C61;&#x7684;&#x53E5;&#x67C4;&#x5730;&#x5740;&#x3002;&#x53E5;&#x67C4;&#x4E2D;&#x5305;&#x542B;&#x5BF9;&#x8C61;&#x7684;&#x5B9E;&#x4F8B;&#x6570;&#x636E;&#x4E0E;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x5404;&#x81EA;&#x7684;&#x5177;&#x4F53;&#x4FE1;&#x606F;&#x3002; &#x76F4;&#x63A5;&#x6307;&#x9488;&#x8BBF;&#x95EE;&#x7684;&#x8BDD;&#xFF0C;Java&#x5806;&#x5BF9;&#x8C61;&#x5E03;&#x5C40;&#x8003;&#x8651;&#x5982;&#x4F55;&#x653E;&#x7F6E;&#x8BBF;&#x95EE;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002;reference&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x76F4;&#x63A5;&#x662F;&#x5BF9;&#x8C61;&#x5730;&#x5740;&#x3002; &#x4F7F;&#x7528;&#x53E5;&#x67C4;&#x7684;&#x597D;&#x5904;&#xFF1A;reference&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x662F;&#x7A33;&#x5B9A;&#x7684;&#x53E5;&#x67C4;&#x5730;&#x5740;&#xFF0C;&#x5BF9;&#x8C61;&#x88AB;&#x79FB;&#x52A8;&#x65F6;&#x53EA;&#x4F1A;&#x6539;&#x53D8;&#x53E5;&#x67C4;&#x6C47;&#x603B;&#x7684;&#x5B9E;&#x4F8B;&#x6570;&#x636E;&#x6307;&#x9488;&#xFF0C;reference&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x3002; &#x4F7F;&#x7528;&#x76F4;&#x63A5;&#x6307;&#x9488;&#x7684;&#x597D;&#x5904;&#xFF1A;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#xFF0C;&#x8282;&#x7701;&#x4E86;&#x4E00;&#x6B21;&#x6307;&#x9488;&#x5B9A;&#x4F4D;&#x7684;&#x65F6;&#x95F4;&#x5F00;&#x9500;&#x3002;]]></content>
      <categories>
        <category>JVM</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java日志、门面模式]]></title>
    <url>%2F2019%2F08%2F02%2FJava%E6%97%A5%E5%BF%97%E5%8A%9F%E8%83%BD%E3%80%81%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Java&#x65E5;&#x5FD7;&#x3001;&#x95E8;&#x9762;&#x6A21;&#x5F0F; &#x65E5;&#x5FD7;&#x5C31;&#x662F;&#x8BB0;&#x5F55;&#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x8F68;&#x8FF9;&#xFF0C;&#x65B9;&#x4FBF;&#x67E5;&#x627E;&#x5173;&#x952E;&#x4FE1;&#x606F;&#xFF0C;&#x4E5F;&#x65B9;&#x4FBF;&#x5FEB;&#x901F;&#x5B9A;&#x4F4D;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002; Java &#x7A0B;&#x5E8F;&#x5458;&#x5728;&#x5F00;&#x53D1;&#x9879;&#x76EE;&#x65F6;&#x90FD;&#x662F;&#x4F9D;&#x8D56; Eclipse/ Idea &#x7B49;&#x5F00;&#x53D1;&#x5DE5;&#x5177;&#x7684; Debug &#x8C03;&#x8BD5;&#x529F;&#x80FD;&#x6765;&#x8DDF;&#x8E2A;&#x89E3;&#x51B3; Bug&#xFF0C;&#x5728;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x4F46;&#x9879;&#x76EE;&#x53D1;&#x5E03;&#x5230;&#x4E86;&#x6D4B;&#x8BD5;&#x3001;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x5462;&#xFF1F;&#x4F60;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x8BF4;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x5E76;&#x4E0D;&#x80FD;&#x5141;&#x8BB8;&#x8BA9;&#x4F60;&#x8FD9;&#x4E48;&#x505A;&#x3002; &#x65E5;&#x5FD7;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x5728;&#x6D4B;&#x8BD5;&#x3001;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x6CA1;&#x6709; Debug &#x8C03;&#x8BD5;&#x5DE5;&#x5177;&#x65F6;&#x5F00;&#x53D1;&#x3001;&#x6D4B;&#x8BD5;&#x4EBA;&#x5458;&#x5B9A;&#x4F4D;&#x95EE;&#x9898;&#x7684;&#x624B;&#x6BB5;&#x3002;&#x65E5;&#x5FD7;&#x6253;&#x5F97;&#x597D;&#xFF0C;&#x5C31;&#x80FD;&#x6839;&#x636E;&#x65E5;&#x5FD7;&#x7684;&#x8F68;&#x8FF9;&#x5FEB;&#x901F;&#x5B9A;&#x4F4D;&#x5E76;&#x89E3;&#x51B3;&#x7EBF;&#x4E0A;&#x95EE;&#x9898;&#xFF0C;&#x53CD;&#x4E4B;&#xFF0C;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x4E0D;&#x597D;&#x4E0D;&#x80FD;&#x5B9A;&#x4F4D;&#x5230;&#x95EE;&#x9898;&#x4E0D;&#x8BF4;&#x53CD;&#x800C;&#x4F1A;&#x5F71;&#x54CD;&#x7CFB;&#x7EDF;&#x7684;&#x6027;&#x80FD;&#x3002; &#x4F18;&#x79C0;&#x7684;&#x9879;&#x76EE;&#x90FD;&#x662F;&#x80FD;&#x6839;&#x636E;&#x65E5;&#x5FD7;&#x5B9A;&#x4F4D;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5728;&#x7EBF;&#x8C03;&#x8BD5; &#x5E38;&#x89C1;&#x7684;Java&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x6709;&#x5982;&#x4E0B;&#x51E0;&#x7C7B;&#xFF1A; Logging Log4j commons-logging Slf4j Logback 1. Loggingjava.util.logging.Logger&#x662F;JDK&#x81EA;&#x5E26;&#x7684;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#x7C7B;&#x3002; 1.1 &#x521B;&#x5EFA;Logger&#x5BF9;&#x8C61; static Logger getLogger(String name)&#x67E5;&#x627E;&#x6216;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;logger&#xFF0C;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x5B58;&#x5728;&#x7684;logger static Logger getLogger(String name, String resourceBundleName)&#x4E3A;&#x6307;&#x5B9A;&#x5B50;&#x7CFB;&#x7EDF;&#x67E5;&#x627E;&#x6216;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; logger. 1.2 Logger&#x7EA7;&#x522B;&#x6309;&#x7167;&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x7684;&#x7EA7;&#x522B;&#x5982;&#x4E0B;&#xFF1A; SEVERE WARNING INFO CONFIG FINE FINER FINEST &#x6B64;&#x5916;&#x8FD8;&#x6709;OFF&#x503C;&#xFF0C;&#x4EE3;&#x8868;&#x5173;&#x95ED;&#x65E5;&#x5FD7;&#x529F;&#x80FD;&#x3002;ALL&#x4EE3;&#x8868;&#x542F;&#x7528;&#x6240;&#x6709;&#x6D88;&#x606F;&#x7684;&#x65E5;&#x5FD7;&#x529F;&#x80FD;&#x3002; logger&#x9ED8;&#x8BA4;&#x7684;&#x7EA7;&#x522B;&#x662F;INFO&#xFF0C;&#x6BD4;INFO&#x66F4;&#x4F4E;&#x7684;&#x65E5;&#x5FD7;&#x5C06;&#x4E0D;&#x663E;&#x793A;&#x3002; 1.3 HandlerHandler &#x5BF9;&#x8C61;&#x4ECE; Logger &#x4E2D;&#x83B7;&#x53D6;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5C06;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x5BFC;&#x51FA;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5B83;&#x53EF;&#x5C06;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x5199;&#x5165;&#x63A7;&#x5236;&#x53F0;&#x6216;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x53D1;&#x9001;&#x5230;&#x7F51;&#x7EDC;&#x65E5;&#x5FD7;&#x670D;&#x52A1;&#x4E2D;&#xFF0C;&#x6216;&#x5C06;&#x5176;&#x8F6C;&#x53D1;&#x5230;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x65E5;&#x5FD7;&#x4E2D;&#x3002;&#x53EF;&#x901A;&#x8FC7;&#x6267;&#x884C; setLevel(Level.OFF) &#x6765;&#x7981;&#x7528; Handler&#xFF0C;&#x5E76;&#x53EF;&#x901A;&#x8FC7;&#x6267;&#x884C;&#x9002;&#x5F53;&#x7EA7;&#x522B;&#x7684; setLevel &#x6765;&#x91CD;&#x65B0;&#x542F;&#x7528;&#x3002;Handler &#x7C7B;&#x901A;&#x5E38;&#x4F7F;&#x7528; LogManager &#x5C5E;&#x6027;&#x6765;&#x8BBE;&#x7F6E; Handler &#x7684; Filter&#x3001;Formatter &#x548C; Level &#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x3002; &#x9ED8;&#x8BA4;&#x7684;&#x65E5;&#x5FD7;&#x65B9;&#x5F0F;&#x662F;xml&#x683C;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x65E5;&#x5FD7;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x6E05;&#x6670;&#x7684;&#x770B;&#x5230;&#x64CD;&#x4F5C;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x800C;&#x8FD9;&#x79CD;&#x683C;&#x5F0F;&#x6709;&#x70B9;&#x591A;&#xFF0C;&#x4E71;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8981;&#x81EA;&#x5B9A;&#x4E49;logger&#x7684;&#x683C;&#x5F0F;&#x3002;&#x9700;&#x8981;&#x7528;Formatter&#x6765;&#x5B9A;&#x4E49; 1.4 Logger&#x7684;FormatterFormatter &#x4E3A;&#x683C;&#x5F0F;&#x5316; LogRecords &#x63D0;&#x4F9B;&#x652F;&#x6301;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x6BCF;&#x4E2A;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55; Handler &#x90FD;&#x6709;&#x5173;&#x8054;&#x7684; Formatter&#x3002;Formatter &#x63A5;&#x53D7; LogRecord&#xFF0C;&#x5E76;&#x5C06;&#x5B83;&#x8F6C;&#x6362;&#x4E3A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x3002; LogRecord &#x5BF9;&#x8C61;&#x7528;&#x4E8E;&#x5728;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x548C;&#x5355;&#x4E2A;&#x65E5;&#x5FD7; Handler &#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x65E5;&#x5FD7;&#x8BF7;&#x6C42;&#x3002;LogRecord(Level level, String msg) 1.5&#x5B9E;&#x4F8B;123456789101112131415161718192021222324252627282930313233343536373839404142public class LogTest2 { @Test public void TestOne(){ Logger a = Logger.getLogger(&quot;log&quot;); // &#x83B7;&#x53D6;&#x4E00;&#x4E2A;Logger(&#x5DE5;&#x5382;&#x65B9;&#x6CD5;) Logger b = Logger.getLogger(&quot;log&quot;); System.out.println(a == b); // &#x540C;&#x540D;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;Logger,&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF1F; a.setLevel(Level.ALL); FileHandler ft = null; try { ft = new FileHandler(&quot;./log.txt&quot;, false); // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x5230;&#x6587;&#x4EF6;&#x7684;Handler&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x4E3A;&#x662F;&#x5426;&#x8FFD;&#x52A0;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;false(&#x4E0D;&#x8FFD;&#x52A0;) } catch (IOException e) { e.printStackTrace(); } ConsoleHandler ch = new ConsoleHandler(); // &#x5B9A;&#x4E49;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;Handler ch.setLevel(Level.ALL); // &#x8BBE;&#x7F6E;&#x8F93;&#x51FA;&#x7B49;&#x7EA7;&#xFF0C;&#x9AD8;&#x4E8E;&#x8FD9;&#x4E2A;&#x7B49;&#x7EA7;&#x7684;&#x4F1A;&#x8F93;&#x51FA;&#x5230;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E; ch.setFormatter(new MyFormatter()); // &#x8BBE;&#x7F6E;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF0C;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; a.addHandler(ch); // &#x5C06;&#x8FD9;&#x4E2A;Handler&#x6DFB;&#x52A0;&#x5230;&#x5BF9;&#x5E94;&#x7684;Logger&#x4E0A; ft.setLevel(Level.ALL); ft.setFormatter(new MyFormatter()); a.addHandler(ft); a.info(&quot;fdaf&quot;); a.finer(&quot;fdsa&quot;); try{ int i = 1 / 0; }catch (Exception e){ a.log(Level.SEVERE, &quot;&#x9664;&#x96F6;&#x4E86;&quot;); } }}class MyFormatter extends Formatter{ /** &#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x65E5;&#x5FD7;&#x7684;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;XML&#x683C;&#x5F0F; */ @Override public String format(LogRecord record) { // &#x4F20;&#x5165;&#x7684;&#x662F;&#x4EE3;&#x8868;&#x4FE1;&#x606F;&#x7684;&#x7C7B;&#xFF0C;&#x53EF;&#x901A;&#x8FC7;&#x5176;get&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5404;&#x4E2A;&#x5C5E;&#x6027;&#x503C;&#x3002; return record.getLevel() + &quot;&#xFF1A;&#x5185;&#x5BB9;&#xFF1A;&quot; + record.getMessage() + &quot;\n&quot;; }} 2. &#x95E8;&#x9762;&#x6A21;&#x5F0F; &#x95E8;&#x9762;&#x6A21;&#x5F0F;&#xFF0C;&#x5176;&#x6838;&#x5FC3;&#x4E3A;&#x5916;&#x90E8;&#x4E0E;&#x4E00;&#x4E2A;&#x5B50;&#x7CFB;&#x7EDF;&#x7684;&#x901A;&#x4FE1;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x5916;&#x89C2;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#xFF0C;&#x4F7F;&#x5F97;&#x5B50;&#x7CFB;&#x7EDF;&#x66F4;&#x6613;&#x4E8E;&#x4F7F;&#x7528;&#x3002;&#x7528;&#x4E00;&#x5F20;&#x56FE;&#x6765;&#x8868;&#x793A;&#x95E8;&#x9762;&#x6A21;&#x5F0F;&#x7684;&#x7ED3;&#x6784;&#x4E3A; &#x95E8;&#x9762;&#x6A21;&#x5F0F;&#x7684;&#x6838;&#x5FC3;&#x4E3A;Facade&#x5373;&#x95E8;&#x9762;&#x5BF9;&#x8C61;&#xFF0C;&#x95E8;&#x9762;&#x5BF9;&#x8C61;&#x6838;&#x5FC3;&#x4E3A;&#x51E0;&#x4E2A;&#x70B9;&#xFF1A; &#x77E5;&#x9053;&#x6240;&#x6709;&#x5B50;&#x89D2;&#x8272;&#x7684;&#x529F;&#x80FD;&#x548C;&#x8D23;&#x4EFB; &#x5C06;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x6765;&#x7684;&#x8BF7;&#x6C42;&#x59D4;&#x6D3E;&#x5230;&#x5B50;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x5B9E;&#x9645;&#x4E1A;&#x52A1;&#x903B;&#x8F91; &#x4E0D;&#x53C2;&#x4E0E;&#x5B50;&#x7CFB;&#x7EDF;&#x5185;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x5B9E;&#x73B0; &#x5728;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x9886;&#x57DF;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x53E5;&#x8BDD;&#xFF1A;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x9886;&#x57DF;&#x7684;&#x4EFB;&#x4F55;&#x95EE;&#x9898;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x95F4;&#x63A5;&#x7684;&#x4E2D;&#x95F4;&#x5C42;&#x6765;&#x89E3;&#x51B3;&#x3002;&#x800C;&#x95E8;&#x9762;&#x6A21;&#x5F0F;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x8FD9;&#x53E5;&#x8BDD;&#x7684;&#x5178;&#x578B;&#x5B9E;&#x8DF5; &#x4EE3;&#x7801;&#x5B9E;&#x4F8B;: 1234567891011121314151617181920212223242526272829303132333435public class SystemA { public void operationA(){ System.out.println(&quot;operation a...&quot;); }}public class SystemB { public void operationB() { System.out.println(&quot;operation b...&quot;); }}public class SystemC { public void operationC() { System.out.println(&quot;operation c...&quot;); }}public class Facade { public void wrapOperation() { SystemA a = new SystemA(); a.operationA(); SystemB b = new SystemB(); b.operationB(); SystemC c = new SystemC(); c.operationC(); }}public class Client { public static void main(String[] args) { Facade facade = new Facade(); facade.wrapOperation(); }} 3. self4j&#x300A;&#x963F;&#x91CC;&#x5DF4;&#x5DF4;Java&#x5F00;&#x53D1;&#x624B;&#x518C;&#x300B;&#x4E2D;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x53E5;&#x8BDD;&#xFF1A; &#x4E3A;&#x4E86;&#x5728;&#x5E94;&#x7528;&#x4E2D;&#x5C4F;&#x853D;&#x6389;&#x5E95;&#x5C42;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#xFF0C;&#x5373;&#x4F7F;&#x6709;&#x4E00;&#x5929;&#x8981;&#x66F4;&#x6362;&#x4EE3;&#x7801;&#x7684;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;jar&#x5305;&#xFF0C;&#x6700;&#x591A;&#x518D;&#x6539;&#x6539;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x76F8;&#x5173;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x89E3;&#x9664;&#x4E86;&#x5E94;&#x7528;&#x548C;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x3002; &#x65E5;&#x5FD7;&#x95E8;&#x9762;&#x5C31;&#x50CF;&#x996D;&#x5E97;&#x7684;&#x670D;&#x52A1;&#x5458;&#xFF0C;&#x800C;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x5C31;&#x50CF;&#x662F;&#x540E;&#x53A8;&#x7684;&#x53A8;&#x5E08;&#x3002;&#x5BF9;&#x4E8E;&#x987E;&#x5BA2;&#x8FD9;&#x4E2A;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x5230;&#x996D;&#x5E97;&#x70B9;&#x83DC;&#xFF0C;&#x6211;&#x53EA;&#x9700;&#x8981;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5458;&#x6211;&#x8981;&#x4E00;&#x76D8;&#x756A;&#x8304;&#x7092;&#x86CB;&#x5373;&#x53EF;&#xFF0C;&#x6211;&#x4E0D;&#x5173;&#x5FC3;&#x540E;&#x53A8;&#x7684;&#x6240;&#x6709;&#x4E8B;&#x60C5;&#x3002;&#x56E0;&#x4E3A;&#x867D;&#x7136;&#x4E3B;&#x53A8;&#x4ECE;&#x628A;&#x8FD9;&#x9053;&#x83DC;&#x79F0;&#x4E4B;&#x4E3A;&#x300E;&#x756A;&#x8304;&#x7092;&#x86CB;&#x300F;A&#x53A8;&#x5E08;&#x6362;&#x6210;&#x4E86;&#x628A;&#x8FD9;&#x9053;&#x83DC;&#x79F0;&#x4E4B;&#x4E3A;&#x300E;&#x897F;&#x7EA2;&#x67FF;&#x7092;&#x9E21;&#x86CB;&#x300F;&#x7684;B&#x53A8;&#x5E08;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x987E;&#x5BA2;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x5FC3;&#xFF0C;&#x4ED6;&#x53EA;&#x8981;&#x4E0B;&#x8FBE;&#x300E;&#x756A;&#x8304;&#x7092;&#x86CB;&#x300F;&#x7684;&#x547D;&#x4EE4;&#x7ED9;&#x5230;&#x670D;&#x52A1;&#x5458;&#xFF0C;&#x7531;&#x670D;&#x52A1;&#x5458;&#x518D;&#x53BB;&#x7FFB;&#x8BD1;&#x7ED9;&#x53A8;&#x5E08;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; &#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x8BBE;&#x8BA1;&#x7684;&#x5168;&#x9762;&#x3001;&#x5B8C;&#x5584;&#x7684;&#x65E5;&#x5FD7;&#x95E8;&#x9762;&#x6765;&#x8BF4;&#xFF0C;&#x4ED6;&#x4E5F;&#x5E94;&#x8BE5;&#x662F;&#x5929;&#x7136;&#x5C31;&#x517C;&#x5BB9;&#x4E86;&#x591A;&#x79CD;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x7684;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5E95;&#x5C42;&#x6846;&#x67B6;&#x7684;&#x66F4;&#x6362;&#xFF0C;&#x65E5;&#x5FD7;&#x95E8;&#x9762;&#x51E0;&#x4E4E;&#x4E0D;&#x9700;&#x8981;&#x6539;&#x52A8;&#x3002; &#x65E5;&#x5FD7;&#x95E8;&#x9762;&#x7684;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x597D;&#x5904;&#x2014;&#x2014;&#x89E3;&#x8026; Java&#x7B80;&#x6613;&#x65E5;&#x5FD7;&#x95E8;&#x9762;&#xFF08;Simple Logging Facade for Java&#xFF0C;&#x7F29;&#x5199;SLF4J&#xFF09;&#xFF0C;&#x662F;&#x4E00;&#x5957;&#x5305;&#x88C5;Logging &#x6846;&#x67B6;&#x7684;&#x754C;&#x9762;&#x7A0B;&#x5F0F;&#xFF0C;&#x4EE5;&#x5916;&#x89C2;&#x6A21;&#x5F0F;&#x5B9E;&#x73B0;&#x3002;&#x53EF;&#x4EE5;&#x5728;&#x8F6F;&#x4EF6;&#x90E8;&#x7F72;&#x7684;&#x65F6;&#x5019;&#x51B3;&#x5B9A;&#x8981;&#x4F7F;&#x7528;&#x7684; Logging &#x6846;&#x67B6;&#xFF0C;&#x76EE;&#x524D;&#x4E3B;&#x8981;&#x652F;&#x63F4;&#x7684;&#x6709;Java Logging API&#x3001;Log4j&#x53CA;logback&#x7B49;&#x6846;&#x67B6;&#x3002; SLF4J&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x95E8;&#x9762;&#x670D;&#x52A1;&#x800C;&#x5DF2;&#xFF0C;&#x4ED6;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#xFF0C;&#x771F;&#x6B63;&#x7684;&#x65E5;&#x5FD7;&#x7684;&#x8F93;&#x51FA;&#x76F8;&#x5173;&#x7684;&#x5B9E;&#x73B0;&#x8FD8;&#x662F;&#x8981;&#x4F9D;&#x8D56;Log4j&#x3001;logback&#x7B49;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x7684;&#x3002; &#x8BF7;&#x4E0D;&#x8981;&#x5728;&#x4F60;&#x7684;Java&#x4EE3;&#x7801;&#x4E2D;&#x51FA;&#x73B0;&#x4EFB;&#x4F55;Log4j&#x7B49;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x7684;API&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x800C;&#x662F;&#x5E94;&#x8BE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;SLF4J&#x8FD9;&#x79CD;&#x65E5;&#x5FD7;&#x95E8;&#x9762; &#x4F7F;&#x7528;&#x65B9;&#x6CD5;12345@Testpublic void testSlf4j() { Logger logger = LoggerFactory.getLogger(Object.class); logger.error(&quot;123&quot;);} &#x5728;&#x914D;&#x7F6E;&#x4F9D;&#x8D56;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x5177;&#x4F53;&#x7684;&#x65E5;&#x5FD7;&#x5B9E;&#x73B0;&#x6846;&#x67B6;&#xFF1A; 1234567891011121314151617&lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.26&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt; &lt;version&gt;1.7.26&lt;/version&gt;&lt;/dependency&gt; 4. log4jLog4j&#x6709;&#x4E09;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x7EC4;&#x4EF6;&#xFF1A; Loggers(&#x8BB0;&#x5F55;&#x5668;):&#x65E5;&#x5FD7;&#x7C7B;&#x522B;&#x548C;&#x7EA7;&#x522B;; Appenders (&#x8F93;&#x51FA;&#x6E90;):&#x65E5;&#x5FD7;&#x8981;&#x8F93;&#x51FA;&#x7684;&#x5730;&#x65B9;; Layouts(&#x5E03;&#x5C40;):&#x65E5;&#x5FD7;&#x4EE5;&#x4F55;&#x79CD;&#x5F62;&#x5F0F;&#x8F93;&#x51FA; 4.1 LoggerLoggers&#x7EC4;&#x4EF6;&#x5728;&#x6B64;&#x7CFB;&#x7EDF;&#x4E2D;&#x88AB;&#x5206;&#x4E3A;&#x4E94;&#x4E2A;&#x7EA7;&#x522B;&#xFF1A;DEBUG&#x3001;INFO&#x3001;WARN&#x3001;ERROR&#x548C;FATAL&#x3002;&#x8FD9;&#x4E94;&#x4E2A;&#x7EA7;&#x522B;&#x662F;&#x6709;&#x987A;&#x5E8F;&#x7684;&#xFF0C;DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL&#xFF0C;&#x5206;&#x522B;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x8FD9;&#x6761;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x7684;&#x91CD;&#x8981;&#x7A0B;&#x5EA6;&#xFF0C;&#x660E;&#x767D;&#x8FD9;&#x4E00;&#x70B9;&#x5F88;&#x91CD;&#x8981;&#xFF0C;Log4j&#x6709;&#x4E00;&#x4E2A;&#x89C4;&#x5219;&#xFF1A;&#x53EA;&#x8F93;&#x51FA;&#x7EA7;&#x522B;&#x4E0D;&#x4F4E;&#x4E8E;&#x8BBE;&#x5B9A;&#x7EA7;&#x522B;&#x7684;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#xFF0C;&#x5047;&#x8BBE;Loggers&#x7EA7;&#x522B;&#x8BBE;&#x5B9A;&#x4E3A;INFO&#xFF0C;&#x5219;INFO&#x3001;WARN&#x3001;ERROR&#x548C;FATAL&#x7EA7;&#x522B;&#x7684;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x90FD;&#x4F1A;&#x8F93;&#x51FA;&#xFF0C;&#x800C;&#x7EA7;&#x522B;&#x6BD4;INFO&#x4F4E;&#x7684;DEBUG&#x5219;&#x4E0D;&#x4F1A;&#x8F93;&#x51FA;&#x3002; 4.2 Appenders&#x7981;&#x7528;&#x548C;&#x4F7F;&#x7528;&#x65E5;&#x5FD7;&#x8BF7;&#x6C42;&#x53EA;&#x662F;Log4j&#x7684;&#x57FA;&#x672C;&#x529F;&#x80FD;&#xFF0C;Log4j&#x65E5;&#x5FD7;&#x7CFB;&#x7EDF;&#x8FD8;&#x63D0;&#x4F9B;&#x8BB8;&#x591A;&#x5F3A;&#x5927;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x6BD4;&#x5982;&#x5141;&#x8BB8;&#x628A;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5982;&#x63A7;&#x5236;&#x53F0;&#xFF08;Console&#xFF09;&#x3001;&#x6587;&#x4EF6;&#xFF08;Files&#xFF09;&#x7B49;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5929;&#x6570;&#x6216;&#x8005;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x4EA7;&#x751F;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x4EE5;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x53D1;&#x9001;&#x5230;&#x5176;&#x5B83;&#x5730;&#x65B9;&#x7B49;&#x7B49;&#x3002; &#x5E38;&#x4F7F;&#x7528;&#x7684;&#x7C7B;&#x5982;&#x4E0B;&#xFF1A; org.apache.log4j.ConsoleAppender&#xFF08;&#x63A7;&#x5236;&#x53F0;&#xFF09; org.apache.log4j.FileAppender&#xFF08;&#x6587;&#x4EF6;&#xFF09; org.apache.log4j.DailyRollingFileAppender&#xFF08;&#x6BCF;&#x5929;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#xFF09; org.apache.log4j.RollingFileAppender&#xFF08;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x5230;&#x8FBE;&#x6307;&#x5B9A;&#x5C3A;&#x5BF8;&#x7684;&#x65F6;&#x5019;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#xFF09; org.apache.log4j.WriterAppender&#xFF08;&#x5C06;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x4EE5;&#x6D41;&#x683C;&#x5F0F;&#x53D1;&#x9001;&#x5230;&#x4EFB;&#x610F;&#x6307;&#x5B9A;&#x7684;&#x5730;&#x65B9;&#xFF09; 4.3 LayoutsLog4j&#x53EF;&#x4EE5;&#x5728;Appenders&#x7684;&#x540E;&#x9762;&#x9644;&#x52A0;Layouts&#x6765;&#x5B8C;&#x6210;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x3002; Layouts&#x63D0;&#x4F9B;&#x56DB;&#x79CD;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x6837;&#x5F0F;&#xFF0C;&#x5982;&#x6839;&#x636E;HTML&#x6837;&#x5F0F;&#x3001;&#x81EA;&#x7531;&#x6307;&#x5B9A;&#x6837;&#x5F0F;&#x3001;&#x5305;&#x542B;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x4E0E;&#x4FE1;&#x606F;&#x7684;&#x6837;&#x5F0F;&#x548C;&#x5305;&#x542B;&#x65E5;&#x5FD7;&#x65F6;&#x95F4;&#x3001;&#x7EBF;&#x7A0B;&#x3001;&#x7C7B;&#x522B;&#x7B49;&#x4FE1;&#x606F;&#x7684;&#x6837;&#x5F0F;&#x3002; &#x5E38;&#x4F7F;&#x7528;&#x7684;&#x7C7B;&#x5982;&#x4E0B;&#xFF1A; org.apache.log4j.HTMLLayout&#xFF08;&#x4EE5;HTML&#x8868;&#x683C;&#x5F62;&#x5F0F;&#x5E03;&#x5C40;&#xFF09; org.apache.log4j.PatternLayout&#xFF08;&#x53EF;&#x4EE5;&#x7075;&#x6D3B;&#x5730;&#x6307;&#x5B9A;&#x5E03;&#x5C40;&#x6A21;&#x5F0F;&#xFF09; org.apache.log4j.SimpleLayout&#xFF08;&#x5305;&#x542B;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x7684;&#x7EA7;&#x522B;&#x548C;&#x4FE1;&#x606F;&#x5B57;&#x7B26;&#x4E32;&#xFF09; org.apache.log4j.TTCCLayout&#xFF08;&#x5305;&#x542B;&#x65E5;&#x5FD7;&#x4EA7;&#x751F;&#x7684;&#x65F6;&#x95F4;&#x3001;&#x7EBF;&#x7A0B;&#x3001;&#x7C7B;&#x522B;&#x7B49;&#x4FE1;&#x606F;&#xFF09; PatternLayout&#x9009;&#x9879;&#xFF1A; ConversionPattern=%m%n&#xFF1A;&#x8BBE;&#x5B9A;&#x4EE5;&#x600E;&#x6837;&#x7684;&#x683C;&#x5F0F;&#x663E;&#x793A;&#x6D88;&#x606F;&#x3002; &#x683C;&#x5F0F;&#x5316;&#x7B26;&#x53F7;&#x8BF4;&#x660E;&#xFF1A; %p&#xFF1A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x5373;DEBUG&#xFF0C;INFO&#xFF0C;WARN&#xFF0C;ERROR&#xFF0C;FATAL&#x3002; %d&#xFF1A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x65F6;&#x95F4;&#x70B9;&#x7684;&#x65E5;&#x671F;&#x6216;&#x65F6;&#x95F4;&#xFF0C;&#x9ED8;&#x8BA4;&#x683C;&#x5F0F;&#x4E3A;ISO8601&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x5176;&#x540E;&#x6307;&#x5B9A;&#x683C;&#x5F0F;&#xFF0C;&#x5982;&#xFF1A;%d{yyyy/MM/dd HH:mm:ss,SSS}&#x3002; %r&#xFF1A;&#x8F93;&#x51FA;&#x81EA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x5230;&#x8F93;&#x51FA;&#x8BE5;log&#x4FE1;&#x606F;&#x8017;&#x8D39;&#x7684;&#x6BEB;&#x79D2;&#x6570;&#x3002; %t&#xFF1A;&#x8F93;&#x51FA;&#x4EA7;&#x751F;&#x8BE5;&#x65E5;&#x5FD7;&#x4E8B;&#x4EF6;&#x7684;&#x7EBF;&#x7A0B;&#x540D;&#x3002; %l&#xFF1A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4E8B;&#x4EF6;&#x7684;&#x53D1;&#x751F;&#x4F4D;&#x7F6E;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;%c.%M(%F:%L)&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x5305;&#x62EC;&#x7C7B;&#x5168;&#x540D;&#x3001;&#x65B9;&#x6CD5;&#x3001;&#x6587;&#x4EF6;&#x540D;&#x4EE5;&#x53CA;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x884C;&#x6570;&#x3002;&#x4F8B;&#x5982;&#xFF1A;test.TestLog4j.main(TestLog4j.java:10)&#x3002; %c&#xFF1A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x6240;&#x5C5E;&#x7684;&#x7C7B;&#x76EE;&#xFF0C;&#x901A;&#x5E38;&#x5C31;&#x662F;&#x6240;&#x5728;&#x7C7B;&#x7684;&#x5168;&#x540D;&#x3002; %M&#xFF1A;&#x8F93;&#x51FA;&#x4EA7;&#x751F;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x7684;&#x65B9;&#x6CD5;&#x540D;&#x3002; %F&#xFF1A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x6D88;&#x606F;&#x4EA7;&#x751F;&#x65F6;&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x3002; %L:&#xFF1A;&#x8F93;&#x51FA;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x884C;&#x53F7;&#x3002; %m:&#xFF1A;&#x8F93;&#x51FA;&#x4EE3;&#x7801;&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x5177;&#x4F53;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x3002; %n&#xFF1A;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x56DE;&#x8F66;&#x6362;&#x884C;&#x7B26;&#xFF0C;Windows&#x5E73;&#x53F0;&#x4E3A;&#x201D;\r\n&#x201D;&#xFF0C;Unix&#x5E73;&#x53F0;&#x4E3A;&#x201D;\n&#x201D;&#x3002; %x&#xFF1A;&#x8F93;&#x51FA;&#x548C;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x76F8;&#x5173;&#x8054;&#x7684;NDC(&#x5D4C;&#x5957;&#x8BCA;&#x65AD;&#x73AF;&#x5883;)&#xFF0C;&#x5C24;&#x5176;&#x7528;&#x5230;&#x50CF;java servlets&#x8FD9;&#x6837;&#x7684;&#x591A;&#x5BA2;&#x6237;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#x3002; %%&#xFF1A;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x201D;%&#x201D;&#x5B57;&#x7B26;&#x3002; 4.4 &#x5B9E;&#x4F8B;1234567891011121314151617181920212223242526272829303132### set log levels ###### &#x6839;&#x65E5;&#x5FD7;&#x5668;### og4j.rootLogger = [ level ] , appenderName1, appenderName2, &#x2026;### log4j.additivity.org.apache=false&#xFF1A;&#x8868;&#x793A;Logger&#x4E0D;&#x4F1A;&#x5728;&#x7236;Logger&#x7684;appender&#x91CC;&#x8F93;&#x51FA;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;true&#x3002;log4j.rootLogger = DEBUG,stdout,D,E### log4j.appender.appenderName = className##(1)org.apache.log4j.ConsoleAppender&#xFF08;&#x63A7;&#x5236;&#x53F0;&#xFF09;##(2)org.apache.log4j.FileAppender&#xFF08;&#x6587;&#x4EF6;&#xFF09;#(3)org.apache.log4j.DailyRollingFileAppender&#xFF08;&#x6BCF;&#x5929;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#xFF09;#(4)org.apache.log4j.RollingFileAppender&#xFF08;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x5230;&#x8FBE;&#x6307;&#x5B9A;&#x5C3A;&#x5BF8;&#x7684;&#x65F6;&#x5019;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#xFF09;#(5)org.apache.log4j.WriterAppender&#xFF08;&#x5C06;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x4EE5;&#x6D41;&#x683C;&#x5F0F;&#x53D1;&#x9001;&#x5230;&#x4EFB;&#x610F;&#x6307;&#x5B9A;&#x7684;&#x5730;&#x65B9;&#xFF09;log4j.appender.stdout = org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.Target = System.outlog4j.appender.stdout.layout = org.apache.log4j.PatternLayoutlog4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%nlog4j.appender.D = org.apache.log4j.DailyRollingFileAppenderlog4j.appender.D.File = ./log.txtlog4j.appender.D.Append = truelog4j.appender.D.Threshold = ALL# log4j.appender.appenderName.layout=className&#x5C55;&#x73B0;&#x5F62;&#x5F0F;log4j.appender.D.layout = org.apache.log4j.PatternLayoutlog4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%nlog4j.appender.E = org.apache.log4j.DailyRollingFileAppenderlog4j.appender.E.File =F://logs/error.loglog4j.appender.E.Append = truelog4j.appender.E.Threshold = ERRORlog4j.appender.E.layout = org.apache.log4j.PatternLayoutlog4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576# &#x5168;&#x9762;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;log4j.rootLogger=DEBUG,console,dailyFile,imlog4j.additivity.org.apache=true# &#x63A7;&#x5236;&#x53F0;(console)log4j.appender.console=org.apache.log4j.ConsoleAppenderlog4j.appender.console.Threshold=DEBUGlog4j.appender.console.ImmediateFlush=truelog4j.appender.console.Target=System.errlog4j.appender.console.layout=org.apache.log4j.PatternLayoutlog4j.appender.console.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# &#x65E5;&#x5FD7;&#x6587;&#x4EF6;(logFile)log4j.appender.logFile=org.apache.log4j.FileAppenderlog4j.appender.logFile.Threshold=DEBUGlog4j.appender.logFile.ImmediateFlush=truelog4j.appender.logFile.Append=truelog4j.appender.logFile.File=D:/logs/log.log4jlog4j.appender.logFile.layout=org.apache.log4j.PatternLayoutlog4j.appender.logFile.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# &#x56DE;&#x6EDA;&#x6587;&#x4EF6;(rollingFile)log4j.appender.rollingFile=org.apache.log4j.RollingFileAppenderlog4j.appender.rollingFile.Threshold=DEBUGlog4j.appender.rollingFile.ImmediateFlush=truelog4j.appender.rollingFile.Append=truelog4j.appender.rollingFile.File=D:/logs/log.log4jlog4j.appender.rollingFile.MaxFileSize=200KBlog4j.appender.rollingFile.MaxBackupIndex=50log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayoutlog4j.appender.rollingFile.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# &#x5B9A;&#x671F;&#x56DE;&#x6EDA;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;(dailyFile)log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.dailyFile.Threshold=DEBUGlog4j.appender.dailyFile.ImmediateFlush=truelog4j.appender.dailyFile.Append=truelog4j.appender.dailyFile.File=D:/logs/log.log4jlog4j.appender.dailyFile.DatePattern=&apos;.&apos;yyyy-MM-ddlog4j.appender.dailyFile.layout=org.apache.log4j.PatternLayoutlog4j.appender.dailyFile.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# &#x5E94;&#x7528;&#x4E8E;socketlog4j.appender.socket=org.apache.log4j.RollingFileAppenderlog4j.appender.socket.RemoteHost=localhostlog4j.appender.socket.Port=5001log4j.appender.socket.LocationInfo=true# Set up for Log Factor 5log4j.appender.socket.layout=org.apache.log4j.PatternLayoutlog4j.appender.socket.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# Log Factor 5 Appenderlog4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appenderlog4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000# &#x53D1;&#x9001;&#x65E5;&#x5FD7;&#x5230;&#x6307;&#x5B9A;&#x90AE;&#x4EF6;log4j.appender.mail=org.apache.log4j.net.SMTPAppenderlog4j.appender.mail.Threshold=FATALlog4j.appender.mail.BufferSize=10log4j.appender.mail.From = xxx@mail.comlog4j.appender.mail.SMTPHost=mail.comlog4j.appender.mail.Subject=Log4J Messagelog4j.appender.mail.To= xxx@mail.comlog4j.appender.mail.layout=org.apache.log4j.PatternLayoutlog4j.appender.mail.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# &#x5E94;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x5E93;log4j.appender.database=org.apache.log4j.jdbc.JDBCAppenderlog4j.appender.database.URL=jdbc:mysql://localhost:3306/testlog4j.appender.database.driver=com.mysql.jdbc.Driverlog4j.appender.database.user=rootlog4j.appender.database.password=log4j.appender.database.sql=INSERT INTO LOG4J (Message) VALUES(&apos;=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n&apos;)log4j.appender.database.layout=org.apache.log4j.PatternLayoutlog4j.appender.database.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n# &#x81EA;&#x5B9A;&#x4E49;Appenderlog4j.appender.im = net.cybercorlin.util.logger.appender.IMAppenderlog4j.appender.im.host = mail.cybercorlin.netlog4j.appender.im.username = usernamelog4j.appender.im.password = passwordlog4j.appender.im.recipient = corlin@cybercorlin.netlog4j.appender.im.layout=org.apache.log4j.PatternLayoutlog4j.appender.im.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n 12345678910111213141516# &#x5E38;&#x7528;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;log4j.rootLogger=DEBUG, stdout, logfile log4j.category.org.springframework=ERRORlog4j.category.org.apache=INFO log4j.appender.stdout=org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.layout=org.apache.log4j.PatternLayoutlog4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n log4j.appender.logfile=org.apache.log4j.RollingFileAppenderlog4j.appender.logfile.File=${myweb.root}/WEB-INF/log/myweb.loglog4j.appender.logfile.MaxFileSize=512KBlog4j.appender.logfile.MaxBackupIndex=5log4j.appender.logfile.layout=org.apache.log4j.PatternLayoutlog4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n 123456789# &#x4E0D;&#x540C;&#x7684;Logger&#x8F93;&#x51FA;&#x5230;&#x4E0D;&#x540C;&#x6587;&#x4EF6; private static Log logger = LogFactory.getLog(Test.class);#&#x7136;&#x540E;&#x5728;log4j.properties&#x4E2D;&#x52A0;&#x5165;:log4j.logger.cn.com.Test= DEBUG, testlog4j.appender.test=org.apache.log4j.FileAppenderlog4j.appender.test.File=${myweb.root}/WEB-INF/log/test.loglog4j.appender.test.layout=org.apache.log4j.PatternLayoutlog4j.appender.test.layout.ConversionPattern=%d %p [%c] - %m%n# &#x4E5F;&#x5C31;&#x662F;&#x8BA9;cn.com.Test&#x4E2D;&#x7684;logger&#x4F7F;&#x7528;log4j.appender.test&#x6240;&#x505A;&#x7684;&#x914D;&#x7F6E;&#x3002; 5. &#x65E5;&#x5FD7;&#x89C4;&#x8303; &#x6B63;&#x786E;&#x7684;&#x5B9A;&#x4E49;&#x65E5;&#x5FD7; private static final Logger LOG = LoggerFactory.getLogger(this.getClass()); &#x901A;&#x5E38;&#x4E00;&#x4E2A;&#x7C7B;&#x53EA;&#x6709;&#x4E00;&#x4E2A; LOG &#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x7236;&#x7C7B;&#x53EF;&#x4EE5;&#x5C06; LOG &#x5B9A;&#x4E49;&#x5728;&#x7236;&#x7C7B;&#x4E2D;&#x3002; &#x65E5;&#x5FD7;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x4E3A;&#x95E8;&#x9762;&#x63A5;&#x53E3;&#xFF08;&#x5982; slf4j &#x7684; Logger&#xFF09;&#xFF0C;&#x5B9E;&#x73B0;&#x7C7B;&#x53EF;&#x4EE5;&#x662F; Log4j&#x3001;Logback &#x7B49;&#x65E5;&#x5FD7;&#x5B9E;&#x73B0;&#x6846;&#x67B6;&#xFF0C;&#x4E0D;&#x8981;&#x628A;&#x5B9E;&#x73B0;&#x7C7B;&#x5B9A;&#x4E49;&#x4E3A;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#xFF0C;&#x5426;&#x5219;&#x65E5;&#x5FD7;&#x5207;&#x6362;&#x4E0D;&#x65B9;&#x4FBF;&#xFF0C;&#x4E5F;&#x4E0D;&#x7B26;&#x5408;&#x62BD;&#x8C61;&#x7F16;&#x7A0B;&#x601D;&#x60F3;&#x3002; &#x4F7F;&#x7528;&#x53C2;&#x6570;&#x5316;&#x5F62;&#x5F0F;{}&#x5360;&#x4F4D;&#xFF0C;[] &#x8FDB;&#x884C;&#x53C2;&#x6570;&#x9694;&#x79BB; LOG.debug(&quot;Save order with order no&#xFF1A;[{}], and order amount&#xFF1A;[{}]&quot;); &#x8FD9;&#x79CD;&#x53EF;&#x8BFB;&#x6027;&#x597D;&#xFF0C;&#x8FD9;&#x6837;&#x4E00;&#x770B;&#x5C31;&#x77E5;&#x9053;[]&#x91CC;&#x9762;&#x662F;&#x8F93;&#x51FA;&#x7684;&#x52A8;&#x6001;&#x53C2;&#x6570;&#xFF0C;{}&#x7528;&#x6765;&#x5360;&#x4F4D;&#x7C7B;&#x4F3C;&#x7ED1;&#x5B9A;&#x53D8;&#x91CF;&#xFF0C;&#x800C;&#x4E14;&#x53EA;&#x6709;&#x771F;&#x6B63;&#x51C6;&#x5907;&#x6253;&#x5370;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x5904;&#x7406;&#x53C2;&#x6570;&#xFF0C;&#x65B9;&#x4FBF;&#x5B9A;&#x4F4D;&#x95EE;&#x9898;&#x3002; &#x5982;&#x679C;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x4E0D;&#x652F;&#x6301;&#x53C2;&#x6570;&#x5316;&#x5F62;&#x5F0F;&#xFF0C;&#x4E14;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x65F6;&#x4E0D;&#x652F;&#x6301;&#x8BE5;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x65F6;&#x4F1A;&#x5BFC;&#x81F4;&#x5BF9;&#x8C61;&#x5197;&#x4F59;&#x521B;&#x5EFA;&#xFF0C;&#x6D6A;&#x8D39;&#x5185;&#x5B58;&#xFF0C;&#x6B64;&#x65F6;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528; isXXEnabled &#x5224;&#x65AD;&#xFF0C;&#x5982;&#xFF1A; 1234if(LOG.isDebugEnabled()){ // &#x5982;&#x679C;&#x65E5;&#x5FD7;&#x4E0D;&#x652F;&#x6301;&#x53C2;&#x6570;&#x5316;&#x5F62;&#x5F0F;&#xFF0C;debug&#x53C8;&#x6CA1;&#x5F00;&#x542F;&#xFF0C;&#x90A3;&#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x5C31;&#x662F;&#x65E0;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x62FC;&#x63A5;&#xFF0C;&#x5F71;&#x54CD;&#x7CFB;&#x7EDF;&#x6027;&#x80FD; logger.debug(&quot;Save order with order no&#xFF1A;&quot; + orderNo + &quot;, and order amount&#xFF1A;&quot; + orderAmount);} &#x81F3;&#x5C11; debug &#x7EA7;&#x522B;&#x662F;&#x9700;&#x8981;&#x5F00;&#x542F;&#x5224;&#x65AD;&#x7684;&#xFF0C;&#x7EBF;&#x4E0A;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x81F3;&#x5C11;&#x5E94;&#x8BE5;&#x662F; info &#x4EE5;&#x4E0A;&#x7684;&#x3002; &#x8FD9;&#x91CC;&#x63A8;&#x8350;&#x5927;&#x5BB6;&#x7528; SLF4J &#x7684;&#x95E8;&#x9762;&#x63A5;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x53C2;&#x6570;&#x5316;&#x5F62;&#x5F0F;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;debug &#x7EA7;&#x522B;&#x4E5F;&#x4E0D;&#x5FC5;&#x7528; if &#x5224;&#x65AD;&#xFF0C;&#x7B80;&#x5316;&#x4EE3;&#x7801;&#x3002; &#x8F93;&#x51FA;&#x4E0D;&#x540C;&#x7EA7;&#x522B;&#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x9879;&#x76EE;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x6709;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x662F;ERROR&#x3001;WARN&#x3001;INFO&#x3001;DEBUG&#x56DB;&#x79CD;&#x4E86;&#xFF0C;&#x8FD9;&#x56DB;&#x4E2A;&#x90FD;&#x6709;&#x600E;&#x6837;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x5462;&#x3002; ERROR&#xFF08;&#x9519;&#x8BEF;&#xFF09; &#x4E00;&#x822C;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x7A0B;&#x5E8F;&#x4E2D;&#x53D1;&#x751F;&#x7684;&#x4EFB;&#x4F55;&#x5F02;&#x5E38;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF08;Throwable&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x8BB0;&#x5F55;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x51FA;&#x9519;&#x3002; WARN&#xFF08;&#x8B66;&#x544A;&#xFF09; &#x4E00;&#x822C;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x4E00;&#x4E9B;&#x7528;&#x6237;&#x8F93;&#x5165;&#x53C2;&#x6570;&#x9519;&#x8BEF;&#x3001; INFO&#xFF08;&#x4FE1;&#x606F;&#xFF09; &#x8FD9;&#x4E2A;&#x4E5F;&#x662F;&#x5E73;&#x65F6;&#x7528;&#x7684;&#x6700;&#x4F4E;&#x7684;&#xFF0C;&#x4E5F;&#x662F;&#x9ED8;&#x8BA4;&#x7684;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#xFF0C;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x5F00;&#x59CB;&#x3001;&#x7ED3;&#x675F;&#x3001;&#x8017;&#x65F6;&#x3001;&#x91CD;&#x8981;&#x53C2;&#x6570;&#x7B49;&#x4FE1;&#x606F;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x6709;&#x9009;&#x62E9;&#x6027;&#x7684;&#x6709;&#x610F;&#x4E49;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5230;&#x65F6;&#x5019;&#x81EA;&#x5DF1;&#x627E;&#x95EE;&#x9898;&#x770B;&#x4E00;&#x5806;&#x65E5;&#x5FD7;&#x5374;&#x627E;&#x4E0D;&#x5230;&#x5173;&#x952E;&#x65E5;&#x5FD7;&#x5C31;&#x6CA1;&#x610F;&#x4E49;&#x4E86;&#x3002; DEBUG&#xFF08;&#x8C03;&#x8BD5;&#xFF09; &#x8FD9;&#x4E2A;&#x7EA7;&#x522B;&#x4E00;&#x822C;&#x8BB0;&#x5F55;&#x4E00;&#x4E9B;&#x8FD0;&#x884C;&#x4E2D;&#x7684;&#x4E2D;&#x95F4;&#x53C2;&#x6570;&#x4FE1;&#x606F;&#xFF0C;&#x53EA;&#x5141;&#x8BB8;&#x5728;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x5F00;&#x542F;&#xFF0C;&#x9009;&#x62E9;&#x6027;&#x5728;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x5F00;&#x542F;&#x3002; &#x9519;&#x8BEF;&#x6253;&#x65E5;&#x5FD7;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; &#x4E0D;&#x8981;&#x4F7F;&#x7528; System.out.print.. &#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x7684;&#x65F6;&#x5019;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x6765;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x4F7F;&#x7528; System.out.print.. &#x6765;&#x6253;&#x5370;&#x65E5;&#x5FD7;&#xFF0C;&#x8FD9;&#x4E2A;&#x53EA;&#x4F1A;&#x6253;&#x5370;&#x5230; tomcat &#x63A7;&#x5236;&#x53F0;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x8BB0;&#x5F55;&#x5230;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E0D;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#x65E5;&#x5FD7;&#xFF0C;&#x5982;&#x679C;&#x901A;&#x8FC7;&#x670D;&#x52A1;&#x5F62;&#x5F0F;&#x542F;&#x52A8;&#x628A;&#x65E5;&#x5FD7;&#x4E22;&#x5F03;&#x4E86;&#x90A3;&#x66F4;&#x662F;&#x627E;&#x4E0D;&#x5230;&#x65E5;&#x5FD7;&#x4E86;&#x3002; &#x4E0D;&#x8981;&#x4F7F;&#x7528; e.printStackTrace() &#x9996;&#x5148;&#x6765;&#x770B;&#x770B;&#x5B83;&#x7684;&#x6E90;&#x7801;&#xFF1A; 123public void printStackTrace() { printStackTrace(System.err);}// &#x5B83;&#x5176;&#x5B9E;&#x4E5F;&#x662F;&#x5229;&#x7528; System.err &#x8F93;&#x51FA;&#x5230;&#x4E86; tomcat &#x63A7;&#x5236;&#x53F0;&#x3002; &#x4E0D;&#x8981;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x540E;&#x53C8;&#x8F93;&#x51FA;&#x65E5;&#x5FD7; &#x5982;&#x6355;&#x83B7;&#x5F02;&#x5E38;&#x540E;&#x53C8;&#x629B;&#x51FA;&#x4E86;&#x81EA;&#x5B9A;&#x4E49;&#x4E1A;&#x52A1;&#x5F02;&#x5E38;&#xFF0C;&#x6B64;&#x65F6;&#x65E0;&#x9700;&#x8BB0;&#x5F55;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#xFF0C;&#x7531;&#x6700;&#x7EC8;&#x6355;&#x83B7;&#x65B9;&#x8FDB;&#x884C;&#x5F02;&#x5E38;&#x5904;&#x7406;&#x3002;&#x4E0D;&#x80FD;&#x53C8;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x53C8;&#x6253;&#x5370;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#xFF0C;&#x4E0D;&#x7136;&#x4F1A;&#x9020;&#x6210;&#x91CD;&#x590D;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x3002; 1234567try { // ...} catch (Exception e) { // &#x9519;&#x8BEF; LOG.error(&quot;xxx&quot;, e); throw new RuntimeException();} &#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x5177;&#x4F53;&#x7684;&#x65E5;&#x5FD7;&#x5B9E;&#x73B0;&#x7C7B; InterfaceImpl interface = new InterfaceImpl(); &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5927;&#x5BB6;&#x90FD;&#x770B;&#x5F97;&#x61C2;&#x5427;&#xFF1F;&#x5E94;&#x8BE5;&#x9762;&#x5411;&#x63A5;&#x53E3;&#x7684;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x9762;&#x5411;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x8F6F;&#x4EF6;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x7684;&#x539F;&#x5219;&#xFF0C;&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#x5E94;&#x8BE5;&#x662F;&#x3002; Interface interface = new InterfaceImpl(); &#x65E5;&#x5FD7;&#x6846;&#x67B6;&#x91CC;&#x9762;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#xFF0C;&#x4E0A;&#x9762;&#x4E5F;&#x8BF4;&#x4E86;&#xFF0C;&#x65E5;&#x5FD7;&#x6709;&#x95E8;&#x9762;&#x63A5;&#x53E3;&#xFF0C;&#x6709;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7684;&#x5B9E;&#x73B0;&#x6846;&#x67B6;&#xFF0C;&#x6240;&#x4EE5;&#x5927;&#x5BB6;&#x4E0D;&#x8981;&#x9762;&#x5411;&#x5B9E;&#x73B0;&#x7F16;&#x7A0B;&#x3002; &#x6CA1;&#x6709;&#x8F93;&#x51FA;&#x5168;&#x90E8;&#x9519;&#x8BEF;&#x4FE1;&#x606F; &#x770B;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x4F1A;&#x8BB0;&#x5F55;&#x8BE6;&#x7EC6;&#x7684;&#x5806;&#x6808;&#x5F02;&#x5E38;&#x4FE1;&#x606F;&#xFF0C;&#x53EA;&#x4F1A;&#x8BB0;&#x5F55;&#x9519;&#x8BEF;&#x57FA;&#x672C;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&#xFF0C;&#x4E0D;&#x5229;&#x4E8E;&#x6392;&#x67E5;&#x95EE;&#x9898;&#x3002; 12345678try { // ...} catch (Exception e) { // &#x9519;&#x8BEF; LOG.error(&apos;XX &#x53D1;&#x751F;&#x5F02;&#x5E38;&apos;, e.getMessage()); // &#x6B63;&#x786E; LOG.error(&apos;XX &#x53D1;&#x751F;&#x5F02;&#x5E38;&apos;, e);} &#x4E0D;&#x8981;&#x5728;&#x5343;&#x5C42;&#x5FAA;&#x73AF;&#x4E2D;&#x6253;&#x5370;&#x65E5;&#x5FD7; &#x8FD9;&#x4E2A;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7684;&#x6846;&#x67B6;&#x4F7F;&#x7528;&#x4E86;&#x6027;&#x80FD;&#x4E0D;&#x9AD8;&#x7684; Log4j &#x6846;&#x67B6;&#xFF0C;&#x90A3;&#x5C31;&#x4E0D;&#x8981;&#x5728;&#x4E0A;&#x5343;&#x4E2A; for &#x5FAA;&#x73AF;&#x4E2D;&#x6253;&#x5370;&#x65E5;&#x5FD7;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x80FD;&#x4F1A;&#x62D6;&#x57AE;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x54CD;&#x5E94;&#x65F6;&#x95F4;&#x53D8;&#x6162;&#xFF0C;&#x90A3;&#x8981;&#x8003;&#x8651;&#x662F;&#x4E0D;&#x662F;&#x65E5;&#x5FD7;&#x6253;&#x5370;&#x7684;&#x8FC7;&#x591A;&#x4E86;&#x3002; 123for(int i=0; i&lt;2000; i++){ LOG.info(&quot;XX&quot;);}// &#x6700;&#x597D;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x5728;&#x5FAA;&#x73AF;&#x4E2D;&#x8BB0;&#x5F55;&#x8981;&#x70B9;&#xFF0C;&#x5728;&#x5FAA;&#x73AF;&#x5916;&#x9762;&#x603B;&#x7ED3;&#x6253;&#x5370;&#x51FA;&#x6765;&#x3002; &#x7981;&#x6B62;&#x5728;&#x7EBF;&#x4E0A;&#x73AF;&#x5883;&#x5F00;&#x542F; debug &#x8FD9;&#x662F;&#x6700;&#x540E;&#x4E00;&#x70B9;&#xFF0C;&#x4E5F;&#x662F;&#x6700;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x70B9;&#x3002; &#x4E00;&#x662F;&#x56E0;&#x4E3A;&#x9879;&#x76EE;&#x672C;&#x8EAB; debug &#x65E5;&#x5FD7;&#x592A;&#x591A;&#xFF0C;&#x4E8C;&#x662F;&#x5404;&#x79CD;&#x6846;&#x67B6;&#x4E2D;&#x4E5F;&#x5927;&#x91CF;&#x4F7F;&#x7528; debug &#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x7EBF;&#x4E0A;&#x5F00;&#x542F; debug &#x4E0D;&#x4E45;&#x5C31;&#x4F1A;&#x6253;&#x6EE1;&#x78C1;&#x76D8;&#xFF0C;&#x5F71;&#x54CD;&#x4E1A;&#x52A1;&#x7CFB;&#x7EDF;&#x7684;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x3002;]]></content>
      <tags>
        <tag>Java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[装饰器模式、适配器模式]]></title>
    <url>%2F2019%2F08%2F01%2F%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F%E3%80%81%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[1. &#x88C5;&#x9970;&#x5668;(Decorator)&#x6A21;&#x5F0F;&#x52A8;&#x6001;&#x5730;&#x7ED9;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x989D;&#x5916;&#x7684;&#x804C;&#x8D23;&#xFF0C;&#x5C31;&#x589E;&#x52A0;&#x529F;&#x80FD;&#x6765;&#x8BF4;&#xFF0C;&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x6BD4;&#x751F;&#x6210;&#x5B50;&#x7C7B;&#x66F4;&#x4E3A;&#x7075;&#x6D3B;&#xFF1B;&#x5B83;&#x5141;&#x8BB8;&#x5411;&#x4E00;&#x4E2A;&#x73B0;&#x6709;&#x7684;&#x5BF9;&#x8C61;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x540C;&#x65F6;&#x53C8;&#x4E0D;&#x6539;&#x53D8;&#x5176;&#x7ED3;&#x6784;&#x3002; &#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x7684;UML&#x56FE;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; Component&#xFF1A;&#x63A5;&#x53E3;&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x63A5;&#x53E3;&#xFF0C;&#x771F;&#x5B9E;&#x5BF9;&#x8C61;&#x548C;&#x88C5;&#x9970;&#x5BF9;&#x8C61;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4EE5;&#x4FBF;&#x52A8;&#x6001;&#x7684;&#x6DFB;&#x52A0;&#x804C;&#x8D23;&#x3002; ConcreteComponent&#xFF1A;&#x5177;&#x4F53;&#x7684;&#x5BF9;&#x8C61;&#x3002; Decorator&#xFF1A;&#x88C5;&#x9970;&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;Component,&#x4ECE;&#x5916;&#x7C7B;&#x6765;&#x6269;&#x5C55;Component&#x7C7B;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x4E14;&#x6301;&#x6709;&#x4E00;&#x4E2A;&#x6784;&#x5EFA;&#x5F15;&#x7528;(&#x5177;&#x4F53;&#x7684;&#x5BF9;&#x8C61;)&#xFF0C;&#x8FDB;&#x884C;&#x8BF7;&#x6C42;&#x8F6C;&#x53D1;&#x3002; ConcreteDecorator&#xFF1A;&#x5177;&#x4F53;&#x88C5;&#x9970;&#x7C7B;&#xFF0C;&#x7528;&#x4E8E;&#x7ED9;&#x5B9E;&#x9645;&#x5BF9;&#x8C61;&#x6DFB;&#x52A0;&#x804C;&#x8D23;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x4F8B;&#x73B0;&#x5728;&#x8003;&#x8651;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A;&#x714E;&#x997C;&#x644A;&#xFF0C;&#x4EBA;&#x4EEC;&#x53BB;&#x4E70;&#x714E;&#x997C;&#xFF08;Pancake&#xFF09;,&#x6709;&#x4E9B;&#x4EBA;&#x8981;&#x52A0;&#x706B;&#x817F;&#xFF08;Ham&#xFF09;&#x7684;&#xFF0C;&#x6709;&#x4E9B;&#x4EBA;&#x8981;&#x52A0;&#x9E21;&#x86CB;&#xFF08;Egg&#xFF09;&#x7684;&#xFF0C;&#x6709;&#x4E9B;&#x4EBA;&#x8981;&#x52A0;&#x751F;&#x83DC;&#xFF08;Lettuce&#x3002; 1. &#x5B9A;&#x4E49;&#x63A5;&#x53E3;(IPancake)12345678910/** * &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x714E;&#x997C;&#x63A5;&#x53E3; */public interface IPancake { /** * &#x5B9A;&#x4E49;&#x70F9;&#x996A;&#x64CD;&#x4F5C; */ void cook();} 2. &#x5B9A;&#x4E49;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7C7B;(Pancake)123456789101112/** * &#x5177;&#x4F53;&#x7684;&#x714E;&#x997C;&#x5BF9;&#x8C61;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x88C5;&#x9970;&#x5668;&#x6269;&#x5C55;&#x529F;&#x80FD; */public class Pancake implements IPancake { /** * &#x5B9E;&#x73B0;&#x4E86;&#x63A5;&#x53E3;&#x7684;cook&#x65B9;&#x6CD5; */ public void cook() { System.out.println(&quot;&#x6B63;&#x5728;&#x505A;&#x714E;&#x997C;&quot;); }} 3. &#x5B9A;&#x4E49;&#x62BD;&#x8C61;&#x88C5;&#x9970;&#x7C7B;123456789101112131415161718public abstract class PancakeDecorator implements IPancake{ /** * &#x7EF4;&#x62A4;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7C7B;&#x7684;&#x5F15;&#x7528; */ private IPancake pancake; public PancakeDecorator(IPancake pancake) { this.pancake = pancake; } @Override public void cook() { if(this.pancake != null){ this.pancake.cook(); } }} 4. &#x5B9A;&#x4E49;&#x5404;&#x79CD;&#x5177;&#x4F53;&#x88C5;&#x9970;&#x7C7B;123456789101112131415161718192021222324252627282930313233343536373839404142public class EggDecorator extends PancakeDecorator { public EggDecorator(IPancake pancake) { super(pancake); } /** * &#x8986;&#x76D6;cook&#x65B9;&#x6CD5;&#xFF0C;&#x6DFB;&#x52A0;&#x65B0;&#x529F;&#x80FD;&#x3002; */ @Override public void cook() { System.out.println(&quot;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x9E21;&#x86CB;&quot;); super.cook(); }}public class HamDecorator extends PancakeDecorator { public HamDecorator(IPancake pancake) { super(pancake); } @Override public void cook() { System.out.println(&quot;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x706B;&#x817F;&quot;); super.cook(); }}public class LettuceDecorator extends PancakeDecorator { public LettuceDecorator(IPancake pancake) { super(pancake); } @Override public void cook() { System.out.println(&quot;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x751F;&#x83DC;&quot;); super.cook(); }} 5. &#x5BA2;&#x6237;&#x7AEF;&#x6D4B;&#x8BD5;12345678910111213141516171819public class Test { @org.junit.Test public void test1() { IPancake pancake = new Pancake(); IPancake pancake1 = new EggDecorator(pancake); IPancake pancake2 = new HamDecorator(pancake1); IPancake pancake3 = new LettuceDecorator(pancake2); pancake3.cook(); }}/**&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x751F;&#x83DC;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x706B;&#x817F;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x9E21;&#x86CB;&#x6B63;&#x5728;&#x505A;&#x714E;&#x997C;*/ &#x603B;&#x7ED3;&#x88C5;&#x9970;&#x5668;&#x548C;&#x4EE3;&#x7406;&#xFF1A; &#x5BF9;&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x6765;&#x8BF4;&#xFF0C;&#x88C5;&#x9970;&#x8005;&#xFF08;decorator&#xFF09;&#x548C;&#x88AB;&#x88C5;&#x9970;&#x8005;&#xFF08;decoratee&#xFF09;&#x90FD;&#x5B9E;&#x73B0;&#x540C;&#x4E00;&#x4E2A; &#x63A5;&#x53E3;&#x3002;&#x5BF9;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x6765;&#x8BF4;&#xFF0C;&#x4EE3;&#x7406;&#x7C7B;&#xFF08;proxy class&#xFF09;&#x548C;&#x771F;&#x5B9E;&#x5904;&#x7406;&#x7684;&#x7C7B;&#xFF08;real class&#xFF09;&#x90FD;&#x5B9E;&#x73B0;&#x540C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x3002; &#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x5173;&#x6CE8;&#x4E8E;&#x5728;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0A;&#x52A8;&#x6001;&#x7684;&#x6DFB;&#x52A0;&#x65B9;&#x6CD5;&#xFF0C;&#x7136;&#x800C;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x5173;&#x6CE8;&#x4E8E;&#x63A7;&#x5236;&#x5BF9;&#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE;&#x3002;&#x6362;&#x53E5;&#x8BDD; &#x8BF4;&#xFF0C;&#x7528;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF0C;&#x4EE3;&#x7406;&#x7C7B;&#xFF08;proxy class&#xFF09;&#x53EF;&#x4EE5;&#x5BF9;&#x5B83;&#x7684;&#x5BA2;&#x6237;&#x9690;&#x85CF;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x5177;&#x4F53;&#x4FE1;&#x606F;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x4F7F;&#x7528;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5E38;&#x5E38;&#x5728;&#x4E00;&#x4E2A;&#x4EE3;&#x7406;&#x7C7B;&#x4E2D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x88C5;&#x9970;&#x5668;&#x6A21; &#x5F0F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5C06;&#x539F;&#x59CB;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x7ED9;&#x88C5;&#x9970;&#x8005;&#x7684;&#x6784;&#x9020;&#x5668;&#x3002; &#x4F7F;&#x7528;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF0C;&#x4EE3;&#x7406;&#x548C;&#x771F;&#x5B9E;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x7684;&#x7684;&#x5173;&#x7CFB;&#x901A;&#x5E38;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C31;&#x5DF2;&#x7ECF;&#x786E;&#x5B9A;&#x4E86;&#xFF0C;&#x800C;&#x88C5;&#x9970;&#x8005;&#x80FD;&#x591F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x9012;&#x5F52;&#x5730;&#x88AB;&#x6784;&#x9020;&#x3002; &#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x88AB;&#x4EE3;&#x7406;&#x7684;&#x7C7B;&#x5BF9;&#x4E8E;&#x7528;&#x6237;&#x6765;&#x8BF4;&#x662F;&#x900F;&#x660E;&#x7684;&#xFF1B;&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x4E2D;&#x7684;&#x88AB;&#x88C5;&#x9970;&#x7684;&#x7C7B;&#x7528;&#x6237;&#x662F;&#x77E5;&#x9053;&#x7684;&#x3002; &#x4EE3;&#x7406;&#x6A21;&#x5F0F;1234567891011121314151617181920212223//&#x4EE3;&#x7406;&#x6A21;&#x5F0F;public class Proxy implements Subject{ private Subject subject; public Proxy(){ //&#x5173;&#x7CFB;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x786E;&#x5B9A; subject = new RealSubject(); } public void doAction(){ &#x2026;. subject.doAction(); &#x2026;. }}//&#x4EE3;&#x7406;&#x7684;&#x5BA2;&#x6237;public class Client{ public static void main(String[] args){ //&#x5BA2;&#x6237;&#x4E0D;&#x77E5;&#x9053;&#x4EE3;&#x7406;&#x59D4;&#x6258;&#x4E86;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; Subject subject = new Proxy(); &#x2026; }} &#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;123456789101112131415161718192021//&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;public class Decorator implements Component{ private Component component; public Decorator(Component component){ this.component = component } public void operation(){ &#x2026;. component.operation(); &#x2026;. }}//&#x88C5;&#x9970;&#x5668;&#x7684;&#x5BA2;&#x6237;public class Client{ public static void main(String[] args){ //&#x5BA2;&#x6237;&#x6307;&#x5B9A;&#x4E86;&#x88C5;&#x9970;&#x8005;&#x9700;&#x8981;&#x88C5;&#x9970;&#x7684;&#x662F;&#x54EA;&#x4E00;&#x4E2A;&#x7C7B; Component component = new Decorator(new ConcreteComponent()); &#x2026; }} 2. &#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F; &#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x628A;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x63A5;&#x53E3;&#x53D8;&#x6362;&#x6210;&#x5BA2;&#x6237;&#x7AEF;&#x6240;&#x671F;&#x5F85;&#x7684;&#x53E6;&#x4E00;&#x79CD;&#x63A5;&#x53E3;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x539F;&#x672C;&#x56E0;&#x63A5;&#x53E3;&#x4E0D;&#x5339;&#x914D;&#x800C;&#x65E0;&#x6CD5;&#x5728;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x7684;&#x4E24;&#x4E2A;&#x7C7B;&#x80FD;&#x591F;&#x5728;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C; &#x7528;&#x7535;&#x5668;&#x505A;&#x4F8B;&#x5B50;&#xFF0C;&#x7B14;&#x8BB0;&#x672C;&#x7535;&#x8111;&#x7684;&#x63D2;&#x5934;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x4E09;&#x76F8;&#x7684;&#xFF0C;&#x5373;&#x9664;&#x4E86;&#x9633;&#x6781;&#x3001;&#x9634;&#x6781;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5730;&#x6781;&#x3002;&#x800C;&#x6709;&#x4E9B;&#x5730;&#x65B9;&#x7684;&#x7535;&#x6E90;&#x63D2;&#x5EA7;&#x5374;&#x53EA;&#x6709;&#x4E24;&#x6781;&#xFF0C;&#x6CA1;&#x6709;&#x5730;&#x6781;&#x3002;&#x7535;&#x6E90;&#x63D2;&#x5EA7;&#x4E0E;&#x7B14;&#x8BB0;&#x672C;&#x7535;&#x8111;&#x7684;&#x7535;&#x6E90;&#x63D2;&#x5934;&#x4E0D;&#x5339;&#x914D;&#x4F7F;&#x5F97;&#x7B14;&#x8BB0;&#x672C;&#x7535;&#x8111;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x4E00;&#x4E2A;&#x4E09;&#x76F8;&#x5230;&#x4E24;&#x76F8;&#x7684;&#x8F6C;&#x6362;&#x5668;&#xFF08;&#x9002;&#x914D;&#x5668;&#xFF09;&#x5C31;&#x80FD;&#x89E3;&#x51B3;&#x6B64;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x8FD9;&#x6B63;&#x50CF;&#x662F;&#x672C;&#x6A21;&#x5F0F;&#x6240;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x3002; 2.1 &#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x7684;&#x7ED3;&#x6784; &#x7C7B;&#x7684;&#x9002;&#x914D;&#x5668; &#x5BF9;&#x8C61;&#x7684;&#x9002;&#x914D;&#x5668; 2.1.1 &#x7C7B;&#x7684;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x7684;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x628A;&#x9002;&#x914D;&#x7684;&#x7C7B;&#x7684;API&#x8F6C;&#x6362;&#x6210;&#x4E3A;&#x76EE;&#x6807;&#x7C7B;&#x7684;API&#x3002;&#x4E0B;&#x9762;&#x662F;UML&#x56FE;&#xFF1A; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x9002;&#x914D;&#x5668;&#x662F;&#x7EE7;&#x627F;&#x81EA;&#x6E90;&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#x3002; &#x76EE;&#x6807;(Target)&#x89D2;&#x8272;&#xFF1A;&#x8FD9;&#x5C31;&#x662F;&#x6240;&#x671F;&#x5F85;&#x5F97;&#x5230;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x7531;&#x4E8E;&#x8FD9;&#x91CC;&#x8BA8;&#x8BBA;&#x7684;&#x662F;&#x7C7B;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#xFF0C;&#x56E0;&#x6B64;&#x76EE;&#x6807;&#x4E0D;&#x53EF;&#x4EE5;&#x662F;&#x7C7B;&#x3002; &#x6E90;(Adapee)&#x89D2;&#x8272;&#xFF1A;&#x73B0;&#x5728;&#x9700;&#x8981;&#x9002;&#x914D;&#x7684;&#x63A5;&#x53E3;&#x3002; &#x9002;&#x914D;&#x5668;(Adaper)&#x89D2;&#x8272;&#xFF1A;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x662F;&#x672C;&#x6A21;&#x5F0F;&#x7684;&#x6838;&#x5FC3;&#x3002;&#x9002;&#x914D;&#x5668;&#x628A;&#x6E90;&#x63A5;&#x53E3;&#x8F6C;&#x6362;&#x6210;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#x3002;&#x663E;&#x7136;&#xFF0C;&#x8FD9;&#x4E00;&#x89D2;&#x8272;&#x4E0D;&#x53EF;&#x4EE5;&#x662F;&#x63A5;&#x53E3;&#xFF0C;&#x800C;&#x5FC5;&#x987B;&#x662F;&#x5177;&#x4F53;&#x7C7B;&#x3002; &#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#xFF1A;123456789101112131415161718192021222324252627public interface Target { /** * &#x8FD9;&#x662F;&#x6E90;&#x7C7B;Adaptee&#x4E5F;&#x6709;&#x7684;&#x65B9;&#x6CD5; */ public void sampleOperation1(); /** * &#x8FD9;&#x662F;&#x6E90;&#x7C7B;Adapteee&#x6CA1;&#x6709;&#x7684;&#x65B9;&#x6CD5; */ public void sampleOperation2(); }public class Adaptee { public void sampleOperation1(){}}public class Adapter extends Adaptee implements Target { /** * &#x7531;&#x4E8E;&#x6E90;&#x7C7B;Adaptee&#x6CA1;&#x6709;&#x65B9;&#x6CD5;sampleOperation2() * &#x56E0;&#x6B64;&#x9002;&#x914D;&#x5668;&#x8865;&#x5145;&#x4E0A;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5; */ @Override public void sampleOperation2() { //&#x5199;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801; }} 2.1.2 &#x5BF9;&#x8C61;&#x7684;&#x9002;&#x914D;&#x5668;&#x4E0E;&#x7C7B;&#x7684;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x4E00;&#x6837;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x628A;&#x88AB;&#x9002;&#x914D;&#x7684;&#x7C7B;&#x7684;API&#x8F6C;&#x6362;&#x6210;&#x4E3A;&#x76EE;&#x6807;&#x7C7B;&#x7684;API&#xFF0C;&#x4E0E;&#x7C7B;&#x7684;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x4E0D;&#x662F;&#x4F7F;&#x7528;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x8FDE;&#x63A5;&#x5230;Adaptee&#x7C7B;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;&#x59D4;&#x6D3E;&#x5173;&#x7CFB;&#x8FDE;&#x63A5;&#x5230;Adaptee&#x7C7B;&#x3002; &#x4ECE;&#x4E0A;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;Adaptee&#x7C7B;&#x5E76;&#x6CA1;&#x6709;sampleOperation2()&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x5BA2;&#x6237;&#x7AEF;&#x5219;&#x671F;&#x5F85;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x4E3A;&#x4F7F;&#x5BA2;&#x6237;&#x7AEF;&#x80FD;&#x591F;&#x4F7F;&#x7528;Adaptee&#x7C7B;&#xFF0C;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x5305;&#x88C5;(Wrapper)&#x7C7B;Adapter&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x88C5;&#x7C7B;&#x5305;&#x88C5;&#x4E86;&#x4E00;&#x4E2A;Adaptee&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x4ECE;&#x800C;&#x6B64;&#x5305;&#x88C5;&#x7C7B;&#x80FD;&#x591F;&#x628A;Adaptee&#x7684;API&#x4E0E;Target&#x7C7B;&#x7684;API&#x8854;&#x63A5;&#x8D77;&#x6765;&#x3002;Adapter&#x4E0E;Adaptee&#x662F;&#x59D4;&#x6D3E;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x51B3;&#x5B9A;&#x4E86;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x662F;&#x5BF9;&#x8C61;&#x7684;&#x3002; &#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#xFF1A;1234567891011121314151617181920212223242526272829303132333435363738public interface Target { /** * &#x8FD9;&#x662F;&#x6E90;&#x7C7B;Adaptee&#x4E5F;&#x6709;&#x7684;&#x65B9;&#x6CD5; */ public void sampleOperation1(); /** * &#x8FD9;&#x662F;&#x6E90;&#x7C7B;Adapteee&#x6CA1;&#x6709;&#x7684;&#x65B9;&#x6CD5; */ public void sampleOperation2(); }public class Adaptee { public void sampleOperation1(){} }public class Adapter { private Adaptee adaptee; public Adapter(Adaptee adaptee){ this.adaptee = adaptee; } /** * &#x6E90;&#x7C7B;Adaptee&#x6709;&#x65B9;&#x6CD5;sampleOperation1 * &#x56E0;&#x6B64;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x76F4;&#x63A5;&#x59D4;&#x6D3E;&#x5373;&#x53EF; */ public void sampleOperation1(){ this.adaptee.sampleOperation1(); } /** * &#x6E90;&#x7C7B;Adaptee&#x6CA1;&#x6709;&#x65B9;&#x6CD5;sampleOperation2 * &#x56E0;&#x6B64;&#x7531;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x9700;&#x8981;&#x8865;&#x5145;&#x6B64;&#x65B9;&#x6CD5; */ public void sampleOperation2(){ //&#x5199;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801; }} 2.2 &#x4E24;&#x79CD;&#x6A21;&#x5F0F;&#x5BF9;&#x6BD4; &#x7C7B;&#x9002;&#x914D;&#x5668;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x7EE7;&#x627F;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x662F;&#x9759;&#x6001;&#x7684;&#x5B9A;&#x4E49;&#x65B9;&#x5F0F;&#xFF1B;&#x800C;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x7EC4;&#x5408;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x662F;&#x52A8;&#x6001;&#x7EC4;&#x5408;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x5BF9;&#x4E8E;&#x7C7B;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x7531;&#x4E8E;&#x9002;&#x914D;&#x5668;&#x76F4;&#x63A5;&#x7EE7;&#x627F;&#x4E86;Adaptee&#xFF0C;&#x4F7F;&#x5F97;&#x9002;&#x914D;&#x5668;&#x4E0D;&#x80FD;&#x548C;Adaptee&#x7684;&#x5B50;&#x7C7B;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x7EE7;&#x627F;&#x662F;&#x9759;&#x6001;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5F53;&#x9002;&#x914D;&#x5668;&#x7EE7;&#x627F;&#x4E86;Adaptee&#x540E;&#xFF0C;&#x5C31;&#x4E0D;&#x53EF;&#x80FD;&#x518D;&#x53BB;&#x5904;&#x7406; Adaptee&#x7684;&#x5B50;&#x7C7B;&#x4E86;&#x3002; &#x5BF9;&#x4E8E;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x4E00;&#x4E2A;&#x9002;&#x914D;&#x5668;&#x53EF;&#x4EE5;&#x628A;&#x591A;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x6E90;&#x9002;&#x914D;&#x5230;&#x540C;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x3002;&#x6362;&#x8A00;&#x4E4B;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x9002;&#x914D;&#x5668;&#x53EF;&#x4EE5;&#x628A;&#x6E90;&#x7C7B;&#x548C;&#x5B83;&#x7684;&#x5B50;&#x7C7B;&#x90FD;&#x9002;&#x914D;&#x5230;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#x3002;&#x56E0;&#x4E3A;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#x91C7;&#x7528;&#x7684;&#x662F;&#x5BF9;&#x8C61;&#x7EC4;&#x5408;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x53EA;&#x8981;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#x6B63;&#x786E;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x5B50;&#x7C7B;&#x90FD;&#x65E0;&#x6240;&#x8C13;&#x3002; &#x5BF9;&#x4E8E;&#x7C7B;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x9002;&#x914D;&#x5668;&#x53EF;&#x4EE5;&#x91CD;&#x5B9A;&#x4E49;Adaptee&#x7684;&#x90E8;&#x5206;&#x884C;&#x4E3A;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x5B50;&#x7C7B;&#x8986;&#x76D6;&#x7236;&#x7C7B;&#x7684;&#x90E8;&#x5206;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#x3002; &#x5BF9;&#x4E8E;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x8981;&#x91CD;&#x5B9A;&#x4E49;Adaptee&#x7684;&#x884C;&#x4E3A;&#x6BD4;&#x8F83;&#x56F0;&#x96BE;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9700;&#x8981;&#x5B9A;&#x4E49;Adaptee&#x7684;&#x5B50;&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#x91CD;&#x5B9A;&#x4E49;&#xFF0C;&#x7136;&#x540E;&#x8BA9;&#x9002;&#x914D;&#x5668;&#x7EC4;&#x5408;&#x5B50;&#x7C7B;&#x3002;&#x867D;&#x7136;&#x91CD;&#x5B9A;&#x4E49;Adaptee&#x7684;&#x884C;&#x4E3A;&#x6BD4;&#x8F83;&#x56F0;&#x96BE;&#xFF0C;&#x4F46;&#x662F;&#x60F3;&#x8981;&#x589E;&#x52A0;&#x4E00;&#x4E9B;&#x65B0;&#x7684;&#x884C;&#x4E3A;&#x5219;&#x65B9;&#x4FBF;&#x7684;&#x5F88;&#xFF0C;&#x800C;&#x4E14;&#x65B0;&#x589E;&#x52A0;&#x7684;&#x884C;&#x4E3A;&#x53EF;&#x540C;&#x65F6;&#x9002;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x6E90;&#x3002; &#x5BF9;&#x4E8E;&#x7C7B;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x4EC5;&#x4EC5;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x5F15;&#x7528;&#x6765;&#x95F4;&#x63A5;&#x5F97;&#x5230;Adaptee&#x3002; &#x5BF9;&#x4E8E;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x5F15;&#x7528;&#x6765;&#x95F4;&#x63A5;&#x5F97;&#x5230;Adaptee&#x3002; &#x5EFA;&#x8BAE;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x591A;&#x7528;&#x5408;&#x6210;/&#x805A;&#x5408;&#x3001;&#x5C11;&#x7528;&#x7EE7;&#x627F;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5177;&#x4F53;&#x95EE;&#x9898;&#x5177;&#x4F53;&#x5206;&#x6790;&#xFF0C;&#x6839;&#x636E;&#x9700;&#x8981;&#x6765;&#x9009;&#x7528;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x6700;&#x9002;&#x5408;&#x7684;&#x624D;&#x662F;&#x6700;&#x597D;&#x7684;&#x3002; 2.3 &#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x4F18;&#x7F3A;&#x70B9; &#x66F4;&#x597D;&#x5730;&#x590D;&#x7528;&#x6027;&#xFF1A;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x73B0;&#x6709;&#x7684;&#x7C7B;&#xFF0C;&#x800C;&#x6B64;&#x7C7B;&#x7684;&#x63A5;&#x53E3;&#x4E0D;&#x7B26;&#x5408;&#x7CFB;&#x7EDF;&#x7684;&#x9700;&#x8981;&#x3002;&#x90A3;&#x4E48;&#x901A;&#x8FC7;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x5F97;&#x5230;&#x66F4;&#x597D;&#x7684;&#x590D;&#x7528;&#x3002; &#x66F4;&#x597D;&#x5730;&#x6269;&#x5C55;&#x6027;&#xFF1A;&#x5728;&#x5B9E;&#x73B0;&#x9002;&#x914D;&#x5668;&#x529F;&#x80FD;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x81EA;&#x5DF1;&#x5F00;&#x53D1;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4ECE;&#x800C;&#x81EA;&#x7136;&#x5730;&#x6269;&#x5C55;&#x7CFB;&#x7EDF;&#x7684;&#x529F;&#x80FD;&#x3002; &#x7F3A;&#x70B9;&#xFF1A;&#x8FC7;&#x591A;&#x7684;&#x4F7F;&#x7528;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x4F1A;&#x8BA9;&#x7CFB;&#x7EDF;&#x975E;&#x5E38;&#x96F6;&#x4E71;&#xFF0C;&#x4E0D;&#x6613;&#x6574;&#x4F53;&#x8FDB;&#x884C;&#x628A;&#x63E1;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x660E;&#x660E;&#x770B;&#x5230;&#x8C03;&#x7528;&#x7684;&#x662F;A&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x5B9E;&#x5185;&#x90E8;&#x88AB;&#x9002;&#x914D;&#x6210;&#x4E86;B&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x5982;&#x679C;&#x592A;&#x591A;&#x51FA;&#x73B0;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x65E0;&#x5F02;&#x4E8E;&#x4E00;&#x573A;&#x707E;&#x96BE;&#x3002;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x5F88;&#x6709;&#x5FC5;&#x8981;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x4F7F;&#x7528;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x5BF9;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x91CD;&#x6784;&#x3002; 2.4 &#x7F3A;&#x7701;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x7F3A;&#x7701;&#x9002;&#x914D;(Default Adapter)&#x6A21;&#x5F0F;&#x4E3A;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x63D0;&#x4F9B;&#x7F3A;&#x7701;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x6837;&#x5B50;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x4ECE;&#x8FD9;&#x4E2A;&#x7F3A;&#x7701;&#x5B9E;&#x73B0;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#xFF0C;&#x800C;&#x4E0D;&#x5FC5;&#x4ECE;&#x539F;&#x6709;&#x63A5;&#x53E3;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;&#x4F5C;&#x4E3A;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x7684;&#x4E00;&#x4E2A;&#x7279;&#x4F8B;&#xFF0C;&#x7F3A;&#x7701;&#x662F;&#x9002;&#x914D;&#x6A21;&#x5F0F;&#x5728;JAVA&#x8BED;&#x8A00;&#x4E2D;&#x6709;&#x7740;&#x7279;&#x6B8A;&#x7684;&#x5E94;&#x7528;&#x3002; &#x5728;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5FC5;&#x987B;&#x8BA9;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7C7B;&#x5B9E;&#x73B0;&#x67D0;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x7C7B;&#x53C8;&#x7528;&#x4E0D;&#x5230;&#x63A5;&#x53E3;&#x6240;&#x89C4;&#x5B9A;&#x7684;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x901A;&#x5E38;&#x7684;&#x5904;&#x7406;&#x65B9;&#x6CD5;&#x662F;&#xFF0C;&#x8FD9;&#x4E2A;&#x5177;&#x4F53;&#x7C7B;&#x8981;&#x5B9E;&#x73B0;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x8981;&#x6709;&#x5B9E;&#x73B0;&#xFF0C;&#x90A3;&#x4E9B;&#x6CA1;&#x6709;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x4E5F;&#x8981;&#x6709;&#x7A7A;&#x7684;&#x3001;&#x5E73;&#x5EB8;&#x7684;&#x5B9E;&#x73B0;&#x3002; &#x8FD9;&#x4E9B;&#x7A7A;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x4E00;&#x79CD;&#x6D6A;&#x8D39;&#xFF0C;&#x6709;&#x65F6;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x6DF7;&#x4E71;&#x3002;&#x9664;&#x975E;&#x770B;&#x8FC7;&#x8FD9;&#x4E9B;&#x7A7A;&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x53EF;&#x80FD;&#x4F1A;&#x4EE5;&#x4E3A;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x4E0D;&#x662F;&#x7A7A;&#x7684;&#x3002;&#x5373;&#x4FBF;&#x4ED6;&#x77E5;&#x9053;&#x5176;&#x4E2D;&#x6709;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x4E5F;&#x4E0D;&#x4E00;&#x5B9A;&#x77E5;&#x9053;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x4E0D;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x9664;&#x975E;&#x770B;&#x8FC7;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x6216;&#x662F;&#x6587;&#x6863;&#x3002; &#x7F3A;&#x7701;&#x9002;&#x914D;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x5F88;&#x597D;&#x7684;&#x5904;&#x7406;&#x8FD9;&#x4E00;&#x60C5;&#x51B5;&#x3002;&#x53EF;&#x4EE5;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#xFF0C;&#x6B64;&#x62BD;&#x8C61;&#x7C7B;&#x8981;&#x7ED9;&#x63A5;&#x53E3;&#x6240;&#x8981;&#x6C42;&#x7684;&#x6BCF;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930/**&#x5B9A;&#x4E49;&#x63A5;&#x53E3;*/public interface AbstractService { public void serviceOperation1(); public int serviceOperation2(); public String serviceOperation3();}/**&#x5B9A;&#x4E49;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x5BF9;&#x63A5;&#x53E3;&#x4E2D;&#x7684;&#x6BCF;&#x79CD;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x540E;&#x7EED;&#x7C7B;&#x7EE7;&#x627F;&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x7C7B;&#xFF0C;&#x5BF9;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#x5373;&#x53EF;&#x3002;*/public abstract class ServiceAdapter implements AbstractService{ @Override public void serviceOperation1() { } @Override public int serviceOperation2() { return 0; } @Override public String serviceOperation3() { return null; }} &#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x63A5;&#x53E3;AbstractService&#x8981;&#x6C42;&#x5B9A;&#x4E49;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x662F;serviceOperation1()&#x3001;serviceOperation2()&#x3001;serviceOperation3()&#xFF1B;&#x800C;&#x62BD;&#x8C61;&#x9002;&#x914D;&#x5668;&#x7C7B;ServiceAdapter&#x5219;&#x4E3A;&#x8FD9;&#x4E09;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x63D0;&#x4F9B;&#x4E86;&#x5E73;&#x5EB8;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4EFB;&#x4F55;&#x7EE7;&#x627F;&#x81EA;&#x62BD;&#x8C61;&#x7C7B;ServiceAdapter&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x90FD;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x5B83;&#x6240;&#x9700;&#x8981;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x4E0D;&#x5FC5;&#x7406;&#x4F1A;&#x5176;&#x4ED6;&#x7684;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x7684;&#x7528;&#x610F;&#x662F;&#x8981;&#x6539;&#x53D8;&#x6E90;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E8E;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#x76F8;&#x5BB9;&#x3002;&#x7F3A;&#x7701;&#x9002;&#x914D;&#x7684;&#x7528;&#x610F;&#x7A0D;&#x6709;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x662F;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x4E0D;&#x5E73;&#x5EB8;&#x7684;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x800C;&#x63D0;&#x4F9B;&#x7684;&#x4E00;&#x79CD;&#x5E73;&#x5EB8;&#x5B9E;&#x73B0;&#x3002; &#x5728;&#x4EFB;&#x4F55;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x51C6;&#x5907;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x201C;&#x7F3A;&#x7701;&#x9002;&#x914D;&#x6A21;&#x5F0F;&#x201D;&#x5236;&#x9020;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x7ED9;&#x51FA;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#x7684;&#x5E73;&#x5EB8;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x4ECE;&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x518D;&#x7EE7;&#x627F;&#x4E0B;&#x53BB;&#x7684;&#x5B50;&#x7C7B;&#x5C31;&#x4E0D;&#x5FC5;&#x5B9E;&#x73B0;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UML类图]]></title>
    <url>%2F2019%2F08%2F01%2FUML%E7%B1%BB%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[UML&#x7C7B;&#x56FE; UML(Unified Modeling Language)&#x7EDF;&#x4E00;&#x5EFA;&#x6A21;&#x8BED;&#x8A00;&#x3002;&#x662F;&#x4E00;&#x79CD;&#x5F00;&#x653E;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x8BF4;&#x660E;&#x3001;&#x53EF;&#x89C6;&#x5316;&#x3001;&#x6784;&#x5EFA;&#x548C;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x6B63;&#x5728;&#x5F00;&#x53D1;&#x7684;&#x3001;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x3001;&#x8F6F;&#x4EF6;&#x5BC6;&#x96C6;&#x7CFB;&#x7EDF;&#x7684;&#x5236;&#x54C1;&#x7684;&#x5F00;&#x653E;&#x65B9;&#x6CD5;&#x3002;UML&#x5C55;&#x73B0;&#x4E86;&#x4E00;&#x7CFB;&#x5217;&#x6700;&#x4F73;&#x5DE5;&#x7A0B;&#x5B9E;&#x8DF5;&#xFF0C;&#x8FD9;&#x4E9B;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x5728;&#x5BF9;&#x5927;&#x89C4;&#x6A21;&#xFF0C;&#x590D;&#x6742;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x5EFA;&#x6A21;&#x65B9;&#x9762;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5728;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x5C42;&#x6B21;&#x5DF2;&#x7ECF;&#x88AB;&#x9A8C;&#x8BC1;&#x6709;&#x6548;&#x3002; &#x7C7B;&#x56FE;&#x662F;&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;&#x7684;&#x7EDF;&#x4E00;&#x5EFA;&#x6A21;&#x8BED;&#x8A00;&#x4E00;&#x79CD;&#x9759;&#x6001;&#x7ED3;&#x6784;&#x56FE;&#xFF0C;&#x8BE5;&#x56FE;&#x63CF;&#x8FF0;&#x4E86;&#x7CFB;&#x7EDF;&#x7684;&#x7C7B;&#x96C6;&#x5408;&#xFF0C;&#x7C7B;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x5E2E;&#x52A9;&#x4EBA;&#x4EEC;&#x7B80;&#x5316;&#x5BF9;&#x7CFB;&#x7EDF;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5B83;&#x662F;&#x7CFB;&#x7EDF;&#x5206;&#x6790;&#x548C;&#x8BBE;&#x8BA1;&#x9636;&#x6BB5;&#x7684;&#x91CD;&#x8981;&#x4EA7;&#x7269;&#xFF0C;&#x4E5F;&#x662F;&#x7CFB;&#x7EDF;&#x7F16;&#x7801;&#x548C;&#x6D4B;&#x8BD5;&#x7684;&#x91CD;&#x8981;&#x6A21;&#x578B;&#x4F9D;&#x636E;&#x3002; 1. &#x7C7B;&#x7684;UML&#x56FE;&#x793A;&#x5728;UML&#x7C7B;&#x56FE;&#x4E2D;&#xFF0C;&#x7C7B;&#x4F7F;&#x7528;&#x5305;&#x542B;&#x7C7B;&#x540D;&#xFF0C;&#x5C5E;&#x6027;&#xFF0C;&#x65B9;&#x6CD5;&#x540D;&#x53CA;&#x5176;&#x53C2;&#x6570;&#x5E76;&#x4E14;&#x7528;&#x5206;&#x5272;&#x7EBF;&#x5206;&#x9694;&#x7684;&#x957F;&#x65B9;&#x5F62;&#x8868;&#x793A;&#x3002;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 12345678910111213141516171819202122// &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;Person&#x7C7B;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x90A3;&#x4E48;name&#x548C;age&#x5C5E;&#x6027;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;get&#x3001;set&#x65B9;&#x6CD5;public class Person { private String name = null; private int age = 0; public String getName() { return name; } public void setName(String name = null) { this.name = name; } public int getAge() { return age; } public void setAge(int age = 0) { this.age = age; }} &#x4E0A;&#x8FF0;&#x7C7B;&#x5BF9;&#x5E94;&#x7684;UML&#x56FE;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; &#x7C7B;&#x540D;&#x7531;&#x4E09;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF1A;&#x7C7B;&#x540D;&#x3001;&#x5C5E;&#x6027;&#x3001;&#x65B9;&#x6CD5; 2. &#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5728;UML&#x7C7B;&#x56FE;&#x4E2D;&#x7C7B;&#x4E0E;&#x7C7B;&#x4E4B;&#x95F4;&#x5B58;&#x5728;&#x591A;&#x79CD;&#x5173;&#x7CFB;&#xFF0C;&#x5982; &#x6CDB;&#x5316;(Generalization)&#x5173;&#x7CFB; &#x5B9E;&#x73B0;&#xFF08;Realization)&#x5173;&#x7CFB; &#x4F9D;&#x8D56;(Dependence)&#x5173;&#x7CFB; &#x5173;&#x8054;&#xFF08;Association&#xFF09;&#x5173;&#x7CFB; &#x805A;&#x5408;(Aggregation)&#x5173;&#x7CFB; &#x7EC4;&#x5408;(Composition)&#x5173;&#x7CFB; 2.1 &#x6CDB;&#x5316;&#x5173;&#x7CFB;&#x6CDB;&#x5316;&#x5173;&#x7CFB;&#x4E5F;&#x5C31;&#x662F;Java&#x4E2D;&#x7684;&#x7EE7;&#x627F;&#xFF0C;&#x7C7B;&#x548C;&#x7C7B;&#xFF0C;&#x63A5;&#x53E3;&#x548C;&#x63A5;&#x53E3;&#x90FD;&#x53EF;&#x4EE5;&#x662F;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF0C;&#x7236;&#x7C7B;&#x53C8;&#x79F0;&#x4F5C;&#x57FA;&#x7C7B;&#x6216;&#x8D85;&#x7C7B;&#xFF0C;&#x5B50;&#x7C7B;&#x53C8;&#x79F0;&#x4F5C;&#x6D3E;&#x751F;&#x7C7B;&#xFF0C;&#x7C7B;&#x7EE7;&#x627F;&#x7236;&#x7C7B;&#x540E;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7236;&#x7C7B;&#x7684;&#x6240;&#x4EE5;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x80FD;&#x62E5;&#x6709;&#x7236;&#x7C7B;&#x6CA1;&#x6709;&#x7684;&#x529F;&#x80FD;&#x3002;&#x5728;UML&#x4E2D;&#xFF0C;&#x6CDB;&#x5316;&#x5173;&#x7CFB;&#x53EF;&#x4EE5;&#x7528;&#x5E26;&#x7A7A;&#x5FC3;&#x4E09;&#x89D2;&#x5F62;&#x7684;&#x76F4;&#x7EBF;&#x6765;&#x8868;&#x793A;&#x3002;&#x5EFA;&#x7ACB;&#x4E24;&#x4E2A;&#x7C7B;Teacher&#x548C;Student&#xFF0C;&#x4F7F;&#x5176;&#x7EE7;&#x627F;&#x81EA;Person&#x3002;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 123456789101112131415161718192021222324252627282930313233public class Teacher extends Person { private int sId = 0; public int getsId() { return sId; } public void setsId(int sId) { this.sId = sId; } public void teaching(){ System.out.println(&quot;&#x6B63;&#x5728;&#x4E0A;&#x8BFE;&#x3002;&#x3002;&#x3002;&#x3002;&quot;); }}public class Student extends Person { private int sId = 0; public int getsId() { return sId; } public void setsId(int sId) { this.sId = sId; } public void study(){ System.out.println(&quot;&#x6B63;&#x5728;&#x5B66;&#x4E60;&quot;); }} &#x4E0A;&#x8FF0;&#x4E24;&#x4E2A;&#x7C7B;&#x7EE7;&#x627F;&#x81EA;Person&#x7C7B;&#xFF0C;&#x5E76;&#x6709;&#x81EA;&#x5DF1;&#x65B0;&#x7684;&#x6210;&#x5458;&#x548C;&#x65B9;&#x6CD5;&#xFF0C;&#x5219;UML&#x56FE;(&#x5B66;&#x751F;&#x7684;&#x548C;&#x8001;&#x5E08;&#x7C7B;&#x4F3C;)&#x5982;&#x4E0B;&#x6240;&#x793A;: 2.2 &#x5B9E;&#x73B0;&#x5173;&#x7CFB;&#x5B9E;&#x73B0;&#x5173;&#x7CFB;&#x5728;java&#x4E2D;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x548C;&#x63A5;&#x53E3;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x63A5;&#x53E3;&#x4E2D;&#x4E00;&#x822C;&#x662F;&#x6CA1;&#x6709;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x62BD;&#x8C61;&#x7684;&#xFF08;abstract&#x4FEE;&#x9970;&#xFF09;&#xFF0C;&#x53EA;&#x6709;&#x58F0;&#x660E;&#x6CA1;&#x6709;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x9700;&#x5728;&#x5B9E;&#x73B0;&#x8BE5;&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x4E2D;&#x3002;&#x5728;UML&#x4E2D;&#x7528;&#x4E0E;&#x7C7B;&#x7684;&#x8868;&#x793A;&#x6CD5;&#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x5F0F;&#x8868;&#x793A;&#x63A5;&#x53E3;&#xFF0C;&#x533A;&#x522B;&#x53EF;&#x5728;UML&#x4E2D;&#x7C7B;&#x56FE;&#x4E2D;&#x770B;&#x51FA;&#x3002;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4EA4;&#x901A;&#x5DE5;&#x5177;&#x7C7B;&#x63A5;&#x53E3;IVehicle,&#x5E76;&#x6709;&#x4E00;&#x4E2A;&#x5F62;&#x5F0F;&#x901F;&#x5EA6;&#x65B9;&#x6CD5;&#x58F0;&#x660E;travelSpeed&#x3002; 12345678910111213141516171819public interface IVehicle { int travelSpeed();}public class HighSpeedRail implements IVehicle { public int travelSpeed() { return 300; }}public class Bicycle implements IVehicle { public int travelSpeed() { return 20; }} UML&#x56FE;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 2.3 &#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;(Dependency) &#x662F;&#x4E00;&#x79CD;&#x4F7F;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x7279;&#x5B9A;&#x4E8B;&#x7269;&#x7684;&#x6539;&#x53D8;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x4F7F;&#x7528;&#x8BE5;&#x4E8B;&#x7269;&#x7684;&#x5176;&#x4ED6;&#x4E8B;&#x7269;&#xFF0C;&#x5728;&#x9700;&#x8981;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x4E8B;&#x7269;&#x4F7F;&#x7528;&#x53E6;&#x4E00;&#x4E2A;&#x4E8B;&#x7269;&#x65F6;&#x4F7F;&#x7528;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x4F53;&#x73B0;&#x5728;&#x67D0;&#x4E2A;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x4F7F;&#x7528;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002; &#x5728;UML&#x4E2D;&#xFF0C;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x7528;&#x5E26;&#x7BAD;&#x5934;&#x7684;&#x865A;&#x7EBF;&#x8868;&#x793A;&#xFF0C;&#x7531;&#x4F9D;&#x8D56;&#x7684;&#x4E00;&#x65B9;&#x6307;&#x5411;&#x88AB;&#x4F9D;&#x8D56;&#x7684;&#x4E00;&#x65B9;&#x3002; 123456789101112131415161718192021// &#x8001;&#x5E08;&#x9A91;&#x81EA;&#x884C;&#x8F66;&#x53BB;&#x4E0A;&#x5B66;public class Teacher extends Person { private int sId = 0; public int getsId() { return sId; } public void setsId(int sId) { this.sId = sId; } public void teaching(){ System.out.println(&quot;&#x6B63;&#x5728;&#x4E0A;&#x8BFE;&#x3002;&#x3002;&#x3002;&#x3002;&quot;); } public int moveSpeed(Bicycle bicycle){ return bicycle.travelSpeed(); }} UML&#x56FE;&#x8868;&#x793A;&#x5982;&#x4E0B;&#xFF1A; 2.4 &#x5173;&#x8054;&#x5173;&#x7CFB;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x7C7B;&#x548C;&#x53E6;&#x4E00;&#x7C7B;&#x6709;&#x8054;&#x7CFB;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x4E0B;&#x9762;&#x7684;&#x4E3E;&#x4F8B;&#x4E2D;&#x6BCF;&#x4E2A;Teachers&#x90FD;&#x6709;&#x4E2A;&#x5BB6;&#x5EAD;&#x4F4F;&#x5740;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#xFF0C;&#x800C;&#x6B64;&#x65F6;Teacher&#x548C;Address&#x5C31;&#x5F62;&#x6210;&#x4E86;&#x4E00;&#x5BF9;&#x4E00;&#x7684;&#x5173;&#x8054;&#x5173;&#x7CFB; &#x5173;&#x8054;&#x5173;&#x7CFB;&#x7528;&#x5B9E;&#x7EBF;&#x7BAD;&#x5934;&#x8868;&#x793A;&#x3002;&#x6570;&#x5B57;&#x8868;&#x793A;&#x5305;&#x542B;&#x5173;&#x7CFB;&#xFF1A; 1..1 &#x8868;&#x793A;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x53EA;&#x4E0E;&#x8BE5;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x6709;&#x5173;&#x7CFB; 0..* &#x8868;&#x793A;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0E;&#x8BE5;&#x7C7B;&#x7684;&#x96F6;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5BF9;&#x8C61;&#x6709;&#x5173;&#x7CFB; 1..* &#x8868;&#x793A;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0E;&#x8BE5;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5BF9;&#x8C61;&#x6709;&#x5173;&#x7CFB; 0..1 &#x8868;&#x793A;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x6CA1;&#x6709;&#x6216;&#x53EA;&#x4E0E;&#x8BE5;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x6709;&#x5173;&#x7CFB; * &#x4EFB;&#x610F;&#x591A;&#x4E2A;&#x5BF9;&#x8C61;&#x5173;&#x8054; 2.5 &#x805A;&#x5408;&#x5173;&#x7CFB;&#x805A;&#x5408;&#x5173;&#x7CFB;&#x662F;&#x8868;&#x793A;&#x6574;&#x4F53;&#x4E0E;&#x90E8;&#x5206;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x662F;&#x90E8;&#x5206;&#x53EF;&#x4EE5;&#x8131;&#x79BB;&#x6574;&#x4F53;&#x800C;&#x5B58;&#x5728;&#x3002;&#x4F8B;&#x5982;&#x4E00;&#x4E2A;Teachers&#x5BF9;&#x8C61;&#x6709;&#x4E00;&#x8F86;&#x6C7D;&#x8F66;Car&#xFF0C;&#x6B64;&#x65F6;Car&#x5C31;&#x662F;Teachers&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x4F46;&#x662F;Car&#x53EF;&#x4EE5;&#x8131;&#x79BB;Teachers&#x800C;&#x5B58;&#x5728;&#x3002;&#x5728;UML&#x7C7B;&#x4E2D;&#x805A;&#x5408;&#x5173;&#x7CFB;&#x7528;&#x5E26;&#x7A7A;&#x5FC3;&#x83F1;&#x5F62;&#x7684;&#x76F4;&#x7EBF;&#x8868;&#x793A;&#x3002; 2.6 &#x7EC4;&#x5408;&#x5173;&#x7CFB;&#x7EC4;&#x5408;&#x5173;&#x7CFB;(Composition)&#x4E5F;&#x8868;&#x793A;&#x7C7B;&#x4E4B;&#x95F4;&#x6574;&#x4F53;&#x548C;&#x90E8;&#x5206;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x662F;&#x7EC4;&#x5408;&#x5173;&#x7CFB;&#x4E2D;&#x90E8;&#x5206;&#x548C;&#x6574;&#x4F53;&#x5177;&#x6709;&#x7EDF;&#x4E00;&#x7684;&#x751F;&#x5B58;&#x671F;&#x3002;&#x4E00;&#x65E6;&#x6574;&#x4F53;&#x5BF9;&#x8C61;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x90E8;&#x5206;&#x5BF9;&#x8C61;&#x4E5F;&#x5C06;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x90E8;&#x5206;&#x5BF9;&#x8C61;&#x4E0E;&#x6574;&#x4F53;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x5177;&#x6709;&#x540C;&#x751F;&#x5171;&#x6B7B;&#x7684;&#x5173;&#x7CFB;&#x3002; &#x5728;&#x7EC4;&#x5408;&#x5173;&#x7CFB;&#x4E2D;&#xFF0C;&#x6210;&#x5458;&#x7C7B;&#x662F;&#x6574;&#x4F53;&#x7C7B;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x800C;&#x4E14;&#x6574;&#x4F53;&#x7C7B;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x6210;&#x5458;&#x7C7B;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x5373;&#x6210;&#x5458;&#x7C7B;&#x7684;&#x5B58;&#x5728;&#x4F9D;&#x8D56;&#x4E8E;&#x6574;&#x4F53;&#x7C7B;&#x3002;&#x5728;UML&#x4E2D;&#xFF0C;&#x7EC4;&#x5408;&#x5173;&#x7CFB;&#x7528;&#x5E26;&#x5B9E;&#x5FC3;&#x83F1;&#x5F62;&#x7684;&#x76F4;&#x7EBF;&#x8868;&#x793A;&#x3002; &#x5982;&#x8868;&#x793A;&#x4EBA;&#x548C;Figure&#x7684;&#x5173;&#x7CFB;&#x7684;&#x65F6;&#x5019;&#xFF1A;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java代理]]></title>
    <url>%2F2019%2F07%2F31%2FJava%E4%BB%A3%E7%90%86%2F</url>
    <content type="text"><![CDATA[Java&#x4E2D;&#x7684;&#x4EE3;&#x7406;1. &#x4EE3;&#x7406;&#x7684;&#x4F5C;&#x7528;&#x5728;&#x5199;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x901A;&#x5E38;&#x9700;&#x8981;&#x52A0;&#x5165;&#x4E00;&#x4E9B;&#x548C;&#x4E1A;&#x52A1;&#x6CA1;&#x6709;&#x76F4;&#x63A5;&#x5173;&#x7CFB;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#xFF0C;&#x4FE1;&#x606F;&#x53D1;&#x9001;&#xFF0C;&#x5B89;&#x5168;&#x548C;&#x4E8B;&#x52A1;&#x652F;&#x6301;&#x7B49;&#x3002;&#x8FD9;&#x4E9B;&#x679D;&#x8282;&#x6027;&#x4EE3;&#x7801;&#x867D;&#x7136;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5B58;&#x5728;&#x4EE5;&#x4E0B;&#x7684;&#x95EE;&#x9898;&#xFF1A; &#x679D;&#x8282;&#x6027;&#x4EE3;&#x7801;&#x548C;&#x529F;&#x80FD;&#x4E4B;&#x95F4;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x4E0D;&#x662F;&#x51FD;&#x6570;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x662F;&#x5BF9;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x601D;&#x60F3;&#x7684;&#x7834;&#x574F; &#x679D;&#x8282;&#x6027;&#x4EE3;&#x7801;&#x9020;&#x6210;&#x529F;&#x80FD;&#x4EE3;&#x7801;&#x5BF9;&#x5176;&#x4ED6;&#x7C7B;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x52A0;&#x6DF1;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x6027;&#x964D;&#x4F4E; &#x4ECE;&#x903B;&#x8F91;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x679D;&#x8282;&#x6027;&#x4EE3;&#x7801;&#x5E94;&#x8BE5;&#x76D1;&#x89C6;&#x7740;&#x529F;&#x80FD;&#x6027;&#x4EE3;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x91C7;&#x53D6;&#x884C;&#x52A8;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x529F;&#x80FD;&#x6027;&#x4EE3;&#x7801;&#x901A;&#x77E5;&#x679D;&#x8282;&#x4EE3;&#x7801;&#x91C7;&#x53D6;&#x884C;&#x52A8; 2. &#x4EE3;&#x7406;&#x6A21;&#x5F0F; &#x4EE3;&#x7406;(Proxy)&#x662F;&#x4E00;&#x79CD;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF1A;&#x4E3A;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x4EE3;&#x7406;&#x4EE5;&#x63A7;&#x5236;&#x5BF9;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE;&#xFF0C;&#x5373;&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x76EE;&#x6807;&#x5BF9;&#x8C61;.&#x8FD9;&#x6837;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;:&#x53EF;&#x4EE5;&#x5728;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x5B9E;&#x73B0;&#x7684;&#x57FA;&#x7840;&#x4E0A;,&#x589E;&#x5F3A;&#x989D;&#x5916;&#x7684;&#x529F;&#x80FD;&#x64CD;&#x4F5C;,&#x5373;&#x6269;&#x5C55;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x529F;&#x80FD;. &#x7F16;&#x7A0B;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x601D;&#x60F3;&#xFF1A;&#x4E0D;&#x8981;&#x968F;&#x610F;&#x53BB;&#x4FEE;&#x6539;&#x522B;&#x4EBA;&#x5DF2;&#x7ECF;&#x5199;&#x597D;&#x7684;&#x4EE3;&#x7801;&#x6216;&#x8005;&#x65B9;&#x6CD5;,&#x5982;&#x679C;&#x9700;&#x6539;&#x4FEE;&#x6539;,&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x6269;&#x5C55;&#x8BE5;&#x65B9;&#x6CD5; &#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x7684;&#x5173;&#x952E;&#x70B9;&#x662F;:&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E0E;&#x76EE;&#x6807;&#x5BF9;&#x8C61;.&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x662F;&#x5BF9;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x6269;&#x5C55;,&#x5E76;&#x4F1A;&#x8C03;&#x7528;&#x76EE;&#x6807;&#x5BF9;&#x8C61; 3. &#x9759;&#x6001;&#x4EE3;&#x7406;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x5728;&#x4F7F;&#x7528;&#x65F6;,&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x63A5;&#x53E3;&#x6216;&#x8005;&#x7236;&#x7C7B;,&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E0E;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E00;&#x8D77;&#x5B9E;&#x73B0;&#x76F8;&#x540C;&#x7684;&#x63A5;&#x53E3;&#x6216;&#x8005;&#x662F;&#x7EE7;&#x627F;&#x76F8;&#x540C;&#x7236;&#x7C7B;. &#x5728;&#x7F16;&#x8BD1;&#x671F;&#x786E;&#x5B9A;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x524D;&#x4EE3;&#x7406;&#x7C7B;&#x7684;.class&#x6587;&#x4EF6;&#x5C31;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E86;&#x3002; &#x5982;&#xFF1A;&#x5728;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E2D;&#x5B9E;&#x4F8B;&#x5316;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x6216;&#x8005;&#x5C06;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4F20;&#x5165;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5; &#x5B9E;&#x4F8B;&#xFF1A; &#x6A21;&#x62DF;&#x4FDD;&#x5B58;&#x52A8;&#x4F5C;,&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x4FDD;&#x5B58;&#x52A8;&#x4F5C;&#x7684;&#x63A5;&#x53E3;:IUserDao.java,&#x7136;&#x540E;&#x76EE;&#x6807;&#x5BF9;&#x8C61;UserDao.java&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x65B9;&#x6CD5;,&#x6B64;&#x65F6;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x65B9;&#x5F0F;,&#x5C31;&#x9700;&#x8981;&#x5728;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;(UserDaoProxy.java)&#x4E2D;&#x4E5F;&#x5B9E;&#x73B0;IUserDao&#x63A5;&#x53E3;.&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8C03;&#x7528;&#x76EE;&#x6807;&#x5BF9;&#x8C61;.&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738// IUserDao.javapublic interface IUserDao { void save();}// UserDao.javapublic class UserDao implements IUserDao { public void save() { System.out.println(&quot;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x3002;&#x3002;&#x3002;&#x3002;&quot;); }}// UserDaoProxy.javapublic class UserDaoProxy implements IUserDao { // &#x63A5;&#x53D7;&#x4FDD;&#x5B58;&#x76EE;&#x6807;&#x5BF9;&#x8C61; private IUserDao userDao; public UserDaoProxy(IUserDao userDao){ this.userDao = userDao; } public void save() { // &#x5BF9;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x529F;&#x80FD;&#x8FDB;&#x884C;&#x589E;&#x5F3A; System.out.println(&quot;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5F00;&#x59CB;&#x3002;&#x3002;&#x3002;&quot;); userDao.save();// &#x8C03;&#x7528;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x65B9;&#x6CD5; System.out.println(&quot;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7ED3;&#x675F;&quot;); }}// Test.javapublic void staticProxyTest() { IUserDao userDao = new UserDao(); UserDaoProxy userDaoProxy = new UserDaoProxy(userDao); userDaoProxy.save();} &#x9759;&#x6001;&#x4EE3;&#x7406;&#x7684;&#x4F18;&#x7F3A;&#x70B9;&#xFF1A; &#x53EF;&#x4EE5;&#x505A;&#x5230;&#x5728;&#x4E0D;&#x4FEE;&#x6539;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x529F;&#x80FD;&#x524D;&#x63D0;&#x4E0B;,&#x5BF9;&#x76EE;&#x6807;&#x529F;&#x80FD;&#x6269;&#x5C55;. &#x4EE3;&#x7406;&#x7C7B;&#x548C;&#x59D4;&#x6258;&#x7C7B;&#x5B9E;&#x73B0;&#x76F8;&#x540C;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x540C;&#x65F6;&#x8981;&#x5B9E;&#x73B0;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x51FA;&#x73B0;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x4EE3;&#x7801;&#x91CD;&#x590D;&#x3002;&#x5982;&#x679C;&#x63A5;&#x53E3;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x9664;&#x4E86;&#x6240;&#x6709;&#x5B9E;&#x73B0;&#x7C7B;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5916;&#xFF0C;&#x6240;&#x6709;&#x4EE3;&#x7406;&#x7C7B;&#x4E5F;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x6B64;&#x65B9;&#x6CD5;&#x3002;&#x589E;&#x52A0;&#x4E86;&#x4EE3;&#x7801;&#x7EF4;&#x62A4;&#x7684;&#x590D;&#x6742;&#x5EA6;&#x3002; 4. &#x52A8;&#x6001;&#x4EE3;&#x7406; &#x52A8;&#x6001;&#x4EE3;&#x7406;&#x7684;&#x7279;&#x70B9;&#xFF1A; &#x5728;&#x8FD0;&#x884C;&#x671F;&#xFF0C;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x673A;&#x5236;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x7EC4;&#x7ED9;&#x5B9A;&#x63A5;&#x53E3;&#x7684;&#x65B0;&#x7C7B; &#x5728;&#x8FD0;&#x884C;&#x65F6;&#x751F;&#x6210;&#x7684;class&#xFF0C;&#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x4E00;&#x7EC4;interface&#x7ED9;&#x5B83;&#xFF0C;&#x7136;&#x540E;&#x8BE5;class&#x5C31;&#x5BA3;&#x79F0;&#x5B83;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E9B; interface&#x3002;&#x8BE5;class&#x7684;&#x5B9E; &#x4F8B;&#x53EF;&#x4EE5;&#x5F53;&#x4F5C;&#x8FD9;&#x4E9B;interface&#x4E2D;&#x7684;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x6765;&#x7528;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;Dynamic Proxy&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;Proxy&#xFF0C; &#x5B83;&#x4E0D;&#x4F1A;&#x66FF;&#x4F60;&#x4F5C;&#x5B9E;&#x8D28;&#x6027;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x5728;&#x751F;&#x6210;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#x65F6;&#x4F60;&#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;handler&#xFF0C;&#x7531;&#x5B83;&#x63A5;&#x7BA1;&#x5B9E;&#x9645;&#x7684;&#x5DE5; &#x4F5C;&#x3002; &#x52A8;&#x6001;&#x4EE3;&#x7406;&#x4E5F;&#x53EB;&#x505A;:JDK&#x4EE3;&#x7406;,&#x63A5;&#x53E3;&#x4EE3;&#x7406; &#x63A5;&#x53E3;&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#x90FD;&#x88AB;&#x8F6C;&#x79FB;&#x5230;&#x8C03;&#x7528;&#x5904;&#x7406;&#x5668;&#x4E00;&#x4E2A;&#x96C6;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#x5904;&#x7406;&#xFF08;InvocationHandler.invoke&#xFF09;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x5728;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x6570;&#x91CF;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x7075;&#x6D3B;&#x5904;&#x7406;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x50CF;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x90A3;&#x6837;&#x6BCF;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x4E2D;&#x8F6C;&#x3002;&#x800C;&#x4E14;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x7684;&#x5E94;&#x7528;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x7C7B;&#x804C;&#x8D23;&#x66F4;&#x52A0;&#x5355;&#x4E00;&#xFF0C;&#x590D;&#x7528;&#x6027;&#x66F4;&#x5F3A; JDK&#x4E2D;&#x751F;&#x6210;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;API&#xFF1A;&#x4EE3;&#x7406;&#x7C7B;&#x6240;&#x5728;&#x7684;&#x5305;&#x662F;:java.lang.reflect.Proxy JDK&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;newProxyInstance&#x65B9;&#x6CD5;,&#x4F46;&#x662F;&#x8BE5;&#x65B9;&#x6CD5;&#x9700;&#x8981;&#x63A5;&#x6536;&#x4E09;&#x4E2A;&#x53C2;&#x6570;,&#x5B8C;&#x6574;&#x7684;&#x5199;&#x6CD5;&#x662F;: 1static Object newProxyInstance(ClassLoader loader, Class [] interfaces, InvocationHandler handler) &#x65B9;&#x6CD5;&#x4E3A;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#xFF1A; ClassLoader&#xFF1A;&#x6307;&#x5B9A;&#x5F53;&#x524D;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x4F7F;&#x7528;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;,&#x7528;null&#x8868;&#x793A;&#x9ED8;&#x8BA4;&#x7C7B;&#x52A0;&#x8F7D;&#x5668; Class[] interfaces:&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x6570;&#x7EC4; InvocationHandler handler:&#x8C03;&#x7528;&#x5904;&#x7406;&#x5668;,&#x6267;&#x884C;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#x65F6;,&#x4F1A;&#x89E6;&#x53D1;&#x8C03;&#x7528;&#x5904;&#x7406;&#x5668;&#x7684;&#x65B9;&#x6CD5;,&#x4ECE;&#x800C;&#x628A;&#x5F53;&#x524D;&#x6267;&#x884C;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x5165; java.lang.reflect.InvocationHandler&#xFF1A;&#x8FD9;&#x662F;&#x8C03;&#x7528;&#x5904;&#x7406;&#x5668;&#x63A5;&#x53E3;&#xFF0C;&#x5B83;&#x81EA;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A; invoke&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x96C6;&#x4E2D;&#x5904;&#x7406;&#x5728;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x7C7B;&#x5BF9;&#x8C61;&#x4E0A;&#x7684;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#xFF0C;&#x901A;&#x5E38;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#x5B9E;&#x73B0;&#x5BF9;&#x59D4;&#x6258;&#x7C7B;&#x7684;&#x4EE3;&#x7406;&#x8BBF;&#x95EE;&#x3002;&#x5176;&#x539F;&#x578B;&#x662F;&#xFF1A; 123// &#x8BE5;&#x65B9;&#x6CD5;&#x8D1F;&#x8D23;&#x96C6;&#x4E2D;&#x5904;&#x7406;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x7C7B;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x65E2;&#x662F;&#x4EE3;&#x7406;&#x7C7B;&#x5B9E;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x5BF9;&#x8C61;// &#x7B2C;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x662F;&#x8C03;&#x7528;&#x53C2;&#x6570;&#x3002;Object invoke(Object proxy, Method method, Object[] args) &#x5B9E;&#x4F8B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041// IUserDao.java&#x3001;UserDao.java&#x548C;&#x4E0A;&#x8FF0;&#x5B9A;&#x4E49;&#x4E0D;&#x53D8;// ProxyFactory.java &#x751F;&#x6210;&#x4EE3;&#x7406;&#x7C7B;&#x7684;&#x5DE5;&#x5382;/*&#x5BF9;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x751F;&#x6210;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;*/public class DynamicProxyFactory { private Object target; public DynamicProxyFactory(Object target){ this.target = target; } public Object getProxyInstance(){ return Proxy.newProxyInstance( // &#x8C03;&#x7528;Proxy&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x751F;&#x6210;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; target.getClass().getClassLoader(), // &#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x52A0;&#x8F7D;&#x5668; target.getClass().getInterfaces(), // &#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x6570;&#x7EC4; new InvocationHandler(){ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { // &#x53EF;&#x4EE5;&#x5BF9;&#x6267;&#x884C;&#x7684;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#xFF0C;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x589E;&#x5F3A;&#x3002; /* if(method == XXX){} else{} */ System.out.println(&quot;&#x4EE3;&#x7406;&#x5F00;&#x59CB;&#x3002;&#x3002;&quot;); Object returnValue = method.invoke(target, args); // &#x8C03;&#x7528;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5; System.out.println(&quot;&#x4EE3;&#x7406;&#x7ED3;&#x675F;&#x3002;&#x3002;&quot;); return returnValue; // &#x5982;&#x679C;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x5BF9;&#x5E94;&#x65B9;&#x6CD5;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; } } ); }}// &#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;public void DynamicProxyTest() { IUserDao userDao = new UserDao(); IUserDao dynamicProy = (IUserDao) new DynamicProxyFactory(userDao).getProxyInstance(); dynamicProy.save();} &#x603B;&#x7ED3;&#xFF1A;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E0D;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;,&#x4F46;&#x662F;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x4E00;&#x5B9A;&#x8981;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;,&#x5426;&#x5219;&#x4E0D;&#x80FD;&#x7528;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x3002; 5. Cglib&#x4EE3;&#x7406;&#x4E0A;&#x9762;&#x7684;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x548C;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x90FD;&#x662F;&#x8981;&#x6C42;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x63A5;&#x53E3;,&#x4F46;&#x662F;&#x6709;&#x65F6;&#x5019;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x5BF9;&#x8C61;,&#x5E76;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x4EFB;&#x4F55;&#x7684;&#x63A5;&#x53E3;,&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6784;&#x5EFA;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x5B50;&#x7C7B;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x4EE3;&#x7406;,&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x5C31;&#x53EB;&#x505A;:Cglib&#x4EE3;&#x7406; Cglib&#x4EE3;&#x7406;,&#x4E5F;&#x53EB;&#x4F5C;&#x5B50;&#x7C7B;&#x4EE3;&#x7406;,&#x5B83;&#x662F;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x5BF9;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x529F;&#x80FD;&#x7684;&#x6269;&#x5C55;. Cglib&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x5927;&#x7684;&#x9AD8;&#x6027;&#x80FD;&#x7684;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5305;,&#x5B83;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x6269;&#x5C55;java&#x7C7B;&#x4E0E;&#x5B9E;&#x73B0;java&#x63A5;&#x53E3;.&#x5B83;&#x5E7F;&#x6CDB;&#x7684;&#x88AB;&#x8BB8;&#x591A;AOP&#x7684;&#x6846;&#x67B6;&#x4F7F;&#x7528;,&#x4F8B;&#x5982;Spring AOP&#x548C;synaop,&#x4E3A;&#x4ED6;&#x4EEC;&#x63D0;&#x4F9B;&#x65B9;&#x6CD5;&#x7684;interception(&#x62E6;&#x622A;) Cglib&#x5305;&#x7684;&#x5E95;&#x5C42;&#x662F;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5B57;&#x8282;&#x7801;&#x5904;&#x7406;&#x6846;&#x67B6;ASM&#x6765;&#x8F6C;&#x6362;&#x5B57;&#x8282;&#x7801;&#x5E76;&#x751F;&#x6210;&#x65B0;&#x7684;&#x5B50;&#x7C7B;. &#x4EE3;&#x7406;&#x7684;&#x7C7B;&#x4E0D;&#x80FD;&#x4E3A;final,&#x5426;&#x5219;&#x62A5;&#x9519;&#xFF1B;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#x5982;&#x679C;&#x4E3A;final/static,&#x90A3;&#x4E48;&#x5C31;&#x4E0D;&#x4F1A;&#x88AB;&#x62E6;&#x622A;,&#x5373;&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x989D;&#x5916;&#x7684;&#x4E1A;&#x52A1;&#x65B9;&#x6CD5;. &#x4E0B;&#x9762;&#x662F;&#x5B9E;&#x4F8B; 123456789101112131415161718192021222324252627282930313233343536373839404142434445// UserDao.java &#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x4EFB;&#x4F55;&#x63A5;&#x53E3;public class UserDao2 { public void save() { System.out.println(&quot;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x3002;&#x3002;&#x3002;&#x3002;&quot;); }}// ClassProxyFactory.java &#x4F20;&#x5165;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#xFF0C;&#x8C03;&#x7528;getProxyInstance()&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;public class ClassProxyFactory implements MethodInterceptor { // &#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;intercept private Object target; // &#x7EF4;&#x62A4;&#x76EE;&#x6807;&#x5BF9;&#x8C61; public ClassProxyFactory(Object target){ this.target = target; } public Object getProxyInstance(){ // &#x4F7F;&#x7528;&#x5DE5;&#x5177;&#x7C7B; Enhancer enhancer = new Enhancer(); // &#x8BBE;&#x7F6E;&#x7236;&#x7C7B; enhancer.setSuperclass(target.getClass()); // &#x8BBE;&#x7F6E;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x4E86;MethodInterceptor&#x63A5;&#x53E3;&#x4E2D;&#x7684;intercept&#x7684;&#x7C7B;&#xFF0C;&#x672C;&#x4F8B;&#x5C31;&#x662F;this enhancer.setCallback(this); // &#x521B;&#x5EFA;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5E76;&#x8FD4;&#x56DE; return enhancer.create(); } public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable { // MethodInterceptor&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x5BF9;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x90A3;&#x4E2A;&#x7684;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x589E;&#x5F3A; System.out.println(&quot;&#x4EE3;&#x7406;&#x5F00;&#x59CB;&#x3002;&#x3002;&#x3002;&quot;); Object returnValue = method.invoke(target, args); // &#x8C03;&#x7528;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x65B9;&#x6CD5; System.out.println(&quot;&#x4EE3;&#x7406;&#x7ED3;&#x675F;&#x3002;&#x3002;&#x3002;&quot;); return returnValue; }}// &#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;public void ClassProxyTest() { IUserDao userDao = new UserDao(); IUserDao classProxy = (IUserDao) new ClassProxyFactory(userDao).getProxyInstance(); classProxy.save();} AOP(&#x9762;&#x5411;&#x5207;&#x9762;&#x7F16;&#x7A0B;)&#x5C06;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#xFF0C;&#x6027;&#x80FD;&#x7EDF;&#x8BA1;&#xFF0C;&#x5B89;&#x5168;&#x63A7;&#x5236;&#xFF0C;&#x4E8B;&#x52A1;&#x5904;&#x7406;&#xFF0C;&#x5F02;&#x5E38;&#x5904;&#x7406;&#x7B49;&#x4EE3;&#x7801;&#x4ECE;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x4E2D;&#x5212;&#x5206;&#x51FA;&#x6765;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x8FD9;&#x4E9B;&#x884C;&#x4E3A;&#x7684;&#x5206;&#x79BB;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x53EF;&#x4EE5;&#x5C06;&#x5B83;&#x4EEC;&#x72EC;&#x7ACB;&#x5230;&#x975E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x8FDB;&#x800C;&#x6539;&#x53D8;&#x8FD9;&#x4E9B;&#x884C;&#x4E3A;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x5F71;&#x54CD;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x4EE3;&#x7801;&#x2014;&#x89E3;&#x8026;&#x3002; &#x5728;Spring&#x7684;AOP&#x7F16;&#x7A0B;&#x4E2D;: &#x5982;&#x679C;&#x52A0;&#x5165;&#x5BB9;&#x5668;&#x7684;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x6709;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;,&#x7528;JDK&#x4EE3;&#x7406; &#x5982;&#x679C;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;,&#x7528;Cglib&#x4EE3;&#x7406; 6. &#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x548C;&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x90FD;&#x662F;&#x5B9E;&#x73B0;&#x540C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x4E00;&#x4E2A;&#x7C7B;&#x5305;&#x88C5;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x3002; &#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#xFF1A;&#x80FD;&#x52A8;&#x6001;&#x7684;&#x65B0;&#x589E;&#x6216;&#x7EC4;&#x5408;&#x5BF9;&#x8C61;&#x7684;&#x884C;&#x4E3A;&#x5728;&#x4E0D;&#x6539;&#x53D8;&#x63A5;&#x53E3;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x52A8;&#x6001;&#x6269;&#x5C55;&#x5BF9;&#x8C61;&#x7684;&#x529F;&#x80FD; &#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF1A;&#x4E3A;&#x5176;&#x4ED6;&#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x4EE3;&#x7406;&#x4EE5;&#x63A7;&#x5236;&#x5BF9;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE;&#x5728;&#x4E0D;&#x6539;&#x53D8;&#x63A5;&#x53E3;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x63A7;&#x5236;&#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE; &#x88C5;&#x9970;&#x6A21;&#x5F0F;&#x662F;&#x201C;&#x65B0;&#x589E;&#x884C;&#x4E3A;&#x201D;&#xFF0C;&#x800C;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x662F;&#x201C;&#x63A7;&#x5236;&#x8BBF;&#x95EE;&#x201D;&#x3002;&#x5173;&#x952E;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5224;&#x65AD;&#x662F;&#x201C;&#x65B0;&#x589E;&#x884C; &#x4E3A;&#x201D;&#x8FD8;&#x662F;&#x201C;&#x63A7;&#x5236;&#x8BBF;&#x95EE;&#x201D;&#x3002;&#x4F60;&#x5728;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x5199;&#x88C5;&#x9970;&#xFF0C;&#x5927;&#x5BB6;&#x5C31;&#x77E5;&#x9053;&#x8FD9;&#x662F;&#x5728;&#x589E;&#x52A0;&#x529F;&#x80FD;&#xFF0C;&#x4F60;&#x5199;&#x4EE3;&#x7406;&#xFF0C;&#x5927;&#x5BB6;&#x5C31;&#x77E5;&#x9053;&#x662F;&#x5728;&#x9650;&#x5236;&#x3002;]]></content>
      <tags>
        <tag>Java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java数据库连接]]></title>
    <url>%2F2019%2F07%2F25%2FJava%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[1. JDBCJDBC(Java DataBase connectivity)&#x662F;&#x7528;&#x4E8E;&#x6267;&#x884C;SQL&#x8BED;&#x53E5;&#x7684;Java API&#x3002;&#x53EF;&#x4EE5;&#x4E3A;&#x591A;&#x79CD;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x63D0;&#x4F9B;&#x7EDF;&#x4E00;&#x8BBF;&#x95EE;&#x3002;&#x4F7F;&#x7528;Java&#x7F16;&#x5199;&#x7684;&#x7C7B;&#x548C;&#x63A5;&#x53E3;&#xFF0C;&#x662F;Java&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x7684;&#x6807;&#x51C6;&#x548C;&#x89C4;&#x8303;&#x3002;JBDC&#x662F;&#x501F;&#x53E3;&#xFF0C;&#x9A71;&#x52A8;&#x662F;&#x5BF9;&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x3002; 2. &#x8FD0;&#x884C;&#x7684;&#x6D41;&#x7A0B;&#x4E00;&#x822C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x7684;&#x6D41;&#x7A0B;&#x4E3A;&#xFF1A; &#x6CE8;&#x518C;&#x9A71;&#x52A8;(&#x52A0;&#x8F7D;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x5E93;&#x7684;&#x9A71;&#x52A8;&#x7C7B;) &#x83B7;&#x5F97;&#x8FDE;&#x63A5;(&#x8FDE;&#x63A5;&#x5230;&#x6570;&#x636E;&#x5E93;) &#x83B7;&#x53D6;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x5E73;&#x53F0; &#x6267;&#x884C;sql&#x8BED;&#x53E5; &#x5904;&#x7406;&#x7ED3;&#x679C; &#x91CA;&#x653E;&#x8D44;&#x6E90; &#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 123456789public void test1() throws ClassNotFoundException, SQLException { Class.forName(&quot;com.mysql.jdbc.Driver&quot;); Connection connection = DriverManager.getConnection(url, username, password); Statement statement = connection.createStatement(); statement.execute(&quot;SQL&quot;); statement.close(); connection.close();} &#x4F46;&#x662F;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5728;&#x6BCF;&#x6B21;&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x5E93;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x9700;&#x8981;&#x5199;&#xFF0C;&#x662F;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#x7684;&#x3002;&#x800C;&#x4E14;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x662F;&#x6BD4;&#x8F83;&#x8017;&#x8D39;&#x8D44;&#x6E90;&#x7684;&#x3002;&#x4E8E;&#x662F;&#x6709;&#x8FDE;&#x63A5;&#x6C60;&#x6280;&#x672F;&#x7684;&#x4EA7;&#x751F;&#x3002; 3. &#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6C60;&#x521B;&#x5EFA;&#x8FDE;&#x63A5;&#x3001;&#x91CA;&#x653E;&#x8FDE;&#x63A5;&#x90FD;&#x662F;&#x975E;&#x5E38;&#x6D88;&#x8017;&#x8D44;&#x6E90;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x7F13;&#x51B2;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x5229;&#x7528;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x6C60;&#x3002;&#x7528;&#x6237;&#x4ECE;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x83B7;&#x53D6;&#x548C;&#x5F52;&#x8FD8;&#x8FDE;&#x63A5;&#x3002;&#x5728;&#x8FDE;&#x63A5;&#x6C60;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x548C;&#x6570;&#x636E;&#x5E93;&#x521B;&#x5EFA;&#x4E00;&#x4E9B;&#x8FDE;&#x63A5;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x7528;&#x6237;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x5173;&#x95ED;&#xFF0C;&#x800C;&#x662F;&#x5F52;&#x8FD8;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#x3002;&#x76F8;&#x5F53;&#x4E8E;&#x8BA9;&#x8FDE;&#x63A5;&#x6C60;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;&#x8FDE;&#x63A5;&#x3002; 3.1 &#x89C4;&#x8303;Java&#x4E3A;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6C60;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x63A5;&#x53E3;javax.sql.DataSource&#x3002;&#x4E0D;&#x540C;&#x8FDE;&#x63A5;&#x6C60;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x3002;&#x5176;&#x4E2D;&#x6BD4;&#x8F83;&#x5E38;&#x7528;&#x7684;&#x4E24;&#x4E2A;DBCP&#x548C;C3P0 &#x5728;DataSource&#x63A5;&#x53E3;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;getConnction&#x3002; 4. C3P0&#x4F7F;&#x7528;C3P0&#x9700;&#x8981;&#x4F7F;&#x7528;MySQL&#x7684;&#x9A71;&#x52A8;&#x4EE5;&#x53CA;c3p0&#x7684;jar&#x5305; &#x5176;&#x4E2D;c3p0&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x3002;&#x76F4;&#x63A5;&#x5728;&#x7C7B;&#x8DEF;&#x5F84;&#x5728;&#x521B;&#x5EFA;&#x6587;&#x4EF6;c3p0-config.xml&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;&#x4E0B;&#x9762;&#x7684;&#x5B9E;&#x4F8B;&#x914D;&#x7F6E;&#x5373;&#x53EF;&#x3002; 12345678910111213141516171819202122232425262728293031&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;c3p0-config&gt; &lt;!-- This is default config! &#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x6E90;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x7684;&#x914D;&#x7F6E;--&gt; &lt;default-config&gt; &lt;property name=&quot;driverClass&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt; &lt;property name=&quot;jdbcUrl&quot;&gt;jdbc:mysql://localhost:3306/contacts?characterEncoding=utf8&lt;/property&gt; &lt;property name=&quot;user&quot;&gt;root&lt;/property&gt; &lt;property name=&quot;password&quot;&gt;123456&lt;/property&gt; &lt;property name=&quot;acquireIncrement&quot;&gt;5&lt;/property&gt; &lt;property name=&quot;initialPoolSize&quot;&gt;10&lt;/property&gt; &lt;property name=&quot;minPoolSize&quot;&gt;5&lt;/property&gt; &lt;property name=&quot;maxPoolSize&quot;&gt;20&lt;/property&gt; &lt;property name=&quot;maxStatements&quot;&gt;0&lt;/property&gt; &lt;property name=&quot;maxStatementsPerConnection&quot;&gt;5&lt;/property&gt; &lt;/default-config&gt; &lt;!-- This is my config for mysql &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x5728;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x6E90;&#x7684;&#x65F6;&#x5019;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x6765;&#x4F7F;&#x7528;&#x8BE5;&#x914D;&#x7F6E;--&gt; &lt;named-config name=&quot;mysql&quot;&gt; &lt;property name=&quot;driverClass&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt; &lt;property name=&quot;jdbcUrl&quot;&gt;jdbc:mysql://localhost:3306/test&lt;/property&gt; &lt;property name=&quot;user&quot;&gt;root&lt;/property&gt; &lt;property name=&quot;password&quot;&gt;123456&lt;/property&gt; &lt;property name=&quot;initialPoolSize&quot;&gt;10&lt;/property&gt; &lt;property name=&quot;maxIdleTime&quot;&gt;30&lt;/property&gt; &lt;property name=&quot;maxPoolSize&quot;&gt;100&lt;/property&gt; &lt;property name=&quot;minPoolSize&quot;&gt;10&lt;/property&gt; &lt;property name=&quot;maxStatements&quot;&gt;200&lt;/property&gt; &lt;/named-config&gt;&lt;/c3p0-config&gt; &#x521B;&#x5EFA;&#x5B8C;&#x4E0A;&#x8FF0;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E4B;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6570;&#x636E;&#x6E90;&#x83B7;&#x53D6;&#x8FDE;&#x63A5;&#xFF0C;&#x7136;&#x540E;&#x8FD0;&#x884C;SQL&#x8BED;&#x53E5;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839public class C3p0 { private static ComboPooledDataSource comboPooledDataSource = null; private static final String INSERT_SQL = &quot;INSERT INTO test1(name, age, score) VALUES(?, ?, ?)&quot;; static { comboPooledDataSource = new ComboPooledDataSource(); // comboPooledDataSource = new ComboPooledDataSource(&quot;mysql&quot;); // &#x6709;&#x9009;&#x62E9;&#x7684;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x914D;&#x7F6E; } @Test public void test1() throws SQLException { Connection connection = comboPooledDataSource.getConnection(); PreparedStatement preparedStatement = connection.prepareStatement(INSERT_SQL); preparedStatement.setString(1, &quot;wangdaoqi&quot;); preparedStatement.setInt(2, 23); preparedStatement.setInt(3, 99); preparedStatement.execute(); preparedStatement.close(); connection.close(); } @Test public void test2() throws SQLException { comboPooledDataSource.setUser(&quot;wangdh&quot;); Connection connection = comboPooledDataSource.getConnection(); PreparedStatement preparedStatement = connection.prepareStatement(INSERT_SQL); preparedStatement.setString(1, &quot;wangyou&quot;); preparedStatement.setInt(2, 47); preparedStatement.setInt(3, 60); preparedStatement.execute(); preparedStatement.close(); connection.close(); }} &#x5176;&#x4E2D;&#x5982;&#x679C;&#x4E0D;&#x4F7F;&#x7528;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60;&#x7684;set&#x65B9;&#x6CD5;&#x6765;&#x8BBE;&#x7F6E;&#x5404;&#x4E2A;&#x53C2;&#x6570;&#x3002;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>DataBase</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java反射机制]]></title>
    <url>%2F2019%2F07%2F25%2FJava%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%2F</url>
    <content type="text"><![CDATA[1. &#x53CD;&#x5C04;&#x7684;&#x6982;&#x5FF5; Java &#x53CD;&#x5C04;&#x673A;&#x5236;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x90FD;&#x80FD;&#x591F;&#x77E5;&#x9053;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#xFF1B;&#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x90FD;&#x80FD;&#x591F;&#x8C03;&#x7528;&#x5B83;&#x7684;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x3002;&#x8FD9;&#x79CD; &#x52A8;&#x6001;&#x7684;&#x83B7;&#x53D6;&#x4FE1;&#x606F; &#x4EE5;&#x53CA; &#x52A8;&#x6001;&#x8C03;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5; &#x7684;&#x529F;&#x80FD;&#x79F0;&#x4E3A; java &#x7684;&#x53CD;&#x5C04;&#x673A;&#x5236;&#x3002; &#x53CD;&#x5C04;&#x673A;&#x5236;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#x201C;&#x8FD0;&#x884C;&#x65F6;&#x201D;&#xFF0C;&#x5176;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x52A0;&#x8F7D;&#x3001;&#x63A2;&#x7D22;&#x4EE5;&#x53CA;&#x4F7F;&#x7528;&#x7F16;&#x8BD1;&#x671F;&#x95F4;&#x5B8C;&#x5168;&#x672A;&#x77E5;&#x7684; .class &#x6587;&#x4EF6;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;Java &#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x65F6;&#x624D;&#x5F97;&#x77E5;&#x540D;&#x79F0;&#x7684; .class &#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x83B7;&#x6089;&#x5176;&#x5B8C;&#x6574;&#x6784;&#x9020;&#xFF0C;&#x5E76;&#x751F;&#x6210;&#x5176;&#x5BF9;&#x8C61;&#x5B9E;&#x4F53;&#x3001;&#x6216;&#x5BF9;&#x5176; fields&#xFF08;&#x53D8;&#x91CF;&#xFF09;&#x8BBE;&#x503C;&#x3001;&#x6216;&#x8C03;&#x7528;&#x5176; methods&#xFF08;&#x65B9;&#x6CD5;&#xFF09;&#x3002; &#x4E2A;&#x4EBA;&#x7406;&#x89E3;&#xFF1A;Java&#x53CD;&#x5C04;&#x673A;&#x5236;&#x5728;&#x5404;&#x5927;&#x6846;&#x67B6;&#x4E2D;&#x4F7F;&#x7528;&#x5F97;&#x6BD4;&#x8F83;&#x591A;&#x3002;&#x56E0;&#x4E3A;&#x53CD;&#x5C04;&#x673A;&#x5236;&#x53EF;&#x4EE5;&#x4F7F;&#x5F97;&#x5728;&#x4E0D;&#x6539;&#x53D8;&#x6E90;&#x7801;&#x3001;&#x4E0D;&#x518D;&#x6B21;&#x7F16;&#x8BD1;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5411;&#x5916;&#x754C;&#x66B4;&#x9732;&#x4E86;&#x501F;&#x53E3;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x8BBE;&#x5B9A;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x7684;class&#x6587;&#x4EF6;&#x7684;&#x5168;&#x9650;&#x5B9A;&#x540D;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x81EA;&#x5DF1;&#x7F16;&#x5199;&#x7684;class&#x6574;&#x5408;&#x5230;&#x5DF2;&#x6709;&#x7684;&#x6846;&#x67B6;&#x4E2D;&#x3002;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x529F;&#x80FD;&#x3002; &#x548C;&#x53CD;&#x5C04;&#x76F8;&#x5173;&#x7684;&#x5305;&#x90FD;&#x5728;java.lang.reflect&#x4E0B; 2. Class&#x5BF9;&#x8C61;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;java&#x7C7B;&#x5B57;&#x8282;&#x7801;&#x5728;&#x52A0;&#x8F7D;&#x5230;JVM&#x4E2D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x4E3A;&#x5176;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Class&#x5BF9;&#x8C61;(&#x6E90;&#x7801;&#x5728;java.lang.Class)&#x3002;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x5305;&#x542B;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#x3002;&#x5305;&#x62EC;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3001;&#x6784;&#x9020;&#x5668;&#x3001;&#x65B9;&#x6CD5;&#x7B49;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#x83B7;&#x5F97;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x3002; 2.1 Class.forName()&#x76F4;&#x63A5;&#x4F7F;&#x7528;Class&#x7C7B;&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;forName()&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x5B57;&#x8282;&#x7801;&#x6587;&#x4EF6;&#x52A0;&#x8F7D;&#x5230;JVM&#x4E2D;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;Class&#x5BF9;&#x8C61;&#x3002; 1public static Class&lt;?&gt; forName(String className) &#x5728;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x7684;&#x65F6;&#x5019;&#x901A;&#x5E38;&#x5229;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;&#x3002; 2.2 &#x76F4;&#x63A5;&#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;class12Class&lt;?&gt; a = int.class;Class&lt;?&gt; b = Integer.TYPE; 2.3 &#x901A;&#x8FC7;&#x8C03;&#x7528;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;getCLass&#xFF08;&#xFF09;&#x65B9;&#x6CD5;12Integer a = new Integer(3);Class&lt;?&gt; b = a.getClass(); 3. &#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x751F;&#x6210;&#x5BF9;&#x8C61;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x751F;&#x6210;&#x5BF9;&#x8C61;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A; &#x4F7F;&#x7528;Class&#x5BF9;&#x8C61;&#x7684;newInstance()&#x65B9;&#x6CD5;&#x6765;&#x521B;&#x5EFA; 12Class&lt;String&gt; a = String.class;String b = a.newInstance(); &#x5148;&#x901A;&#x8FC7;Class&#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x6307;&#x5B9A;&#x7684;Constructor&#x5BF9;&#x8C61;&#xFF0C;&#x518D;&#x8C03;&#x7528;Constructor&#x5BF9;&#x8C61;&#x7684;newInstance()&#x65B9;&#x6CD5;&#x6765;&#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x7528;&#x6307;&#x5B9A;&#x7684;&#x6784;&#x9020;&#x5668;&#x6784;&#x9020;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002; 123Class&lt;String&gt; a = String.class; b = a.getConstructor(String.class).newInstance(&quot;fdaf&quot;); // &#x5728;&#x83B7;&#x53D6;&#x7279;&#x5B9A;&#x53C2;&#x6570;&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C06;&#x53C2;&#x6570;&#x7684;class&#x5BF9;&#x8C61;&#x4F20;&#x5165;&#x5373;&#x53EF;&#x3002;System.out.println(b); 4. &#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;Class&#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x5230;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x5217;&#x8868;&#x3002; getDeclaredMethods &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7C7B;&#x6216;&#x63A5;&#x53E3;&#x58F0;&#x660E;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;&#x5305;&#x62EC;&#x516C;&#x5171;&#x3001;&#x4FDD;&#x62A4;&#x3001;&#x9ED8;&#x8BA4;&#xFF08;&#x5305;&#xFF09;&#x8BBF;&#x95EE;&#x548C;&#x79C1;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x4E0D;&#x5305;&#x62EC;&#x7EE7;&#x627F;&#x7684;&#x65B9;&#x6CD5;&#x3002; 1public Method[] getDeclaredMethods() throws SecurityException getMethods &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x67D0;&#x4E2A;&#x7C7B;&#x7684;&#x6240;&#x6709;&#x516C;&#x7528;&#xFF08;public&#xFF09;&#x65B9;&#x6CD5;&#xFF0C;&#x5305;&#x62EC;&#x5176;&#x7EE7;&#x627F;&#x7C7B;&#x7684;&#x516C;&#x7528;&#x65B9;&#x6CD5;&#x3002; 1public Method[] getMethods() throws SecurityException getMethod&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x65B9;&#x6CD5;&#x540D;&#x79F0;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x53C2;&#x6570;&#x4E3A;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#x5BF9;&#x5E94;Class&#x7684;&#x5BF9;&#x8C61;&#x3002; 1public Method getMethod(String name, Class&lt;?&gt;... parameterTypes) &#x5B9E;&#x4F8B;&#xFF1A; 12345678910111213141516171819public void methodTest() throws NoSuchMethodException { Class&lt;String&gt; a = String.class; Method[] m = a.getDeclaredMethods(); for (Method c: m ) { System.out.println(c); } System.out.println(&quot;-------------------&quot;); Method[] m1 = a.getMethods(); for (Method c : m) { System.out.println(c); } System.out.println(&quot;-------------------&quot;); Method m2 = a.getMethod(&quot;toString&quot;, null); System.out.println(m2);} 5. &#x83B7;&#x53D6;&#x6784;&#x9020;&#x5668;&#x4FE1;&#x606F;&#x901A;&#x8FC7;getConstructor(Class&lt;?&gt; &#x2026;)&#x65B9;&#x6CD5; &#x6765;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x53C2;&#x6570;&#x7684;&#x6784;&#x9020;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x5668;&#x7684;newInstnace()&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x3002; 1public T newInstance(Object ... initargs) 6. &#x83B7;&#x53D6;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x7684;&#x4FE1;&#x606F; getFiled&#xFF1A;&#x8BBF;&#x95EE;&#x516C;&#x6709;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF; getDeclaredField&#xFF1A;&#x6240;&#x6709;&#x5DF2;&#x58F0;&#x660E;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x5F97;&#x5230;&#x5176;&#x7236;&#x7C7B;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF; 1234567891011@Testpublic void fieldTest() throws NoSuchFieldException { Class&lt;Integer&gt; stringClass = Integer.class; Field[] f = stringClass.getFields(); for (Field f1 : f) { System.out.println(f1); } Field f2 = stringClass.getField(&quot;MAX_VALUE&quot;); System.out.println(f2);} 7. &#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x67D0;&#x4E2A;&#x65B9;&#x6CD5;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5BF9;&#x8C61;&#x548C;&#x5177;&#x4F53;&#x7684;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x6765;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5BF9;&#x8C61;&#x7684;invoke()&#x65B9;&#x6CD5;&#x3002;&#x5176;&#x539F;&#x578B;&#x4E3A;&#xFF1A; 12345public Object invoke(Object obj, Object... args) throws IllegalAccessException, IllegalArgumentException,InvocationTargetException// &#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;// &#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x9700;&#x8981;&#x7684;&#x53C2;&#x6570; &#x5B9E;&#x4F8B;&#xFF1A; 123456789101112131415161718@Testpublic void methodRunTest() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException { Class&lt;MyAdd&gt; a = MyAdd.class; Method m = a.getMethod(&quot;add&quot;, int.class, int.class); MyAdd o = new MyAdd(); System.out.println(m.invoke(o, 1, 2));}class MyAdd{ public static int add(int a1, int a2){ return a1+a2; } public static int sub(int a1, int a2){ return a1 - a2; }} 8. &#x8BBF;&#x95EE;&#x79C1;&#x6709;&#x6210;&#x5458;&#xFF0C;&#x8C03;&#x7528;&#x79C1;&#x6709;&#x65B9;&#x6CD5;&#x5229;&#x7528;&#x53CD;&#x5C04;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x7C7B;&#x7684;&#x79C1;&#x6709;&#x6210;&#x5458;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x7C7B;&#x7684;&#x79C1;&#x6709;&#x65B9;&#x6CD5;&#x3002; &#x5728;&#x83B7;&#x53D6;&#x5230;Field&#x5BF9;&#x8C61;&#x6216;&#x8005;Method&#x5BF9;&#x8C61;&#x4E4B;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x5176;&#x65B9;&#x6CD5;setAccessible(true)&#x6765;&#x4F7F;&#x5176;&#x53EF;&#x4EE5;&#x88AB;&#x8BBF;&#x95EE;&#x6216;&#x6267;&#x884C;&#x3002; &#x5728;&#x83B7;&#x53D6;Field&#x548C;Method&#x9700;&#x8981;&#x4F7F;&#x7528;getDeclaredField&#x548C;getDeclaredMethod&#x65B9;&#x6CD5;&#xFF0C;&#x624D;&#x80FD;&#x591F;&#x83B7;&#x5F97;&#x79C1;&#x6709;&#x6210;&#x5458;&#x548C;&#x79C1;&#x6709;&#x65B9;&#x6CD5;&#x3002; &#x5B9E;&#x4F8B;&#xFF1A; 12345678910111213141516171819202122232425262728293031@Testpublic void fielsAccTest() throws NoSuchFieldException, IllegalAccessException, InstantiationException { Class&lt;MyAdd&gt; myAddClass = MyAdd.class; Field field = myAddClass.getDeclaredField(&quot;a&quot;); MyAdd add = myAddClass.newInstance(); field.setAccessible(true); // &#x8BBE;&#x7F6E;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x4E3A;true field.set(add, 3); System.out.println(field.get(add));}@Testpublic void privateTest() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException { Class&lt;MyAdd&gt; myAddClass = MyAdd.class; Method m = myAddClass.getDeclaredMethod(&quot;sub&quot;, int.class, int.class); m.setAccessible(true); // &#x8BBE;&#x7F6E;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x4E3A;true MyAdd a = new MyAdd(); System.out.println(m.invoke(a, 2, 1));}class MyAdd{ private int a; public static int add(int a1, int a2){ return a1+a2; } private static int sub(int a1, int a2){ return a1 - a2; }} 9. &#x521B;&#x5EFA;&#x6570;&#x7EC4;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x5229;&#x7528;&#x53CD;&#x5C04;&#x521B;&#x5EFA;&#x6570;&#x7EC4;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 1234567@Testpublic void arrayTest() { Class&lt;String&gt; stringClass = String.class; Object o = Array.newInstance(stringClass, 10); Array.set(o, 0, &quot;123&quot;); System.out.println(Array.get(o, 0));} &#x5229;&#x7528;&#x53D1;&#x5C04;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x4F1A;&#x6D88;&#x8017;&#x4E00;&#x4E9B;&#x7CFB;&#x7EDF;&#x8D44;&#x6E90;&#xFF0C;&#x6548;&#x7387;&#x6BD4;&#x76F4;&#x63A5;&#x521B;&#x5EFA;&#x4F4E;&#x3002;&#x800C;&#x4E14;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x6743;&#x9650;&#x68C0;&#x67E5;&#xFF0C;&#x8BBF;&#x95EE;&#x7C7B;&#x4E2D;&#x7684;&#x79C1;&#x6709;&#x6210;&#x5458;&#x6216;&#x8005;&#x8C03;&#x7528;&#x79C1;&#x6709;&#x65B9;&#x6CD5;&#x3002;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring学习1_工厂模式、IOC]]></title>
    <url>%2F2019%2F07%2F16%2FSpring%E5%AD%A6%E4%B9%A01-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E3%80%81IOC%2F</url>
    <content type="text"><![CDATA[1. &#x7A0B;&#x5E8F;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;12345678910111213141516171819202122public class JdbcDemo1 { public static void main(String[] args) throws Exception{ //1.&#x6CE8;&#x518C;&#x9A71;&#x52A8;// DriverManager.registerDriver(new com.mysql.jdbc.Driver()); Class.forName(&quot;com.mysql.jdbc.Driver&quot;); //2.&#x83B7;&#x53D6;&#x8FDE;&#x63A5; Connection conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/eesy&quot;,&quot;root&quot;,&quot;1234&quot;); //3.&#x83B7;&#x53D6;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x9884;&#x5904;&#x7406;&#x5BF9;&#x8C61; PreparedStatement pstm = conn.prepareStatement(&quot;select * from account&quot;); //4.&#x6267;&#x884C;SQL&#xFF0C;&#x5F97;&#x5230;&#x7ED3;&#x679C;&#x96C6; ResultSet rs = pstm.executeQuery(); //5.&#x904D;&#x5386;&#x7ED3;&#x679C;&#x96C6; while(rs.next()){ System.out.println(rs.getString(&quot;name&quot;)); } //6.&#x91CA;&#x653E;&#x8D44;&#x6E90; rs.close(); pstm.close(); conn.close(); }} &#x4E0A;&#x8FF0;&#x662F;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x7684;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x3002;&#x53EF;&#x89C1;&#x5F53;&#x524D;&#x7C7B;&#x4E2D;&#x7684;main&#x51FD;&#x6570;&#x4E2D;&#x76F4;&#x63A5;&#x4F7F;&#x7528;new&#x6765;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5C31;&#x4EE3;&#x8868;&#x7740;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x66FF;&#x6362;&#x4E3A;&#x5176;&#x4ED6;&#x5B9E;&#x73B0;&#x7684;&#x7C7B;&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x5BF9;&#x6E90;&#x7801;&#x8FDB;&#x884C;&#x5927;&#x91CF;&#x7684;&#x4FEE;&#x6539;&#x3002;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x63A5;&#x53E3;&#x4FDD;&#x8BC1;&#x5B9E;&#x73B0;&#x7C7B;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x76F4;&#x63A5;&#x5728;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x8FD8;&#x662F;&#x975E;&#x5E38;&#x4E25;&#x91CD;&#x7684;&#x3002; 1.1 &#x7A0B;&#x5E8F;&#x95F4;&#x7684;&#x8026;&#x5408;&#x8026;&#x5408;&#x6307;&#x7A0B;&#x5E8F;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; &#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56; &#x65B9;&#x6CD5;&#x95F4;&#x7684;&#x4F9D;&#x8D56; &#x89E3;&#x8026;&#x662F;&#x6307;&#x964D;&#x4F4E;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x4E0D;&#x53EF;&#x80FD;&#x89E3;&#x9664;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002; &#x5728;&#x5B9E;&#x9645;&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x5E94;&#x8BE5;&#x505A;&#x5230;&#x7F16;&#x8BD1;&#x671F;&#x95F4;&#x4E0D;&#x4F9D;&#x8D56;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x624D;&#x4F9D;&#x8D56;&#x3002; &#x89E3;&#x8026;&#x7684;&#x601D;&#x8DEF;&#xFF1A; &#x901A;&#x8FC7;&#x53D1;&#x5C04;&#x6765;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#xFF0C;&#x907F;&#x514D;&#x4F7F;&#x7528;new&#x5173;&#x952E;&#x5B57;&#x521B;&#x5EFA; &#x901A;&#x8FC7;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x6765;&#x83B7;&#x53D6;&#x8981;&#x521B;&#x7684;&#x5BF9;&#x8C61;&#x5168;&#x9650;&#x5B9A;&#x7C7B;&#x540D; &#x5982;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#x7684;Class.forName(&quot;com.mysql.jdbc.Driver&quot;); 2. &#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x5728;&#x4E00;&#x822C;&#x7684;&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x5408;&#x4F5C;&#x5F00;&#x53D1;&#xFF0C;&#x4F1A;&#x8FDB;&#x884C;&#x5206;&#x5C42;&#x8BBE;&#x8BA1;&#x3002;&#x5982;service, dao&#x7B49;&#x5206;&#x5C42;&#x8BBE;&#x8BA1;&#x3002;&#x4E00;&#x822C;&#x662F;&#x4E0A;&#x5C42;&#x7684;&#x7C7B;&#x6709;&#x4E0B;&#x5C42;&#x7684;&#x7C7B;&#x4F5C;&#x4E3A;&#x5176;&#x6210;&#x5458;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x5176;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x6216;&#x8005;&#x5728;&#x4E0A;&#x5C42;&#x7C7B;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;new&#x4E00;&#x4E2A;&#x4E0B;&#x5C42;&#x7684;&#x7C7B;&#x3002; &#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x5F0A;&#x7AEF;&#x4E3B;&#x8981;&#x5728;&#x4E8E;&#xFF1A; &#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x7684;&#x89E3;&#x8026;&#xFF0C;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x662F;&#x975E;&#x5E38;&#x4E25;&#x91CD;&#x7684;&#x3002; &#x5982;&#x679C;&#x5B9A;&#x4E49;&#x4E86;&#x591A;&#x4E2A;&#x4E0A;&#x5C42;&#x7684;&#x7C7B;&#xFF0C;&#x90A3;&#x4E48;&#x6BCF;&#x4E00;&#x4E2A;&#x4E0A;&#x5C42;&#x7684;&#x7C7B;&#x4E2D;&#x90FD;&#x4F1A;&#x5B9A;&#x4E49;&#x4E00;&#x5957;&#x4E0B;&#x5C42;&#x7684;&#x7C7B;&#x3002;&#x8FD9;&#x662F;&#x591A;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x4F46;&#x662F;&#x6709;&#x65F6;&#x5019;&#x53EA;&#x9700;&#x8981;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;,&#x6BD4;&#x5982;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5176;&#x4E2D;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x7B49;&#x3002; &#x5E94;&#x7528;&#x80FD;&#x591F;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5230;&#x8D44;&#x6E90;&#xFF0C;&#x4E0D;&#x5229;&#x4E8E;&#x7EF4;&#x62A4;&#x3002; &#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x4E0A;&#x9762;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#x8BBE;&#x8BA1;&#x3002;&#x5177;&#x4F53;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465import java.io.InputStream;import java.util.Enumeration;import java.util.HashMap;import java.util.Map;import java.util.Properties;/** * &#x4E00;&#x4E2A;&#x521B;&#x5EFA;Bean&#x5BF9;&#x8C61;&#x7684;&#x5DE5;&#x5382; * * Bean&#xFF1A;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x82F1;&#x8BED;&#x4E2D;&#xFF0C;&#x6709;&#x53EF;&#x91CD;&#x7528;&#x7EC4;&#x4EF6;&#x7684;&#x542B;&#x4E49;&#x3002; * JavaBean&#xFF1A;&#x7528;java&#x8BED;&#x8A00;&#x7F16;&#x5199;&#x7684;&#x53EF;&#x91CD;&#x7528;&#x7EC4;&#x4EF6;&#x3002; * javabean &gt; &#x5B9E;&#x4F53;&#x7C7B; * * &#x5B83;&#x5C31;&#x662F;&#x521B;&#x5EFA;&#x6211;&#x4EEC;&#x7684;service&#x548C;dao&#x5BF9;&#x8C61;&#x7684;&#x3002; * * &#x7B2C;&#x4E00;&#x4E2A;&#xFF1A;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x6765;&#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x7684;service&#x548C;dao * &#x914D;&#x7F6E;&#x7684;&#x5185;&#x5BB9;&#xFF1A;&#x552F;&#x4E00;&#x6807;&#x8BC6;=&#x5168;&#x9650;&#x5B9A;&#x7C7B;&#x540D;&#xFF08;key=value) * &#x7B2C;&#x4E8C;&#x4E2A;&#xFF1A;&#x901A;&#x8FC7;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x53CD;&#x5C04;&#x521B;&#x5EFA;&#x5BF9;&#x8C61; * * &#x6211;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x662F;xml&#x4E5F;&#x53EF;&#x4EE5;&#x662F;properties */public class BeanFactory { //&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;Properties&#x5BF9;&#x8C61; private static Properties props; //&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;Map,&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x6211;&#x4EEC;&#x8981;&#x521B;&#x5EFA;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x6211;&#x4EEC;&#x628A;&#x5B83;&#x79F0;&#x4E4B;&#x4E3A;&#x5BB9;&#x5668; private static Map&lt;String,Object&gt; beans; //&#x4F7F;&#x7528;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x5757;&#x4E3A;Properties&#x5BF9;&#x8C61;&#x8D4B;&#x503C; static { try { //&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61; props = new Properties(); //&#x83B7;&#x53D6;properties&#x6587;&#x4EF6;&#x7684;&#x6D41;&#x5BF9;&#x8C61; InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream(&quot;bean.properties&quot;); props.load(in); //&#x5B9E;&#x4F8B;&#x5316;&#x5BB9;&#x5668; beans = new HashMap&lt;String,Object&gt;(); //&#x53D6;&#x51FA;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x6240;&#x6709;&#x7684;Key Enumeration keys = props.keys(); //&#x904D;&#x5386;&#x679A;&#x4E3E; while (keys.hasMoreElements()){ //&#x53D6;&#x51FA;&#x6BCF;&#x4E2A;Key String key = keys.nextElement().toString(); //&#x6839;&#x636E;key&#x83B7;&#x53D6;value String beanPath = props.getProperty(key); //&#x53CD;&#x5C04;&#x521B;&#x5EFA;&#x5BF9;&#x8C61; Object value = Class.forName(beanPath).newInstance(); //&#x628A;key&#x548C;value&#x5B58;&#x5165;&#x5BB9;&#x5668;&#x4E2D; beans.put(key,value); } }catch(Exception e){ throw new ExceptionInInitializerError(&quot;&#x521D;&#x59CB;&#x5316;properties&#x5931;&#x8D25;&#xFF01;&quot;); } } /** * &#x6839;&#x636E;bean&#x7684;&#x540D;&#x79F0;&#x83B7;&#x53D6;&#x5BF9;&#x8C61; * @param beanName * @return */ public static Object getBean(String beanName){ return beans.get(beanName); }} &#x5728;&#x7A0B;&#x5E8F;&#x7684;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8C03;&#x7528;BeanFactory&#x7C7B;&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;getBean()&#xFF0C;&#x4F20;&#x5165;&#x7C7B;&#x7684;key&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002; &#x4E0A;&#x8FF0;&#x5DE5;&#x5382;&#x7C7B;&#x5728;&#x52A0;&#x8F7D;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x5C31;&#x901A;&#x8FC7;&#x53D1;&#x5C04;&#x7684;&#x673A;&#x5236;&#x5C06;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x7C7B;&#x90FD;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x5B58;&#x653E;&#x5230;&#x4E86;&#x4E00;&#x4E2A;Map&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x4E4B;&#x4E3A;&#x5BB9;&#x5668;&#x3002;&#x7136;&#x540E;&#x5728;&#x5F00;&#x653E;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x4ED6;&#x4EE3;&#x7801;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x7C7B;&#x4E0D;&#x80FD;&#x591F;&#x4E4B;&#x95F4;new&#xFF0C;&#x800C;&#x662F;&#x5411;&#x5DE5;&#x5382;&#x7533;&#x8BF7;&#x3002;&#x8FD9;&#x6837;&#x5373;&#x89E3;&#x51B3;&#x4E86;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x4E14;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#xFF0C;&#x662F;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x5F00;&#x9500;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5219;&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x8DEF;&#x5F84;&#x66FF;&#x6362;&#x4E3A;&#x65B0;&#x7684;&#xFF0C;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E24;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x4E86;&#x540C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x5373;&#x53EF;&#xFF0C;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x540E;&#x7EED;&#x7EF4;&#x62A4;&#x3002; &#x8FD9;&#x79CD;&#x88AB;&#x52A8;&#x63A5;&#x6536;&#x7684;&#x65B9;&#x5F0F;&#x83B7;&#x53D6;&#x5BF9;&#x8C61;&#x7684;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x63A7;&#x5236;&#x53CD;&#x8F6C;(Inversion of Control)&#xFF0C;&#x5B83;&#x662F; spring &#x6846;&#x67B6;&#x7684;&#x6838;&#x5FC3;&#x4E4B;&#x4E00;&#x3002; 3. SpringSpring &#x662F;&#x5206;&#x5C42;&#x7684; Java SE/EE &#x5E94;&#x7528; full-stack &#x8F7B;&#x91CF;&#x7EA7;&#x5F00;&#x6E90;&#x6846;&#x67B6;&#xFF0C;&#x4EE5; IoC(Inverse Of Control:&#x53CD;&#x8F6C;&#x63A7;&#x5236;)&#x548C; AOP(Aspect Oriented Programming:&#x9762;&#x5411;&#x5207;&#x9762;&#x7F16;&#x7A0B;)&#x4E3A;&#x5185;&#x6838;&#x3002; &#x5176;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Spring学习笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Web</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ajax、jQuery]]></title>
    <url>%2F2019%2F07%2F15%2FAjax%E3%80%81jQuery%2F</url>
    <content type="text"><![CDATA[1. AjaxAsynchronous JavaScript and XML,&#x7528;JavaScript&#x6267;&#x884C;&#x5F02;&#x6B65;&#x7F51;&#x8DEF;&#x8BF7;&#x6C42;&#x3002; HTTP&#x8BF7;&#x6C42;&#x662F;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x7528;&#x6237;&#x505C;&#x7559;&#x5728;&#x5F53;&#x524D;&#x9875;&#x9762;&#x540C;&#x65F6;&#x53D1;&#x51FA;&#x65B0;&#x7684;HTTP&#x8BF7;&#x6C42;&#xFF0C;&#x9700;&#x8981;&#x7528;JavaScript&#x6765;&#x53D1;&#x9001;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x5E76;&#x7528;JavaScript&#x6765;&#x66F4;&#x65B0;&#x9875;&#x9762;&#x4FE1;&#x606F;&#x3002;&#x8FD9;&#x6837;&#x611F;&#x89C9;&#x505C;&#x7559;&#x5728;&#x5F53;&#x524D;&#x9875;&#x9762;&#xFF0C;&#x4F46;&#x662F;&#x5185;&#x5BB9;&#x5374;&#x5728;&#x66F4;&#x65B0;&#x3002; Ajax&#x662F;&#x5F02;&#x6B65;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x6765;&#x83B7;&#x5F97;&#x54CD;&#x5E94;&#x5E76;&#x66F4;&#x65B0;&#x9875;&#x9762;&#x3002;Ajax &#x662F;&#x4E00;&#x79CD;&#x5728;&#x65E0;&#x9700;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6574;&#x4E2A;&#x7F51;&#x9875;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x80FD;&#x591F;&#x66F4;&#x65B0;&#x90E8;&#x5206;&#x7F51;&#x9875;&#x7684;&#x6280;&#x672F;&#x3002;&#x901A;&#x8FC7;&#x5728;&#x540E;&#x53F0;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x5C11;&#x91CF;&#x6570;&#x636E;&#x4EA4;&#x6362;&#xFF0C;Ajax &#x53EF;&#x4EE5;&#x4F7F;&#x7F51;&#x9875;&#x5B9E;&#x73B0;&#x5F02;&#x6B65;&#x66F4;&#x65B0;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6574;&#x4E2A;&#x7F51;&#x9875;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5BF9;&#x7F51;&#x9875;&#x7684;&#x67D0;&#x90E8;&#x5206;&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#x3002;&#x4F20;&#x7EDF;&#x7684;&#x7F51;&#x9875;&#xFF08;&#x4E0D;&#x4F7F;&#x7528; Ajax&#xFF09;&#x5982;&#x679C;&#x9700;&#x8981;&#x66F4;&#x65B0;&#x5185;&#x5BB9;&#xFF0C;&#x5FC5;&#x987B;&#x91CD;&#x8F7D;&#x6574;&#x4E2A;&#x7F51;&#x9875;&#x9875;&#x9762;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;jQuery&#x6765;&#x5B9E;&#x73B0;Ajax&#x8BF7;&#x6C42;&#x7684;&#x793A;&#x4F8B;&#xFF1A; 12345678910111213141516// $.get(url, [data], [callback], [type])// $.post(url, [data], [callback], [type])/* * &#x53C2;&#x6570;&#xFF1A; * url&#xFF1A;&#x8BF7;&#x6C42;&#x8DEF;&#x5F84; * data&#xFF1A;&#x8BF7;&#x6C42;&#x53C2;&#x6570; * callback&#xFF1A;&#x56DE;&#x8C03;&#x51FD;&#x6570; * type&#xFF1A;&#x54CD;&#x5E94;&#x7ED3;&#x679C;&#x7684;&#x7C7B;&#x578B;*/function fun() { $.get(&quot;ajaxServlet&quot;,{username:&quot;rose&quot;},function (data) { alert(data); },&quot;text&quot;);}// &#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;Ajax&#x8BF7;&#x6C42;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x67D0;&#x4E2A;&#x6309;&#x94AE;&#x7ED1;&#x5B9A;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5219;&#x70B9;&#x51FB;&#x4E4B;&#x540E;&#x5C31;&#x4F1A;&#x53D1;&#x9001;Ajax&#x8BF7;&#x6C42;&#xFF0C;// &#x5728;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x8BF7;&#x6C42;&#x8DEF;&#x5F84;&#x7684;Servlet&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x903B;&#x8F91;&#x5904;&#x7406;&#x5E76;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x3002; 2. jQuery&#x200B; jQuery&#x662F;&#x4E00;&#x4E2A;&#x5FEB;&#x901F;&#x3001;&#x7B80;&#x6D01;&#x7684;JavaScript&#x6846;&#x67B6;&#x3002;&#x5B83;&#x5C01;&#x88C5;JavaScript&#x5E38;&#x7528;&#x7684;&#x529F;&#x80FD;&#x4EE3;&#x7801;&#xFF0C;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x7B80;&#x4FBF;&#x7684;JavaScript&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x4F18;&#x5316;HTML&#x6587;&#x6863;&#x64CD;&#x4F5C;&#x3001;&#x4E8B;&#x4EF6;&#x5904;&#x7406;&#x3001;&#x52A8;&#x753B;&#x8BBE;&#x8BA1;&#x548C;Ajax&#x4EA4;&#x4E92;&#x3002;&#x5177;&#x4F53;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6587;&#x6863;&#x3002; &#x5176;&#x5728;&#x6587;&#x6863;&#x52A0;&#x8F7D;&#x4E4B;&#x540E;&#x9700;&#x8981;&#x5236;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#x5373;&#x53EF;&#xFF1A; 1234$(function(){ //...});// &#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x591A;&#x4E2A;&#x8FD9;&#x79CD;&#x6A21;&#x5757;&#xFF0C;&#x53EF;&#x5728;&#x6587;&#x6863;&#x52A0;&#x8F7D;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x5BF9;&#x65F6;&#x95F4;&#x8FDB;&#x884C;&#x7ED1;&#x5B9A;&#xFF0C;&#x52A8;&#x6001;&#x53D1;&#x9001;Ajax&#x8BF7;&#x6C42;&#xFF0C;&#x83B7;&#x5F97;&#x6570;&#x636E;&#x4E4B;&#x540E;&#x5C55;&#x793A;&#x9875;&#x9762;&#x7B49;&#x7B49;&#x3002;]]></content>
      <categories>
        <category>JavaWeb学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MVC开发模式、Filter、Lister]]></title>
    <url>%2F2019%2F07%2F11%2FMVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E3%80%81Filter%E3%80%81Lister%2F</url>
    <content type="text"><![CDATA[1. MVC&#x5F00;&#x53D1;&#x6A21;&#x5F0F; &#x65E9;&#x671F;&#x53EA;&#x6709;servlet&#xFF0C;&#x53EA;&#x80FD;&#x4F7F;&#x7528;response&#x8F93;&#x51FA;&#x6807;&#x7B7E;&#x6570;&#x636E;&#xFF0C;&#x975E;&#x5E38;&#x9EBB;&#x70E6; &#x540E;&#x6765;&#x6709;jsp&#xFF0C;&#x7B80;&#x5316;&#x4E86;servlet&#x5F00;&#x53D1;&#xFF0C;&#x4F46;&#x662F;&#x5728;jsp&#x4E2D;&#x5199;&#x5927;&#x91CF;&#x7684;java&#x4EE3;&#x7801;&#xFF0C;&#x53C8;&#x5199;html&#x4EE3;&#x7801;&#xFF0C;&#x7EF4;&#x62A4;&#x56F0;&#x96BE;&#xFF0C;&#x96BE;&#x4E8E;&#x5206;&#x5DE5;&#x534F;&#x4F5C; &#x6700;&#x540E;&#x501F;&#x9274;mvc&#x5F00;&#x53D1;&#x6A21;&#x5F0F;&#xFF0C;&#x4F7F;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x66F4;&#x52A0;&#x5408;&#x7406;&#x3002; 1.1 Model&#x6A21;&#x578B;&#xFF0C;JavaBean&#xFF0C;&#x5B8C;&#x6210;&#x5177;&#x4F53;&#x7684;&#x4E1A;&#x52A1;&#x64CD;&#x4F5C; 1.2 View&#x89C6;&#x56FE;&#xFF0C;JSP&#xFF0C;&#x7528;&#x4E8E;&#x5C55;&#x793A;&#x6570;&#x636E; 1.3 Controller&#x63A7;&#x5236;&#x5668;&#xFF0C;Servlet&#xFF0C; &#x83B7;&#x53D6;&#x7528;&#x6237;&#x8F93;&#x5165; &#x8C03;&#x7528;&#x6A21;&#x578B; &#x5C06;&#x6570;&#x636E;&#x4EA4;&#x7ED9;&#x89C6;&#x56FE;&#x8FDB;&#x884C;&#x5C55;&#x793A; 2 &#x4E09;&#x5C42;&#x67B6;&#x6784;&#xFF1A;&#x8F6F;&#x4EF6;&#x8BBE;&#x8BA1;&#x67B6;&#x6784; &#x754C;&#x9762;&#x5C42;&#xFF1A;&#x7528;&#x6237;&#x770B;&#x5F97;&#x89C1;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x754C;&#x9762;&#x4E0A;&#x7684;&#x7EC4;&#x4EF6;&#x548C;&#x670D;&#x52A1;&#x5668;&#x4EA4;&#x4E92; &#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;&#xFF1A;&#x5904;&#x7406;&#x4E1A;&#x52A1;&#x903B;&#x8F91; &#x6570;&#x636E;&#x8BBF;&#x95EE;&#x5C42;&#xFF1A;&#x64CD;&#x7EB5;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x6587;&#x4EF6; 3. FilterServlet/Filter/Listerner&#x662F;JavaWeb&#x4E09;&#x5927;&#x7EC4;&#x4EF6;&#x3002;&#x5176;&#x4E2D;&#x76D1;&#x542C;&#x5668;&#x7528;&#x4E8E;&#x76D1;&#x542C;&#x8BBF;&#x95EE;&#x8DEF;&#x5F84;&#xFF0C;&#x5982;&#x679C;&#x8BBF;&#x95EE;&#x8DEF;&#x5F84;&#x6EE1;&#x8DB3;&#x76D1;&#x542C;&#x6761;&#x4EF6;&#xFF0C;&#x5219; &#x6267;&#x884C;&#x8FC7;&#x6EE4;&#x5668; &#x6267;&#x884C;&#x653E;&#x884C;&#x540E;&#x7684;&#x8D44;&#x6E90; &#x56DE;&#x6765;&#x6267;&#x884C;&#x8FC7;&#x6EE4;&#x5668;&#x653E;&#x884C;&#x4EE3;&#x7801;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801; 123456789101112131415161718192021222324252627package top.gaogx.www.filter;/* @author wangdh @date 2019-07-11 - 09:25 */import javax.servlet.*;import javax.servlet.annotation.WebFilter;import java.io.IOException;@WebFilter(urlPatterns = &quot;/*&quot;)public class FilterDemo implements Filter { public static void main(String[] args) { } @Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException { System.out.println(&quot;filter....&quot;); filterChain.doFilter(servletRequest, servletResponse); System.out.println(&quot;filter end....&quot;); }} 3.1 &#x65B9;&#x6CD5;&#xFF1A; init&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x542F;&#x52A8;&#xFF0C;&#x521B;&#x5EFA;Filter&#x5BF9;&#x8C61;&#xFF0C;&#x8C03;&#x7528;init&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x7528;&#x4E8E;&#x52A0;&#x8F7D;&#x8D44;&#x6E90; doFilter&#xFF1A;&#x6BCF;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#x65F6;&#xFF0C;&#x4F1A;&#x6267;&#x884C;&#xFF0C;&#x6267;&#x884C;&#x591A;&#x6B21; destroy&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x5173;&#x95ED;&#xFF0C;Filter&#x5BF9;&#x8C61;&#x9500;&#x6BC1;&#xFF0C;&#x6267;&#x884C;destroy&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x7528;&#x4E8E;&#x91CA;&#x653E;&#x8D44;&#x6E90; 3.2 &#x529F;&#x80FD;&#x7528;&#x4E8E;&#x5B8C;&#x6210;&#x901A;&#x7528;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x767B;&#x5F55;&#x9A8C;&#x8BC1;&#xFF0C;&#x7EDF;&#x4E00;&#x7F16;&#x7801;&#x5904;&#x7406;&#xFF0C;&#x654F;&#x611F;&#x5B57;&#x7B26;&#x5904;&#x7406;&#x7B49;&#x3002; 3.3 &#x8FC7;&#x6EE4;&#x5668;&#x94FE;&#x6267;&#x884C;&#x987A;&#x5E8F;&#xFF1A; Filter1 Filter2 &#x8D44;&#x6E90;&#x6267;&#x884C; Filter2 Filter1 &#x5148;&#x540E;&#x987A;&#x5E8F;&#x5982;&#x4E0B;&#xFF1A; &#x6CE8;&#x89E3;&#x914D;&#x7F6E;&#xFF0C;&#x6309;&#x7167;&#x7C7B;&#x540D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6BD4;&#x8F83;&#x89C4;&#x5219;&#x6BD4;&#x8F83;&#xFF0C;&#x503C;&#x5C0F;&#x7684;&#x5148;&#x6267;&#x884C; web.xml&#x914D;&#x7F6E;&#xFF1A;&#x5B9A;&#x4E49;&#x5728;&#x524D;&#x9762;&#x7684;&#x5148;&#x6267;&#x884C; 4. Lister&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x673A;&#x5236;&#xFF1A; &#x4E8B;&#x4EF6;&#xFF1A;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5; &#x4E8B;&#x4EF6;&#x6E90;&#xFF1A;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x7684;&#x5730;&#x65B9; &#x76D1;&#x542C;&#x5668;&#xFF1A;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; &#x6CE8;&#x518C;&#x76D1;&#x542C;&#xFF1A;&#x5C06;&#x4E8B;&#x4EF6;&#x3001;&#x4E8B;&#x4EF6;&#x6E90;&#x3001;&#x76D1;&#x542C;&#x5668;&#x7ED1;&#x5B9A;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x4E8B;&#x4EF6;&#x6E90;&#x53D1;&#x751F;&#x67D0;&#x4E2A;&#x65F6;&#x95F4;&#x4E4B;&#x540E;&#xFF0C;&#x6267;&#x884C;&#x76D1;&#x542C;&#x5668;&#x4EE3;&#x7801;]]></content>
      <categories>
        <category>JavaWeb学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Servlet三大域对象]]></title>
    <url>%2F2019%2F07%2F10%2FServlet%E4%B8%89%E5%A4%A7%E5%9F%9F%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[1. Servlet&#x4E09;&#x5927;&#x57DF;&#x5BF9;&#x8C61;&#x5728;Servlet&#x4E2D;&#xFF0C;&#x4E3A;&#x4E86;&#x5171;&#x4EAB;&#x6570;&#x636E;&#xFF0C;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E9B;&#x57DF;&#x5BF9;&#x8C61;&#x3002;&#x5176;&#x4E2D;request/session/application(ServletContext)&#x6709;&#x4E0D;&#x540C;&#x7684;&#x8303;&#x56F4;&#x3002; 1.1. requestrequest&#x4EE3;&#x8868;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#xFF0C;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x5C31;&#x6709;&#x4E00;&#x4E2A;request&#x3002; &#x4F5C;&#x7528;&#x57DF;&#xFF1A;&#x53EA;&#x5728;&#x5F53;&#x524D;&#x8BF7;&#x6C42;&#x4E2D;&#x6709;&#x6548; &#x7528;&#x5904;&#xFF1A;&#x7528;&#x4E8E;&#x670D;&#x52A1;&#x5668;&#x95F4;&#x540C;&#x4E00;&#x9875;&#x9762;&#x4E4B;&#x95F4;&#x7684;&#x53C2;&#x6570;&#x4F20;&#x9012;&#xFF0C;&#x8F6C;&#x53D1;&#xFF0C;&#x8868;&#x5355;&#x7684;&#x63A7;&#x4EF6;&#x503C;&#x4F20;&#x9012;&#x3002; &#x65B9;&#x6CD5;&#xFF1A;request.setAttribute(); request.getAttribute(); request.removeAttribute(); request.getParameter() 12345678910111213141516171819202122232425262728293031323334353637383940414243444546// File1import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@WebServlet(&quot;/demo1&quot;)public class Demo1 extends HttpServlet { public static void main(String[] args) { } @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { System.out.println(&quot;demo1&quot;); req.setAttribute(&quot;test&quot;, &quot;aaaa&quot;); req.getRequestDispatcher(&quot;/demo2&quot;).forward(req, resp); }}// File2import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@WebServlet(&quot;/demo2&quot;)public class Demo2 extends HttpServlet { public static void main(String[] args) { } @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { Object aaa = req.getAttribute(&quot;test&quot;); System.out.println(aaa); System.out.println(&quot;demo2&quot;); }} 1.2 session&#x670D;&#x52A1;&#x5668;&#x4E3A;&#x6BCF;&#x4E2A;&#x5BF9;&#x8BDD;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;session&#x5BF9;&#x8C61;&#xFF0C;session&#x4E2D;&#x7684;&#x6570;&#x636E;&#x53EF;&#x4F9B;&#x5F53;&#x524D;&#x4F1A;&#x8BDD;&#x4E2D;&#x7684;&#x6240;&#x6709;sevlet&#x5171;&#x4EAB;&#x3002; &#x7528;&#x5904;&#xFF1A;&#x5E38;&#x7528;&#x4E8E;&#x767B;&#x5F55;&#x9875;&#x9762;&#x9A8C;&#x8BC1;&#x3002;(&#x5F53;&#x7528;&#x6237;&#x767B;&#x5F55;&#x6210;&#x529F;&#x540E;&#x6D4F;&#x89C8;&#x5668;&#x5206;&#x914D;&#x5176;&#x4E00;&#x4E2A;session&#x952E;&#x503C;&#x5BF9;) &#x65B9;&#x6CD5;&#xFF1A;session.setAttribute(); session.getAttribute(); session.removeAttribute() 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849// File1import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.IOException;@WebServlet(&quot;/sessionDemo1&quot;)public class SessionDemo1 extends HttpServlet { public static void main(String[] args) { } @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { HttpSession sess = req.getSession(); sess.setAttribute(&quot;test&quot;, &quot;aaa&quot;); }}// File2import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.IOException;@WebServlet(&quot;/sessionDemo2&quot;)public class SessionDemo2 extends HttpServlet { public static void main(String[] args) { } @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { HttpSession reqSession = req.getSession(); Object test = reqSession.getAttribute(&quot;test&quot;); System.out.println(test); }} 1.3 application(ServletContext)&#x6240;&#x6709;&#x7528;&#x6237;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x4E2A;Web&#x7AD9;&#x70B9;&#x6709;&#x4E00;&#x4E2A;ServletContext&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x670D;&#x52A1;&#x5668;&#x542F;&#x52A8;&#x65F6;&#x521B;&#x5EFA;&#xFF0C;&#x5173;&#x95ED;&#x65F6;&#x9500;&#x6BC1;&#x3002; &#x7528;&#x5904;&#xFF1A;&#x4E00;&#x822C;&#x5728;&#x591A;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x4F7F;&#x7528;&#x3002;&#x5982;&#x6B64;&#x7AD9;&#x70B9;&#x4E00;&#x5171;&#x88AB;&#x8BBF;&#x95EE;&#x4E86;&#x591A;&#x5C11;&#x6B21;&#x3002; &#x65B9;&#x6CD5;&#xFF1A;setAttribute();getAttribute() 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748// File1import javax.servlet.ServletContext;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@WebServlet(&quot;/appDemo1&quot;)public class AppDemo1 extends HttpServlet { public static void main(String[] args) { } @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { ServletContext servletContext = getServletContext(); servletContext.setAttribute(&quot;test&quot;, &quot;aa&quot;); }}// File2import javax.servlet.ServletContext;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@WebServlet(&quot;/appDemo2&quot;)public class AppDemo2 extends HttpServlet { public static void main(String[] args) { } @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { ServletContext servletContext = getServletContext(); Object test = servletContext.getAttribute(&quot;test&quot;); System.out.println(test); }} 1.4 &#x5C0F;&#x7ED3;&#x603B;&#x7684;&#x6765;&#x8BF4;&#xFF0C;&#x4E0A;&#x8FF0;&#x4E09;&#x4E2A;&#x57DF;&#x5BF9;&#x8C61;&#x7684;&#x8303;&#x56F4;&#x662F;&#x7531;&#x5C0F;&#x53D8;&#x5927;&#x7684;request&lt;session&lt;ServletContext&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6839;&#x636E;&#x6570;&#x636E;&#x7684;&#x4F20;&#x64AD;&#x8303;&#x56F4;&#x6765;&#x83B7;&#x53D6;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;&#x5C5E;&#x6027;&#xFF1A;&#x503C;&#x5BF9;&#xFF0C;&#x4F9B;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x4F7F;&#x7528;&#x3002;]]></content>
      <categories>
        <category>JavaWeb学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Servlet总结]]></title>
    <url>%2F2019%2F07%2F09%2FServlet%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[1. ServletServlet(Server Applet)&#x5C31;&#x662F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;Interface&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#x5C0F;&#x7A0B;&#x5E8F;&#x3002;&#x5B9A;&#x4E49;&#x4E86;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5C0F;&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x4E94;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x4F46;&#x662F;&#x5149;&#x6709;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x53BB;&#x8BBF;&#x95EE;&#x5B83;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x9700;&#x8981;&#x5C06;&#x8FD9;&#x4E2A;&#x7C7B;&#x653E;&#x5230;&#x5BB9;&#x5668;&#x4E2D;&#xFF0C;&#x5982;tomcat&#x3002;&#x7136;&#x540E;&#x7ED9;&#x6BCF;&#x4E2A;servlet&#x7C7B;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x8BBF;&#x95EE;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x901A;&#x8FC7;&#x8DEF;&#x5F84;&#xFF0C;tomcat&#x5C31;&#x80FD;&#x591F;&#x52A0;&#x8F7D;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x5176;&#x4E2D;&#x7684;&#x76F8;&#x5173;&#x65B9;&#x6CD5;&#x3002; &#x5176;&#x4E2D;&#x4E00;&#x5171;&#x5305;&#x542B;&#x5982;&#x4E0B;&#x7684;&#x51E0;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A; init(ServletConfig):void &#x5728;&#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#x7684;&#x65F6;&#x5019;&#x8FD0;&#x884C;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5; getServletCOnfig():ServletConfig service(ServletRequest, ServletResponse) &#x5728;&#x63A5;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x4E4B;&#x540E;&#x7684;&#x903B;&#x8F91;&#x5904;&#x7406; getServletInfo():String destroy():void &#x5728;&#x5B9E;&#x4F8B;&#x88AB;&#x9500;&#x6BC1;&#x4E4B;&#x540E;&#x7684;&#x5904;&#x7406; &#x8BF4;&#x660E;&#xFF1A; &#x5728;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;Servlet&#x5C0F;&#x7A0B;&#x5E8F;&#x53EA;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;init&#x65B9;&#x6CD5;&#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#x3002; Servlet&#x5185;&#x90E8;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x662F;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x4E0D;&#x5305;&#x542B;&#x5E95;&#x5C42;&#x7684;&#x94FE;&#x63A5;&#x89E3;&#x6790;&#xFF0C;&#x5C4F;&#x853D;&#x4E86;&#x5927;&#x91CF;&#x5E95;&#x5C42;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x53EA;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x5176;&#x4E2D;&#x7684;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x3002; Tomca&#x4E3A;Servlet&#x4F20;&#x5165;&#x4E86;&#x4E09;&#x4E2A;&#x53C2;&#x6570;ServletConfig/ServletRequest/ServletResponse 1.1 ServletConfig&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x4E86;Servlet&#x7684;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x5185;&#x90E8;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5176;&#x83B7;&#x53D6; 1.2 ServletRequest&#x5C01;&#x88C5;&#x4E86;&#x8BF7;&#x6C42;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;&#x76F4;&#x63A5;&#x83B7;&#x53D6;&#x3002; 1.3 ServletResponseTomcat&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;ServletResponse&#x5BF9;&#x8C61;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;service&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x6765;&#x5411;&#x5176;&#x5185;&#x90E8;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x5199;&#x5185;&#x5BB9;&#xFF0C;Tomcat&#x5728;Servlet&#x5199;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x5C06;&#x5176;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x4F5C;&#x4E3A;&#x54CD;&#x5E94;&#x53D1;&#x9001;&#x7ED9;&#x8BF7;&#x6C42;&#x7AEF;&#x3002; 2. GenericServletServlet&#x4E2D;&#x7684;service&#x65B9;&#x6CD5;&#x662F;&#x4E00;&#x4E2A;&#x63A7;&#x65B9;&#x6CD5;&#xFF0C;&#x76F4;&#x63A5;&#x7EE7;&#x627F;&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5224;&#x65AD;&#x8BF7;&#x6C42;&#x7C7B;&#x578B;&#xFF0C;&#x7136;&#x540E;&#x505A;&#x51FA;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x5199;&#x8D77;&#x6765;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x9EBB;&#x70E6;&#x7684;&#x3002;GenericServlet&#x662F;&#x4E00;&#x4E2A;&#x7EE7;&#x627F;Servlet&#x7684;&#x7C7B;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x5BF9;Servlet&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x4E86;&#x8FDB;&#x4E00;&#x6B65;&#x5C01;&#x88C5;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x90E8;&#x5206;&#x7684;&#x4FEE;&#x6539;&#x5730;&#x65B9;&#xFF1A; 1234567891011public void init(ServletConfig config) throws ServletException { this.config = config; this.init(); }public void init() throws ServletException { }/*1. &#x63D0;&#x5347;&#x4E86;config&#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x4FBF;&#x4E8E;&#x5176;&#x4ED6;&#x65B9;&#x6CD5;&#x4F7F;&#x7528;2. &#x5B50;&#x7C7B;&#x53EF;&#x4EE5;&#x91CD;&#x5199;&#x7A7A;&#x7684;init&#x65B9;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x540C;&#x65F6;&#x88AB;&#x4E0A;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x5BF9;&#x8C61;&#x8C03;&#x7528;*/ &#x4F46;&#x662F;service&#x65B9;&#x6CD5;&#x6CA1;&#x6709;&#x88AB;&#x5B9E;&#x73B0;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x590D;&#x6742;&#x7684;&#x903B;&#x8F91;&#x3002; 3. HttpServletHttpServlet&#x662F;&#x4E00;&#x4E2A;&#x7EE7;&#x627F;GenericServlet&#x7684;&#x7C7B;&#x3002;GenericServlet&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;HttpServlet&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;&#x4E86;service&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String method = req.getMethod(); long lastModified; if (method.equals(&quot;GET&quot;)) { lastModified = this.getLastModified(req); if (lastModified == -1L) { this.doGet(req, resp); } else { long ifModifiedSince; try { ifModifiedSince = req.getDateHeader(&quot;If-Modified-Since&quot;); } catch (IllegalArgumentException var9) { ifModifiedSince = -1L; } if (ifModifiedSince &lt; lastModified / 1000L * 1000L) { this.maybeSetLastModified(resp, lastModified); this.doGet(req, resp); } else { resp.setStatus(304); } } } else if (method.equals(&quot;HEAD&quot;)) { lastModified = this.getLastModified(req); this.maybeSetLastModified(resp, lastModified); this.doHead(req, resp); } else if (method.equals(&quot;POST&quot;)) { this.doPost(req, resp); } else if (method.equals(&quot;PUT&quot;)) { this.doPut(req, resp); } else if (method.equals(&quot;DELETE&quot;)) { this.doDelete(req, resp); } else if (method.equals(&quot;OPTIONS&quot;)) { this.doOptions(req, resp); } else if (method.equals(&quot;TRACE&quot;)) { this.doTrace(req, resp); } else { String errMsg = lStrings.getString(&quot;http.method_not_implemented&quot;); Object[] errArgs = new Object[]{method}; errMsg = MessageFormat.format(errMsg, errArgs); resp.sendError(501, errMsg); } } &#x53EF;&#x4EE5;&#x770B;&#x5230;service&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x5BF9;&#x5404;&#x79CD;&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x4E86;&#x5224;&#x65AD;&#x5E76;&#x8F6C;&#x53D1;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x60F3;&#x5B9E;&#x73B0;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5199;service&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5B9E;&#x73B0;doXXX&#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x3002;&#x76F8;&#x5F53;&#x4E8E;&#x8D77;&#x5230;&#x4E00;&#x4E2A;controller&#x7684;&#x4F5C;&#x7528;&#x3002; &#x5728;&#x5404;&#x79CD;doXXX&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#xFF0C;HttpServlet&#x4E5F;&#x8FDB;&#x884C;&#x4E86;&#x5B9E;&#x73B0;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; 123456789protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { String protocol = req.getProtocol(); String msg = lStrings.getString(&quot;http.method_get_not_supported&quot;); if (protocol.endsWith(&quot;1.1&quot;)) { resp.sendError(405, msg); } else { resp.sendError(400, msg); } } &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x9ED8;&#x8BA4;&#x7684;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#x662F;&#x76F4;&#x63A5;&#x62A5;&#x9519;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x7684;&#x4E86;&#x7EE7;&#x627F;&#x4E86;HttpServlet&#xFF0C;&#x6CA1;&#x6709;&#x91CD;&#x5199;&#x4E0A;&#x8FF0;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8C03;&#x7528;&#x7684;&#x8BDD;&#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x62A5;&#x9519;&#x3002; &#x6709;&#x4E86;serivce&#x65B9;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x9700;&#x8981;&#x91CD;&#x5199;&#x5BF9;&#x5E94;&#x7684;doXXX&#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x3002; 4. &#x603B;&#x7ED3;&#x8981;&#x60F3;&#x5F00;&#x53D1;&#x4E00;&#x4E2A;Servlet&#x5C0F;&#x7A0B;&#x5E8F;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x7EE7;&#x627F;HttpServlet&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x5199;&#x5BF9;&#x5E94;&#x7684;doXXX&#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x3002; &#x4E0A;&#x8FF0;&#x6A21;&#x5F0F;&#x5229;&#x7528;&#x4E86;&#x6A21;&#x677F;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF1A;&#x7236;&#x7C7B;&#x628A;&#x80FD;&#x5199;&#x7684;&#x903B;&#x8F91;&#x90FD;&#x5199;&#x5B8C;&#xFF0C;&#x628A;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#x4E1A;&#x52A1;&#x4EE3;&#x7801;&#x62BD;&#x6210;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x8C03;&#x7528;&#x5B83;&#x3002;&#x5F53;&#x5B50;&#x7C7B;&#x91CD;&#x5199;&#x8BE5;&#x65B9;&#x6CD5;&#xFF0C;&#x6574;&#x4E2A;&#x4E1A;&#x52A1;&#x4EE3;&#x7801;&#x5C31;&#x6D3B;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>JavaWeb学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTTP协议总结]]></title>
    <url>%2F2019%2F07%2F06%2FHTTP%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[HTTP &#x534F;&#x8BAE;&#x603B;&#x7ED3;1 HTTP&#x7B80;&#x4ECB; &#x8D85;&#x6587;&#x672C;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x5B9A;&#x4E49;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x5668;&#x901A;&#x4FE1;&#x65F6;&#x4F20;&#x8F93;&#x7684;&#x6570;&#x636E;&#x683C;&#x5F0F; &#x57FA;&#x4E8E;TCP/IP&#x7684;&#x9AD8;&#x7EA7;&#x534F;&#x8BAE;&#xFF0C;&#x9ED8;&#x8BA4;&#x7AEF;&#x53E3;&#x53F7;&#x4E3A;80 &#x57FA;&#x4E8E;&#x8BF7;&#x6C42;-&#x54CD;&#x5E94;&#x6A21;&#x578B;&#xFF0C;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#x5BF9;&#x5E94;&#x4E00;&#x6B21;&#x54CD;&#x5E94; &#x65E0;&#x72B6;&#x6001;&#xFF0C;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x4E4B;&#x95F4;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#xFF0C;&#x4E0D;&#x80FD;&#x4EA4;&#x4E92;&#x6570;&#x636E;&#x3002;&#x9700;&#x8981;&#x4F7F;&#x7528;Cookie&#x548C;Session&#x6765;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x4EA4;&#x4E92; &#x7248;&#x672C;&#x4E3A;1.0&#x65F6;&#xFF0C;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x90FD;&#x4F1A;&#x5EFA;&#x7ACB;&#x65B0;&#x7684;&#x94FE;&#x63A5;&#xFF0C;1.1&#x7248;&#x672C;&#x65F6;&#x53EF;&#x4EE5;&#x590D;&#x7528;&#x94FE;&#x63A5;&#x3002;&#x5BF9;&#x5E94;&#x5934;&#x90E8;&#x7684;keep-alive &#x5728;HTTP&#x534F;&#x8BAE;&#x4E2D;&#xFF0C;&#x4E24;&#x8005;&#x4E4B;&#x95F4;&#x7684;&#x4EA4;&#x4E92;&#x6A21;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; &#x5BA2;&#x6237;&#x7AEF;&#x5411;&#x670D;&#x52A1;&#x5668;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x8BF7;&#x6C42;&#x884C;&#x3001;&#x8BF7;&#x6C42;&#x5934;&#x3001;&#x8BF7;&#x6C42;&#x7A7A;&#x884C;&#x3001;&#x8BF7;&#x6C42;&#x4F53; &#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x4E4B;&#x540E;&#xFF0C;&#x505A;&#x51FA;&#x76F8;&#x5173;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#xFF0C;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x54CD;&#x5E94;&#xFF0C;&#x5305;&#x542B;&#x54CD;&#x5E94;&#x884C;&#x3001;&#x54CD;&#x5E94;&#x5934;&#x3001;&#x54CD;&#x5E94;&#x7A7A;&#x884C;&#x3001;&#x54CD;&#x5E94;&#x4F53; &#x4E0D;&#x540C;&#x6B21;&#x7684;&#x4EA4;&#x4E92;&#x4E4B;&#x95F4;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#xFF0C;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x548C;&#x8BB0;&#x5F55;&#x72B6;&#x6001;&#x9700;&#x8981;&#x4F7F;&#x7528;Cookie&#x548C;Session&#x673A;&#x5236;&#x3002; 2 &#x8BF7;&#x6C42;&#x6D88;&#x606F;&#x6570;&#x636E;&#x683C;&#x5F0F;1.2.1 &#x8BF7;&#x6C42;&#x884C;&#x8BF7;&#x6C42;&#x884C;&#x5305;&#x542B;&#x4E09;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x3001;&#x8BF7;&#x6C42;url&#x3001;&#x8BF7;&#x6C42;&#x534F;&#x8BAE;/&#x7248;&#x672C;&#xFF0C;&#x5982;GET /login.html HTTTP/1.1 &#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#xFF1A;HTTP&#x534F;&#x8BAE;&#x4E2D;&#x4E00;&#x5171;&#x6709;7&#x4E2D;&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x5E38;&#x7528;&#x7684;&#x6709;&#x4E24;&#x79CD;&#xFF0C;GET POST&#x3002; GET&#xFF1A; &#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x5728;&#x8BF7;&#x6C42;&#x884C;&#x4E2D;&#xFF0C;&#x5728;url&#x540E; &#x8BF7;&#x6C42;&#x7684;url&#x662F;&#x6709;&#x9650;&#x5236;&#x7684; &#x4E0D;&#x592A;&#x5B89;&#x5168; &#x793A;&#x4F8B;https://www.baidu.com/s?wd=test&amp;rsv_spt=1&amp;rsv_iqid=0xfbda17eb000278bf&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=baiduhome_pg&amp;rsv_enter=1&amp;rsv_sug3=3 POST&#xFF1A; &#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x5728;&#x8BF7;&#x6C42;&#x4F53;&#x4E2D; &#x8BF7;&#x6C42;&#x7684;url&#x957F;&#x5EA6;&#x6CA1;&#x6709;&#x9650;&#x5236; &#x76F8;&#x5BF9;&#x5B89;&#x5168; 1.2.2 &#x8BF7;&#x6C42;&#x5934;&#xFF1A;&#x200B; &#x5BA2;&#x6237;&#x7AEF;&#x6D4F;&#x89C8;&#x5668;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5668;&#x7684;&#x4E00;&#x4E9B;&#x4FE1;&#x606F;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;&#x8BF7;&#x6C42;&#x5934;&#x540D;&#x79F0;:&#x8BF7;&#x6C42;&#x5934;&#x503C;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#xFF1A; User-Agent&#xFF1A;&#x6D4F;&#x89C8;&#x5668;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x8BBF;&#x95EE;&#x4F7F;&#x7528;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x7248;&#x672C;&#x4FE1;&#x606F;&#x3002;&#x670D;&#x52A1;&#x5668;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x8BE5;&#x90E8;&#x5206;&#x4FE1;&#x606F;&#xFF0C;&#x89E3;&#x51B3;&#x6D4F;&#x89C8;&#x5668;&#x517C;&#x5BB9;&#x95EE;&#x9898; Refer&#xFF1A;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5668;&#x662F;&#x4ECE;&#x54EA;&#x4E2A;&#x9875;&#x9762;&#x6765;&#x7684;&#x8BF7;&#x6C42;&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x9632;&#x76D7;&#x94FE;&#x3001;&#x7EDF;&#x8BA1;&#x5DE5;&#x4F5C;&#x3002; 1.2.3 &#x8BF7;&#x6C42;&#x7A7A;&#x884C;&#xFF1A;&#x7A7A;&#x884C;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x4E8E;&#x5206;&#x5272;POST&#x8BF7;&#x6C42;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x3001;&#x8BF7;&#x6C42;&#x4F53;&#x7684;&#x3002; 1.2.4 &#x8BF7;&#x6C42;&#x4F53;&#xFF1A;&#x5C01;&#x88C5;POST&#x8BF7;&#x6C42;&#x6D88;&#x606F;&#x7684;&#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x7684;&#x3002;&#x5BF9;&#x4E8E;GET&#x8BF7;&#x6C42;&#x6CA1;&#x6709;&#x8BF7;&#x6C42;&#x4F53;&#x3002; 1.2.5 &#x5B9E;&#x4F8B;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x6D88;&#x606F;&#x7684;&#x5B9E;&#x4F8B;&#xFF1A; 1234567891011POST /login.html HTTP/1.1 //&#x8BF7;&#x6C42;&#x884C;Host: localhost //&#x8BF7;&#x6C42;&#x5934;User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateReferer: http://localhost/login.htmlConnection: keep-aliveUpgrade-Insecure-Requests: 1 //&#x8BF7;&#x6C42;&#x7A7A;&#x884C;username=zhangsan // &#x8BF7;&#x6C42;&#x4F53; 3 &#x54CD;&#x5E94;&#x6D88;&#x606F;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x54CD;&#x5E94;&#x6D88;&#x606F;&#x662F;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53D1;&#x9001;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7531;&#x54CD;&#x5E94;&#x884C;&#x3001;&#x54CD;&#x5E94;&#x5934;&#x3001;&#x54CD;&#x5E94;&#x7A7A;&#x884C;&#x3001;&#x54CD;&#x5E94;&#x4F53;&#x7EC4;&#x6210;&#x3002; 1.3.1 &#x54CD;&#x5E94;&#x884C;&#x54CD;&#x5E94;&#x884C;&#x7531;&#x534F;&#x8BAE;/&#x7248;&#x672C; &#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801; &#x72B6;&#x6001;&#x7801;&#x63CF;&#x8FF0;&#x7EC4;&#x6210; &#x54CD;&#x5E94;&#x72B6;&#x6001;&#x7801;&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x544A;&#x8BC9;&#x5BA2;&#x6237;&#x7AEF;&#x6D4F;&#x89C8;&#x5668;&#x672C;&#x6B21;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x7684;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#xFF0C;&#x90FD;&#x662F;&#x4E09;&#x4F4D;&#x6570;&#x5B57; 1XX&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x63A5;&#x53D7;&#x5BA2;&#x6237;&#x7AEF;&#x6D88;&#x606F;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x63A5;&#x6536;&#x5B8C;&#x6210;&#xFF0C;&#x7B49;&#x5F85;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#xFF0C;&#x53D1;&#x9001;1XX&#x72B6;&#x6001;&#x7801; 2XX&#xFF1A;&#x6210;&#x529F;&#x3002;&#x5982;200 3XX&#xFF1A;&#x91CD;&#x5B9A;&#x5411;&#x3002;302(&#x91CD;&#x5B9A;&#x5411;)&#x3001;304(&#x8BBF;&#x95EE;&#x7F13;&#x5B58;) 4XX&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x9519;&#x8BEF;&#x3002;&#x5982;404(&#x8BF7;&#x6C42;&#x7684;&#x8DEF;&#x5F84;&#x6CA1;&#x6709;&#x5BF9;&#x5E94;&#x7684;&#x8D44;&#x6E90;)&#x3001;405(&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x6CA1;&#x6709;&#x5BF9;&#x5E94;&#x7684;doXXX&#x65B9;&#x6CD5;) 5XX&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#xFF0C;&#x4EE3;&#x8868;500(&#x670D;&#x52A1;&#x5668;&#x5185;&#x90E8;&#x51FA;&#x73B0;&#x9519;&#x8BEF;&#xFF0C;&#x5982;&#x903B;&#x8F91;&#x5904;&#x7406;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x751F;&#x9664;0&#x7684;&#x60C5;&#x51B5;) 1.3.2 &#x54CD;&#x5E94;&#x5934;&#x683C;&#x5F0F;&#x4E3A;&#x5934;&#x540D;&#x79F0;:&#x503C;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x54CD;&#x5E94;&#x5934;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; Content-Type&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x544A;&#x8BC9;&#x5BA2;&#x6237;&#x7AEF;&#x54CD;&#x5E94;&#x4F53;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x548C;&#x7F16;&#x7801;&#x683C;&#x5F0F; Content-disposition&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x544A;&#x8BC9;&#x5BA2;&#x6237;&#x7AEF;&#x4EE5;&#x4EC0;&#x4E48;&#x683C;&#x5F0F;&#x6253;&#x5F00;&#x6570;&#x636E; In-line &#xFF1A;&#x9ED8;&#x8BA4;&#xFF0C;&#x5728;&#x9875;&#x9762;&#x4E2D;&#x6253;&#x5F00; Attachment;filename=xxx&#xFF1A;&#x4EE5;&#x9644;&#x4EF6;&#x7684;&#x5F62;&#x5F0F;&#x6253;&#x5F00;&#x54CD;&#x5E94;&#x4F53;&#xFF0C;&#x6587;&#x4EF6;&#x4E0B;&#x8F7D; 1.3.3 &#x54CD;&#x5E94;&#x4F53;&#x4EE3;&#x8868;&#x4F20;&#x8F93;&#x7684;&#x6570;&#x636E; 1.3.4 &#x5B9E;&#x4F8B;12345678910111213HTTP/1.1 200 OKContent-Type: text/html;charset=UTF-8Content-Length: 101Date: Wed, 06 Jun 2018 07:08:42 GMT&lt;html&gt; &lt;head&gt; &lt;title&gt;$Title$&lt;/title&gt; &lt;/head&gt; &lt;body&gt; hello , response &lt;/body&gt;&lt;/html&gt; 4 Cookie&#x4E00;&#x6B21;&#x4F1A;&#x8BDD;&#x4E2D;&#x5305;&#x542B;&#x591A;&#x6B21;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x3002;&#x4E00;&#x6B21;&#x4F1A;&#x8BDD;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x7B2C;&#x4E00;&#x6B21;&#x7ED9;&#x670D;&#x52A1;&#x5668;&#x8D44;&#x6E90;&#x53D1;&#x9001;&#x8D44;&#x6E90;&#xFF0C;&#x4F1A;&#x8BDD;&#x5EFA;&#x7ACB;&#xFF0C;&#x76F4;&#x5230;&#x4E00;&#x65B9;&#x65AD;&#x5F00;&#x4E3A;&#x6B62; &#x6709;&#x4E86;&#x4F1A;&#x8BDD;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x6B21;&#x4F1A;&#x8BDD;&#x7684;&#x8303;&#x56F4;&#x5185;&#x7684;&#x591A;&#x6B21;&#x8BF7;&#x6C42;&#x95F4;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x3002; &#x4F7F;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#x4E24;&#x79CD;&#xFF1A; Cookie&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x8BDD;&#x6280;&#x672F; Session&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x4F1A;&#x8BDD;&#x6280;&#x672F; Cookie&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x8BDD;&#x6280;&#x672F;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x3002;&#x57FA;&#x4E8E;&#x54CD;&#x5E94;&#x5934;&#x7684;set-cookie&#x548C;&#x8BF7;&#x6C42;&#x5934;&#x7684;cookie&#x5B9E;&#x73B0;&#x3002; &#x4E00;&#x6B21;&#x53EF;&#x4EE5;&#x53D1;&#x9001;&#x591A;&#x4E2A;cookie&#x3002; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x5F53;&#x6D4F;&#x89C8;&#x5668;&#x5173;&#x95ED;&#x4E4B;&#x540E;&#xFF0C;Cookie&#x6570;&#x636E;&#x88AB;&#x9500;&#x6BC1;&#x3002;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x8BBE;&#x7F6E;Cookie&#x5B58;&#x6D3B;&#x65F6;&#x95F4;&#xFF0C;&#x5199;&#x5230;&#x786C;&#x76D8;&#x6301;&#x4E45;&#x5316;&#x5B58;&#x50A8; &#x5355;&#x4E2A;cookie&#x7684;&#x5927;&#x5C0F;&#x6709;&#x9650;&#x5236;(4KB)&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x4E0B;&#x7684;&#x603B;&#x7684;cookie&#x6570;&#x91CF;&#x4E5F;&#x6709;&#x9650;&#x5236;(20&#x4E2A;) cookie&#x4E00;&#x822C;&#x5B58;&#x653E;&#x5C11;&#x91CF;&#x4E0D;&#x592A;&#x654F;&#x611F;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E0D;&#x767B;&#x5F55;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B8C;&#x6210;&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x8EAB;&#x4EFD;&#x8BC6;&#x522B; 5. Session&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x4F1A;&#x8BDD;&#x6280;&#x672F;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5728;&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x8C61;&#x4E2D;&#x3002;Session&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;Cookie&#x7684;&#x3002;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5C06;SessionID&#x4EE5;Cookie&#x7684;&#x5F62;&#x5F0F;&#x53D1;&#x9001;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x7136;&#x540E;&#x5BA2;&#x6237;&#x7AEF;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x5C06;&#x5176;&#x9644;&#x5728;Cookie&#x4E2D;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x80FD;&#x591F;&#x8BC6;&#x522B;&#x8FD9;&#x6B21;&#x8BF7;&#x6C42;&#x662F;&#x5C5E;&#x4E8E;&#x54EA;&#x4E00;&#x4E2A;Session&#x3002; &#x7EC6;&#x8282;&#xFF1A; &#x5BA2;&#x6237;&#x7AEF;&#x5173;&#x95ED;&#x540E;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x4E0D;&#x5173;&#x95ED;&#xFF0C;&#x4E24;&#x6B21;&#x7684;Session&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;Session&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x670D;&#x52A1;&#x5668;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;CookieJSESSIONID&#xFF0C;&#x8BBE;&#x7F6E;&#x6700;&#x5927;&#x5B58;&#x6D3B;&#x65F6;&#x95F4;&#xFF0C;&#x8BA9;cookie&#x6301;&#x4E45;&#x5316;&#x5B58;&#x50A8;&#x3002; &#x670D;&#x52A1;&#x5668;&#x5173;&#x95ED;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x4E0D;&#x5173;&#x95ED;&#xFF0C;&#x4E24;&#x6B21;&#x83B7;&#x53D6;&#x7684;Session&#x4E0D;&#x662F;&#x4E00;&#x4E2A;Session Session&#x9500;&#x6BC1;&#x7684;&#x65F6;&#x673A;&#xFF1A; &#x670D;&#x52A1;&#x5668;&#x5173;&#x95ED; session&#x5BF9;&#x8C61;&#x8C03;&#x7528;invalidate() session&#x9ED8;&#x8BA4;&#x5931;&#x6548;&#x65F6;&#x95F4; session&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x4E00;&#x6B21;&#x4F1A;&#x8BDD;&#x7684;&#x591A;&#x6B21;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF0C;&#x5B58;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x3002;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#xFF0C;&#x4EFB;&#x610F;&#x5927;&#x5C0F;&#x7684;&#x6570;&#x636E; 5.1 Cookie&#x548C;Session&#x7684;&#x533A;&#x522B; session&#x5B58;&#x50A8;&#x6570;&#x636E;&#x5728;&#x670D;&#x52A1;&#x5668;&#xFF0C;cookie&#x5728;&#x5BA2;&#x6237;&#x7AEF; session&#x6CA1;&#x6709;&#x6570;&#x636E;&#x5927;&#x5C0F;&#x9650;&#x5236;&#xFF0C;cookie&#x6709; session&#x6570;&#x636E;&#x5B89;&#x5168;&#xFF0C;cookie&#x76F8;&#x5BF9;&#x4E0D;&#x5B89;&#x5168;]]></content>
      <categories>
        <category>JavaWeb学习</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo如何搭建个人博客]]></title>
    <url>%2F2019%2F07%2F04%2Fhexo%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[&#x5982;&#x4F55;&#x5229;&#x7528;hexo&#x642D;&#x5EFA;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;1. &#x7B80;&#x4ECB;hexo&#x662F;&#x4E00;&#x4E2A;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x6846;&#x67B6;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x672C;&#x5730;&#x5199;&#x597D;&#x535A;&#x5BA2;&#x4E4B;&#x540E;&#xFF0C;&#x7136;&#x540E;&#x540C;&#x6B65;&#x5230;github&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x591F;&#x642D;&#x5EFA;&#x8D77;&#x4E2A;&#x4EBA;&#x7684;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#x3002;hexo&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x64CD;&#x4F5C;&#x6765;&#x8F7B;&#x677E;&#x521B;&#x5EFA;&#x535A;&#x5BA2;&#x3002; 2. &#x73AF;&#x5883;&#x914D;&#x7F6E;&#x9996;&#x5148;&#x5728;&#x672C;&#x5730;&#x5B89;&#x88C5;node.js &#x5177;&#x4F53;&#x5B89;&#x88C5;&#x53C2;&#x8003;&#x5B98;&#x7F51; &#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;node&#x7684;&#x6E90;&#x6539;&#x4E3A;&#x56FD;&#x5185;&#x963F;&#x91CC;&#x955C;&#x50CF; npm install -g cnpm --registry=https://registry.npm.taobao.org &#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;cnpm&#x5B89;&#x88C5;&#x4F9D;&#x8D56; &#x9996;&#x5148;&#x5B89;&#x88C5;hexo&#x6846;&#x67B6; cnpm install -g hexo-cli &#x7136;&#x540E;&#x521B;&#x5EFA;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5982;blog&#x4E4B;&#x540E;&#x7684;&#x6240;&#x6709;&#x5185;&#x5BB9;&#x90FD;&#x5728;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E2D; &#x8FDB;&#x5165;&#x5230;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#xFF0C;&#x8FD0;&#x884C;hexo init&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x4E0B;&#x8F7D;&#x76F8;&#x5173;&#x6587;&#x4EF6; &#x5176;&#x4E2D;_config.yml&#x662F;&#x914D;&#x7F6E;&#x6587;&#x4EF6; hexo s&#x4E3A;&#x542F;&#x52A8;&#x535A;&#x5BA2;&#xFF0C;&#x4E00;&#x822C;&#x53EA;&#x662F;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5; hexo n &quot;&#x6211;&#x7684;&#x7B2C;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&quot; &#x4F1A;&#x5728;/source/_post&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x4E2D;&#x5B58;&#x5728;&#x7740;&#x521B;&#x5EFA;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x4E3A;md&#x683C;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x5229;&#x7528;&#x7F16;&#x8F91;&#x5668;&#x7F16;&#x8F91;&#x5373;&#x53EF;&#x3002; &#x521B;&#x5EFA;&#x5B8C;&#x535A;&#x5BA2;&#x4E4B;&#x540E;&#xFF0C;&#x5728;blog&#x76EE;&#x5F55;&#x4E0B;&#x8FD0;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 123hexo clean # &#x6E05;&#x7406;&#x6587;&#x4EF6;hexo g # &#x91CD;&#x65B0;&#x751F;&#x6210;hexo s # &#x542F;&#x52A8;&#x670D;&#x52A1; &#x7136;&#x540E;&#x5728;&#x672C;&#x5730;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5; 3. &#x90E8;&#x7F72;&#x5230;github&#x5728;&#x4E2A;&#x4EBA;github&#x8D26;&#x53F7;&#x4E2D;&#x521B;&#x5EFA;&#x4ED3;&#x5E93;user_name.github.io &#x5F97;&#x5230;&#x4ED3;&#x5E93;&#x8DEF;&#x5F84;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x914D;&#x7F6E;blod/_config.yml &#x914D;&#x7F6E;&#x6700;&#x540E;&#x7684;Deployment&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/wangdh15/wangdh15.github.io.git branch: master &#x7136;&#x540E;&#x8FD0;&#x884C;hexo d&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x90E8;&#x7F72; &#x7136;&#x540E;&#x8BBF;&#x95EE;wangdh15.github.io&#x5373;&#x53EF;&#x8BBF;&#x95EE;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2; &#x5728;&#x6BCF;&#x6B21;&#x5199;&#x535A;&#x5BA2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x662F; 12345hexo n blog_name # &#x521B;&#x5EFA;&#x535A;&#x5BA2; &#xFF0C; &#x7F16;&#x8F91;&#x5185;&#x5BB9;hexo clean # &#x6E05;&#x7A7A;&#x5185;&#x5BB9;hexo g # &#x91CD;&#x65B0;&#x751F;&#x6210;hexo s # &#x672C;&#x5730;&#x542F;&#x52A8;&#x6D4B;&#x8BD5;hexo d # &#x90E8;&#x7F72;&#x5230;&#x8FDC;&#x7A0B; 4. &#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x7684;&#x662F;yilia&#x4E3B;&#x9898;&#xFF0C;&#x9879;&#x76EE;&#x5730;&#x5740; &#x5177;&#x4F53;&#x4F7F;&#x7528;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x5C06;&#x9879;&#x76EE;pull&#x5230;blog/themes&#x6587;&#x4EF6;&#x5939;&#x4E0B; &#x7136;&#x540E;&#x4FEE;&#x6539;blod/_config.yml&#x4E2D;&#x7684;theme&#x4E3A;&#x4E0A;&#x8FF0;&#x4E3B;&#x9898;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1theme: yilia &#x7136;&#x540E;&#x91CD;&#x65B0;&#x6574;&#x4E2A;&#x535A;&#x5BA2;&#x9879;&#x76EE;&#x5373;&#x53EF;&#x3002;&#x5177;&#x4F53;&#x7684;yilia&#x76F8;&#x5173;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x9879;&#x76EE;&#x3002; 5. &#x6DFB;&#x52A0;&#x56FE;&#x7247;&#x9996;&#x5148;&#x5728;hexo&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5C06;post_asset_folder&#x8BBE;&#x7F6E;&#x4E3A;true&#xFF0C;&#x8FD9;&#x6837;&#x5728;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x6863;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x8FD9;&#x4E2A;&#x535A;&#x5BA2;&#x7684;&#x8D44;&#x6E90;&#x3002; &#x7136;&#x540E;&#x5B89;&#x88C5;&#x4E00;&#x4E2A;&#x63D2;&#x4EF6;npm install hexo-asset-image@0.0.2 --save &#x4E4B;&#x540E;&#x5728;&#x7B14;&#x8BB0;&#x4E2D;&#x76F4;&#x63A5;&#x4F7F;&#x7528;md&#x7684;&#x8BED;&#x6CD5;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x6587;&#x6863;&#x5C31;&#x80FD;&#x591F;&#x6B63;&#x5E38;&#x663E;&#x793A;&#x56FE;&#x7247;]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
